{
	"id": "047db4191d8d03fc64b0d7a115769e15",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PaymentGateway.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ninterface IStableCoin is IERC20 {\n    // If you want to call specialized functions from your StableCoin, do so here.\n}\n\ninterface IAggregatorOracle {\n    function getMedianPrice(address token) external view returns (uint256);\n}\n\ninterface IDexInterface {\n    function swapCBTCForCUSD(uint256 cBTCAmtIn, uint256 minCUSDOut) external;\n}\n\ninterface ICBTC is IERC20 {\n    // If your cBTC contract has special methods, add them here.\n}\n\ncontract PaymentGateway is Ownable(msg.sender) {\n    struct Merchant {\n        address payable payoutAddress;\n        bool active;\n    }\n\n    mapping(bytes32 => Merchant) public merchants;\n    mapping(bytes32 => uint256) public merchantBalances;\n\n    IStableCoin public stableCoin;\n    ICBTC public cBTC;\n    IAggregatorOracle public aggregator;\n    IDexInterface public dex;\n\n    event MerchantRegistered(bytes32 indexed merchantId, address payoutAddress);\n    event MerchantUpdated(bytes32 indexed merchantId, address payoutAddress, bool active);\n    event PaymentReceived(bytes32 indexed merchantId, address indexed buyer, uint256 amount);\n    event MerchantWithdrawn(bytes32 indexed merchantId, uint256 amount, address payoutAddress);\n\n    /**\n     * @dev Constructor setting the addresses of stablecoin, aggregator, cBTC, and dex\n     * @param _stableCoin The address of cUSD stablecoin\n     * @param _cBTC The address of the cBTC token\n     * @param _aggregator The address of the aggregator oracle\n     * @param _dex The address of the AMM DEX\n     */\n    constructor(\n        address _stableCoin,\n        address _cBTC,\n        address _aggregator,\n        address _dex\n    ) {\n        require(_stableCoin != address(0), \"Invalid stablecoin address\");\n        require(_cBTC != address(0), \"Invalid cBTC address\");\n        require(_aggregator != address(0), \"Invalid aggregator address\");\n        require(_dex != address(0), \"Invalid DEX address\");\n\n        stableCoin = IStableCoin(_stableCoin);\n        cBTC = ICBTC(_cBTC);\n        aggregator = IAggregatorOracle(_aggregator);\n        dex = IDexInterface(_dex);\n    }\n\n    /**\n     * @dev Register a merchant.\n     * @param merchantId A unique identifier for the merchant (e.g. keccak256(\"merchantName\"))\n     * @param payoutAddress The address where merchant wants to receive funds\n     */\n    function registerMerchant(bytes32 merchantId, address payable payoutAddress) external onlyOwner {\n        require(merchantId != 0x0, \"Invalid merchantId\");\n        require(payoutAddress != address(0), \"Invalid payout address\");\n        require(!merchants[merchantId].active, \"Merchant already registered\");\n\n        merchants[merchantId] = Merchant({\n            payoutAddress: payoutAddress,\n            active: true\n        });\n\n        emit MerchantRegistered(merchantId, payoutAddress);\n    }\n\n    /**\n     * @dev Update merchant info.\n     * @param merchantId The merchant identifier\n     * @param payoutAddress New payout address\n     * @param active New active status\n     */\n    function updateMerchant(bytes32 merchantId, address payable payoutAddress, bool active) external onlyOwner {\n        require(merchants[merchantId].active, \"Merchant not registered\");\n        require(payoutAddress != address(0), \"Invalid payout address\");\n\n        merchants[merchantId].payoutAddress = payoutAddress;\n        merchants[merchantId].active = active;\n        emit MerchantUpdated(merchantId, payoutAddress, active);\n    }\n\n    /**\n     * @dev Pay a merchant directly in cUSD. User must have approved this contract to spend cUSD.\n     * @param merchantId The merchant to pay\n     * @param amount The amount of cUSD to pay\n     */\n    function payMerchant(bytes32 merchantId, uint256 amount) external {\n        Merchant memory m = merchants[merchantId];\n        require(m.active, \"Merchant not active\");\n\n        require(stableCoin.transferFrom(msg.sender, address(this), amount), \"Transfer failed\");\n        merchantBalances[merchantId] += amount;\n\n        emit PaymentReceived(merchantId, msg.sender, amount);\n    }\n\n    /**\n     * @dev Merchant withdraws their accumulated cUSD funds.\n     * Only owner can trigger this withdrawal in the current example.\n     * A real scenario would allow the merchant themselves to withdraw.\n     * @param merchantId The merchant ID\n     */\n    function withdrawMerchantFunds(bytes32 merchantId) external onlyOwner {\n        require(merchants[merchantId].active, \"Merchant not active\");\n        uint256 balance = merchantBalances[merchantId];\n        require(balance > 0, \"No balance to withdraw\");\n\n        merchantBalances[merchantId] = 0;\n        address payable payout = merchants[merchantId].payoutAddress;\n\n        require(stableCoin.transfer(payout, balance), \"Transfer failed\");\n        emit MerchantWithdrawn(merchantId, balance, payout);\n    }\n\n    /**\n     * @dev Pay a merchant using cBTC. This function:\n     * 1. Calculates how much cBTC is needed for the target cUSD amount using aggregator prices.\n     * 2. Transfers cBTC from the user.\n     * 3. Approves the DEX to spend cBTC.\n     * 4. Calls the DEX to swap cBTC into cUSD.\n     * 5. Credits the merchant in cUSD.\n     *\n     * User must have approved this contract to spend cBTC.\n     *\n     * @param merchantId The merchant to pay\n     * @param cUSDTargetAmount How many cUSD the merchant should receive\n     */\n    function payMerchantInCBTC(bytes32 merchantId, uint256 cUSDTargetAmount) external {\n        Merchant memory m = merchants[merchantId];\n        require(m.active, \"Merchant not active\");\n\n        // Get price of cBTC in terms of cUSD from the aggregator\n        uint256 cBTCPriceInCUSD = aggregator.getMedianPrice(address(cBTC));\n        require(cBTCPriceInCUSD > 0, \"Invalid price\");\n\n        // Calculate required cBTC: cUSDTargetAmount / (cBTCPriceInCUSD/1e18) = (cUSDTargetAmount * 1e18) / cBTCPriceInCUSD\n        uint256 cBTCAmount = (cUSDTargetAmount * 1e18) / cBTCPriceInCUSD;\n\n        // Transfer cBTC from user\n        require(cBTC.transferFrom(msg.sender, address(this), cBTCAmount), \"Transfer failed\");\n\n        // Approve DEX to spend cBTC\n        require(cBTC.approve(address(dex), cBTCAmount), \"cBTC approve failed\");\n\n        // Perform the swap on the DEX\n        // We expect at least cUSDTargetAmount out. If market conditions changed,\n        // you might want to allow some slippage. Here we require exact or better.\n        dex.swapCBTCForCUSD(cBTCAmount, cUSDTargetAmount);\n\n        // After swap, this contract now has at least cUSDTargetAmount in stableCoin\n        merchantBalances[merchantId] += cUSDTargetAmount;\n\n        emit PaymentReceived(merchantId, msg.sender, cUSDTargetAmount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PaymentGateway.sol": {
				"IAggregatorOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getMedianPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMedianPrice(address)": "adfe34f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getMedianPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PaymentGateway.sol\":\"IAggregatorOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/PaymentGateway.sol\":{\"keccak256\":\"0xeed4f6a87e740a05a04ac9c603047a879131eb3884e9083464aa89b3a5854658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://303de87d6eb65619051946e79784c3d5e2ed57c19d4d9e34b2ca3506ad958977\",\"dweb:/ipfs/QmNcWr9EHiDtCJ1VxVXHaEND1Xs8gkud7zS8f6b7gF8BmB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ICBTC": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PaymentGateway.sol\":\"ICBTC\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/PaymentGateway.sol\":{\"keccak256\":\"0xeed4f6a87e740a05a04ac9c603047a879131eb3884e9083464aa89b3a5854658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://303de87d6eb65619051946e79784c3d5e2ed57c19d4d9e34b2ca3506ad958977\",\"dweb:/ipfs/QmNcWr9EHiDtCJ1VxVXHaEND1Xs8gkud7zS8f6b7gF8BmB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDexInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cBTCAmtIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minCUSDOut",
									"type": "uint256"
								}
							],
							"name": "swapCBTCForCUSD",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"swapCBTCForCUSD(uint256,uint256)": "3a96d086"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cBTCAmtIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCUSDOut\",\"type\":\"uint256\"}],\"name\":\"swapCBTCForCUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PaymentGateway.sol\":\"IDexInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/PaymentGateway.sol\":{\"keccak256\":\"0xeed4f6a87e740a05a04ac9c603047a879131eb3884e9083464aa89b3a5854658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://303de87d6eb65619051946e79784c3d5e2ed57c19d4d9e34b2ca3506ad958977\",\"dweb:/ipfs/QmNcWr9EHiDtCJ1VxVXHaEND1Xs8gkud7zS8f6b7gF8BmB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStableCoin": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PaymentGateway.sol\":\"IStableCoin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/PaymentGateway.sol\":{\"keccak256\":\"0xeed4f6a87e740a05a04ac9c603047a879131eb3884e9083464aa89b3a5854658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://303de87d6eb65619051946e79784c3d5e2ed57c19d4d9e34b2ca3506ad958977\",\"dweb:/ipfs/QmNcWr9EHiDtCJ1VxVXHaEND1Xs8gkud7zS8f6b7gF8BmB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PaymentGateway": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stableCoin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_cBTC",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_aggregator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dex",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "merchantId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "payoutAddress",
									"type": "address"
								}
							],
							"name": "MerchantRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "merchantId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "payoutAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "MerchantUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "merchantId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "payoutAddress",
									"type": "address"
								}
							],
							"name": "MerchantWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "merchantId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PaymentReceived",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "aggregator",
							"outputs": [
								{
									"internalType": "contract IAggregatorOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cBTC",
							"outputs": [
								{
									"internalType": "contract ICBTC",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dex",
							"outputs": [
								{
									"internalType": "contract IDexInterface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "merchantBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "merchants",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "payoutAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "merchantId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "payMerchant",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "merchantId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "cUSDTargetAmount",
									"type": "uint256"
								}
							],
							"name": "payMerchantInCBTC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "merchantId",
									"type": "bytes32"
								},
								{
									"internalType": "address payable",
									"name": "payoutAddress",
									"type": "address"
								}
							],
							"name": "registerMerchant",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "contract IStableCoin",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "merchantId",
									"type": "bytes32"
								},
								{
									"internalType": "address payable",
									"name": "payoutAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "updateMerchant",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "merchantId",
									"type": "bytes32"
								}
							],
							"name": "withdrawMerchantFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor setting the addresses of stablecoin, aggregator, cBTC, and dex",
								"params": {
									"_aggregator": "The address of the aggregator oracle",
									"_cBTC": "The address of the cBTC token",
									"_dex": "The address of the AMM DEX",
									"_stableCoin": "The address of cUSD stablecoin"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"payMerchant(bytes32,uint256)": {
								"details": "Pay a merchant directly in cUSD. User must have approved this contract to spend cUSD.",
								"params": {
									"amount": "The amount of cUSD to pay",
									"merchantId": "The merchant to pay"
								}
							},
							"payMerchantInCBTC(bytes32,uint256)": {
								"details": "Pay a merchant using cBTC. This function: 1. Calculates how much cBTC is needed for the target cUSD amount using aggregator prices. 2. Transfers cBTC from the user. 3. Approves the DEX to spend cBTC. 4. Calls the DEX to swap cBTC into cUSD. 5. Credits the merchant in cUSD. User must have approved this contract to spend cBTC.",
								"params": {
									"cUSDTargetAmount": "How many cUSD the merchant should receive",
									"merchantId": "The merchant to pay"
								}
							},
							"registerMerchant(bytes32,address)": {
								"details": "Register a merchant.",
								"params": {
									"merchantId": "A unique identifier for the merchant (e.g. keccak256(\"merchantName\"))",
									"payoutAddress": "The address where merchant wants to receive funds"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateMerchant(bytes32,address,bool)": {
								"details": "Update merchant info.",
								"params": {
									"active": "New active status",
									"merchantId": "The merchant identifier",
									"payoutAddress": "New payout address"
								}
							},
							"withdrawMerchantFunds(bytes32)": {
								"details": "Merchant withdraws their accumulated cUSD funds. Only owner can trigger this withdrawal in the current example. A real scenario would allow the merchant themselves to withdraw.",
								"params": {
									"merchantId": "The merchant ID"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PaymentGateway.sol\":600:6796  contract PaymentGateway is Ownable(msg.sender) {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PaymentGateway.sol\":1663:2226  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PaymentGateway.sol\":635:645  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/PaymentGateway.sol\":1825:1826  0 */\n  0x00\n    /* \"contracts/PaymentGateway.sol\":1802:1827  _stableCoin != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PaymentGateway.sol\":1802:1813  _stableCoin */\n  dup5\n    /* \"contracts/PaymentGateway.sol\":1802:1827  _stableCoin != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PaymentGateway.sol\":1794:1858  require(_stableCoin != address(0), \"Invalid stablecoin address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"contracts/PaymentGateway.sol\":1893:1894  0 */\n  0x00\n    /* \"contracts/PaymentGateway.sol\":1876:1895  _cBTC != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PaymentGateway.sol\":1876:1881  _cBTC */\n  dup4\n    /* \"contracts/PaymentGateway.sol\":1876:1895  _cBTC != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PaymentGateway.sol\":1868:1920  require(_cBTC != address(0), \"Invalid cBTC address\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"contracts/PaymentGateway.sol\":1961:1962  0 */\n  0x00\n    /* \"contracts/PaymentGateway.sol\":1938:1963  _aggregator != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PaymentGateway.sol\":1938:1949  _aggregator */\n  dup3\n    /* \"contracts/PaymentGateway.sol\":1938:1963  _aggregator != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PaymentGateway.sol\":1930:1994  require(_aggregator != address(0), \"Invalid aggregator address\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"contracts/PaymentGateway.sol\":2028:2029  0 */\n  0x00\n    /* \"contracts/PaymentGateway.sol\":2012:2030  _dex != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PaymentGateway.sol\":2012:2016  _dex */\n  dup2\n    /* \"contracts/PaymentGateway.sol\":2012:2030  _dex != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PaymentGateway.sol\":2004:2054  require(_dex != address(0), \"Invalid DEX address\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"contracts/PaymentGateway.sol\":2090:2101  _stableCoin */\n  dup4\n    /* \"contracts/PaymentGateway.sol\":2065:2075  stableCoin */\n  0x03\n  0x00\n    /* \"contracts/PaymentGateway.sol\":2065:2102  stableCoin = IStableCoin(_stableCoin) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PaymentGateway.sol\":2125:2130  _cBTC */\n  dup3\n    /* \"contracts/PaymentGateway.sol\":2112:2116  cBTC */\n  0x04\n  0x00\n    /* \"contracts/PaymentGateway.sol\":2112:2131  cBTC = ICBTC(_cBTC) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PaymentGateway.sol\":2172:2183  _aggregator */\n  dup2\n    /* \"contracts/PaymentGateway.sol\":2141:2151  aggregator */\n  0x05\n  0x00\n    /* \"contracts/PaymentGateway.sol\":2141:2184  aggregator = IAggregatorOracle(_aggregator) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PaymentGateway.sol\":2214:2218  _dex */\n  dup1\n    /* \"contracts/PaymentGateway.sol\":2194:2197  dex */\n  0x06\n  0x00\n    /* \"contracts/PaymentGateway.sol\":2194:2219  dex = IDexInterface(_dex) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PaymentGateway.sol\":1663:2226  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/PaymentGateway.sol\":600:6796  contract PaymentGateway is Ownable(msg.sender) {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_30:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_31:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_50\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_30\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_32:\n    /* \"#utility.yul\":641:665   */\n  tag_52\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_31\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_53:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_33:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_55\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_32\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1665   */\ntag_3:\n    /* \"#utility.yul\":942:948   */\n  0x00\n    /* \"#utility.yul\":950:956   */\n  dup1\n    /* \"#utility.yul\":958:964   */\n  0x00\n    /* \"#utility.yul\":966:972   */\n  dup1\n    /* \"#utility.yul\":1015:1018   */\n  0x80\n    /* \"#utility.yul\":1003:1012   */\n  dup6\n    /* \"#utility.yul\":994:1001   */\n  dup8\n    /* \"#utility.yul\":990:1013   */\n  sub\n    /* \"#utility.yul\":986:1019   */\n  slt\n    /* \"#utility.yul\":983:1103   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1022:1101   */\n  tag_58\n  tag_28\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":983:1103   */\ntag_57:\n    /* \"#utility.yul\":1142:1143   */\n  0x00\n    /* \"#utility.yul\":1167:1231   */\n  tag_59\n    /* \"#utility.yul\":1223:1230   */\n  dup8\n    /* \"#utility.yul\":1214:1220   */\n  dup3\n    /* \"#utility.yul\":1203:1212   */\n  dup9\n    /* \"#utility.yul\":1199:1221   */\n  add\n    /* \"#utility.yul\":1167:1231   */\n  tag_33\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1157:1231   */\n  swap5\n  pop\n    /* \"#utility.yul\":1113:1241   */\n  pop\n    /* \"#utility.yul\":1280:1282   */\n  0x20\n    /* \"#utility.yul\":1306:1370   */\n  tag_60\n    /* \"#utility.yul\":1362:1369   */\n  dup8\n    /* \"#utility.yul\":1353:1359   */\n  dup3\n    /* \"#utility.yul\":1342:1351   */\n  dup9\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1306:1370   */\n  tag_33\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1296:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1251:1380   */\n  pop\n    /* \"#utility.yul\":1419:1421   */\n  0x40\n    /* \"#utility.yul\":1445:1509   */\n  tag_61\n    /* \"#utility.yul\":1501:1508   */\n  dup8\n    /* \"#utility.yul\":1492:1498   */\n  dup3\n    /* \"#utility.yul\":1481:1490   */\n  dup9\n    /* \"#utility.yul\":1477:1499   */\n  add\n    /* \"#utility.yul\":1445:1509   */\n  tag_33\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1435:1509   */\n  swap3\n  pop\n    /* \"#utility.yul\":1390:1519   */\n  pop\n    /* \"#utility.yul\":1558:1560   */\n  0x60\n    /* \"#utility.yul\":1584:1648   */\n  tag_62\n    /* \"#utility.yul\":1640:1647   */\n  dup8\n    /* \"#utility.yul\":1631:1637   */\n  dup3\n    /* \"#utility.yul\":1620:1629   */\n  dup9\n    /* \"#utility.yul\":1616:1638   */\n  add\n    /* \"#utility.yul\":1584:1648   */\n  tag_33\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1574:1648   */\n  swap2\n  pop\n    /* \"#utility.yul\":1529:1658   */\n  pop\n    /* \"#utility.yul\":845:1665   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1671:1789   */\ntag_34:\n    /* \"#utility.yul\":1758:1782   */\n  tag_64\n    /* \"#utility.yul\":1776:1781   */\n  dup2\n    /* \"#utility.yul\":1758:1782   */\n  tag_31\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1753:1756   */\n  dup3\n    /* \"#utility.yul\":1746:1783   */\n  mstore\n    /* \"#utility.yul\":1671:1789   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1795:2017   */\ntag_9:\n    /* \"#utility.yul\":1888:1892   */\n  0x00\n    /* \"#utility.yul\":1926:1928   */\n  0x20\n    /* \"#utility.yul\":1915:1924   */\n  dup3\n    /* \"#utility.yul\":1911:1929   */\n  add\n    /* \"#utility.yul\":1903:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1939:2010   */\n  tag_66\n    /* \"#utility.yul\":2007:2008   */\n  0x00\n    /* \"#utility.yul\":1996:2005   */\n  dup4\n    /* \"#utility.yul\":1992:2009   */\n  add\n    /* \"#utility.yul\":1983:1989   */\n  dup5\n    /* \"#utility.yul\":1939:2010   */\n  tag_34\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1795:2017   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2023:2192   */\ntag_35:\n    /* \"#utility.yul\":2107:2118   */\n  0x00\n    /* \"#utility.yul\":2141:2147   */\n  dup3\n    /* \"#utility.yul\":2136:2139   */\n  dup3\n    /* \"#utility.yul\":2129:2148   */\n  mstore\n    /* \"#utility.yul\":2181:2185   */\n  0x20\n    /* \"#utility.yul\":2176:2179   */\n  dup3\n    /* \"#utility.yul\":2172:2186   */\n  add\n    /* \"#utility.yul\":2157:2186   */\n  swap1\n  pop\n    /* \"#utility.yul\":2023:2192   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2374   */\ntag_36:\n    /* \"#utility.yul\":2338:2366   */\n  0x496e76616c696420737461626c65636f696e2061646472657373000000000000\n    /* \"#utility.yul\":2334:2335   */\n  0x00\n    /* \"#utility.yul\":2326:2332   */\n  dup3\n    /* \"#utility.yul\":2322:2336   */\n  add\n    /* \"#utility.yul\":2315:2367   */\n  mstore\n    /* \"#utility.yul\":2198:2374   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2380:2746   */\ntag_37:\n    /* \"#utility.yul\":2522:2525   */\n  0x00\n    /* \"#utility.yul\":2543:2610   */\n  tag_70\n    /* \"#utility.yul\":2607:2609   */\n  0x1a\n    /* \"#utility.yul\":2602:2605   */\n  dup4\n    /* \"#utility.yul\":2543:2610   */\n  tag_35\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2536:2610   */\n  swap2\n  pop\n    /* \"#utility.yul\":2619:2712   */\n  tag_71\n    /* \"#utility.yul\":2708:2711   */\n  dup3\n    /* \"#utility.yul\":2619:2712   */\n  tag_36\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2737:2739   */\n  0x20\n    /* \"#utility.yul\":2732:2735   */\n  dup3\n    /* \"#utility.yul\":2728:2740   */\n  add\n    /* \"#utility.yul\":2721:2740   */\n  swap1\n  pop\n    /* \"#utility.yul\":2380:2746   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2752:3171   */\ntag_15:\n    /* \"#utility.yul\":2918:2922   */\n  0x00\n    /* \"#utility.yul\":2956:2958   */\n  0x20\n    /* \"#utility.yul\":2945:2954   */\n  dup3\n    /* \"#utility.yul\":2941:2959   */\n  add\n    /* \"#utility.yul\":2933:2959   */\n  swap1\n  pop\n    /* \"#utility.yul\":3005:3014   */\n  dup2\n    /* \"#utility.yul\":2999:3003   */\n  dup2\n    /* \"#utility.yul\":2995:3015   */\n  sub\n    /* \"#utility.yul\":2991:2992   */\n  0x00\n    /* \"#utility.yul\":2980:2989   */\n  dup4\n    /* \"#utility.yul\":2976:2993   */\n  add\n    /* \"#utility.yul\":2969:3016   */\n  mstore\n    /* \"#utility.yul\":3033:3164   */\n  tag_73\n    /* \"#utility.yul\":3159:3163   */\n  dup2\n    /* \"#utility.yul\":3033:3164   */\n  tag_37\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3025:3164   */\n  swap1\n  pop\n    /* \"#utility.yul\":2752:3171   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3177:3347   */\ntag_38:\n    /* \"#utility.yul\":3317:3339   */\n  0x496e76616c696420634254432061646472657373000000000000000000000000\n    /* \"#utility.yul\":3313:3314   */\n  0x00\n    /* \"#utility.yul\":3305:3311   */\n  dup3\n    /* \"#utility.yul\":3301:3315   */\n  add\n    /* \"#utility.yul\":3294:3340   */\n  mstore\n    /* \"#utility.yul\":3177:3347   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3353:3719   */\ntag_39:\n    /* \"#utility.yul\":3495:3498   */\n  0x00\n    /* \"#utility.yul\":3516:3583   */\n  tag_76\n    /* \"#utility.yul\":3580:3582   */\n  0x14\n    /* \"#utility.yul\":3575:3578   */\n  dup4\n    /* \"#utility.yul\":3516:3583   */\n  tag_35\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3509:3583   */\n  swap2\n  pop\n    /* \"#utility.yul\":3592:3685   */\n  tag_77\n    /* \"#utility.yul\":3681:3684   */\n  dup3\n    /* \"#utility.yul\":3592:3685   */\n  tag_38\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3710:3712   */\n  0x20\n    /* \"#utility.yul\":3705:3708   */\n  dup3\n    /* \"#utility.yul\":3701:3713   */\n  add\n    /* \"#utility.yul\":3694:3713   */\n  swap1\n  pop\n    /* \"#utility.yul\":3353:3719   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3725:4144   */\ntag_18:\n    /* \"#utility.yul\":3891:3895   */\n  0x00\n    /* \"#utility.yul\":3929:3931   */\n  0x20\n    /* \"#utility.yul\":3918:3927   */\n  dup3\n    /* \"#utility.yul\":3914:3932   */\n  add\n    /* \"#utility.yul\":3906:3932   */\n  swap1\n  pop\n    /* \"#utility.yul\":3978:3987   */\n  dup2\n    /* \"#utility.yul\":3972:3976   */\n  dup2\n    /* \"#utility.yul\":3968:3988   */\n  sub\n    /* \"#utility.yul\":3964:3965   */\n  0x00\n    /* \"#utility.yul\":3953:3962   */\n  dup4\n    /* \"#utility.yul\":3949:3966   */\n  add\n    /* \"#utility.yul\":3942:3989   */\n  mstore\n    /* \"#utility.yul\":4006:4137   */\n  tag_79\n    /* \"#utility.yul\":4132:4136   */\n  dup2\n    /* \"#utility.yul\":4006:4137   */\n  tag_39\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3998:4137   */\n  swap1\n  pop\n    /* \"#utility.yul\":3725:4144   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4150:4326   */\ntag_40:\n    /* \"#utility.yul\":4290:4318   */\n  0x496e76616c69642061676772656761746f722061646472657373000000000000\n    /* \"#utility.yul\":4286:4287   */\n  0x00\n    /* \"#utility.yul\":4278:4284   */\n  dup3\n    /* \"#utility.yul\":4274:4288   */\n  add\n    /* \"#utility.yul\":4267:4319   */\n  mstore\n    /* \"#utility.yul\":4150:4326   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4332:4698   */\ntag_41:\n    /* \"#utility.yul\":4474:4477   */\n  0x00\n    /* \"#utility.yul\":4495:4562   */\n  tag_82\n    /* \"#utility.yul\":4559:4561   */\n  0x1a\n    /* \"#utility.yul\":4554:4557   */\n  dup4\n    /* \"#utility.yul\":4495:4562   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4488:4562   */\n  swap2\n  pop\n    /* \"#utility.yul\":4571:4664   */\n  tag_83\n    /* \"#utility.yul\":4660:4663   */\n  dup3\n    /* \"#utility.yul\":4571:4664   */\n  tag_40\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4689:4691   */\n  0x20\n    /* \"#utility.yul\":4684:4687   */\n  dup3\n    /* \"#utility.yul\":4680:4692   */\n  add\n    /* \"#utility.yul\":4673:4692   */\n  swap1\n  pop\n    /* \"#utility.yul\":4332:4698   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4704:5123   */\ntag_21:\n    /* \"#utility.yul\":4870:4874   */\n  0x00\n    /* \"#utility.yul\":4908:4910   */\n  0x20\n    /* \"#utility.yul\":4897:4906   */\n  dup3\n    /* \"#utility.yul\":4893:4911   */\n  add\n    /* \"#utility.yul\":4885:4911   */\n  swap1\n  pop\n    /* \"#utility.yul\":4957:4966   */\n  dup2\n    /* \"#utility.yul\":4951:4955   */\n  dup2\n    /* \"#utility.yul\":4947:4967   */\n  sub\n    /* \"#utility.yul\":4943:4944   */\n  0x00\n    /* \"#utility.yul\":4932:4941   */\n  dup4\n    /* \"#utility.yul\":4928:4945   */\n  add\n    /* \"#utility.yul\":4921:4968   */\n  mstore\n    /* \"#utility.yul\":4985:5116   */\n  tag_85\n    /* \"#utility.yul\":5111:5115   */\n  dup2\n    /* \"#utility.yul\":4985:5116   */\n  tag_41\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4977:5116   */\n  swap1\n  pop\n    /* \"#utility.yul\":4704:5123   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5129:5298   */\ntag_42:\n    /* \"#utility.yul\":5269:5290   */\n  0x496e76616c696420444558206164647265737300000000000000000000000000\n    /* \"#utility.yul\":5265:5266   */\n  0x00\n    /* \"#utility.yul\":5257:5263   */\n  dup3\n    /* \"#utility.yul\":5253:5267   */\n  add\n    /* \"#utility.yul\":5246:5291   */\n  mstore\n    /* \"#utility.yul\":5129:5298   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5304:5670   */\ntag_43:\n    /* \"#utility.yul\":5446:5449   */\n  0x00\n    /* \"#utility.yul\":5467:5534   */\n  tag_88\n    /* \"#utility.yul\":5531:5533   */\n  0x13\n    /* \"#utility.yul\":5526:5529   */\n  dup4\n    /* \"#utility.yul\":5467:5534   */\n  tag_35\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":5460:5534   */\n  swap2\n  pop\n    /* \"#utility.yul\":5543:5636   */\n  tag_89\n    /* \"#utility.yul\":5632:5635   */\n  dup3\n    /* \"#utility.yul\":5543:5636   */\n  tag_42\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":5661:5663   */\n  0x20\n    /* \"#utility.yul\":5656:5659   */\n  dup3\n    /* \"#utility.yul\":5652:5664   */\n  add\n    /* \"#utility.yul\":5645:5664   */\n  swap1\n  pop\n    /* \"#utility.yul\":5304:5670   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5676:6095   */\ntag_24:\n    /* \"#utility.yul\":5842:5846   */\n  0x00\n    /* \"#utility.yul\":5880:5882   */\n  0x20\n    /* \"#utility.yul\":5869:5878   */\n  dup3\n    /* \"#utility.yul\":5865:5883   */\n  add\n    /* \"#utility.yul\":5857:5883   */\n  swap1\n  pop\n    /* \"#utility.yul\":5929:5938   */\n  dup2\n    /* \"#utility.yul\":5923:5927   */\n  dup2\n    /* \"#utility.yul\":5919:5939   */\n  sub\n    /* \"#utility.yul\":5915:5916   */\n  0x00\n    /* \"#utility.yul\":5904:5913   */\n  dup4\n    /* \"#utility.yul\":5900:5917   */\n  add\n    /* \"#utility.yul\":5893:5940   */\n  mstore\n    /* \"#utility.yul\":5957:6088   */\n  tag_91\n    /* \"#utility.yul\":6083:6087   */\n  dup2\n    /* \"#utility.yul\":5957:6088   */\n  tag_43\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":5949:6088   */\n  swap1\n  pop\n    /* \"#utility.yul\":5676:6095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/PaymentGateway.sol\":600:6796  contract PaymentGateway is Ownable(msg.sender) {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PaymentGateway.sol\":600:6796  contract PaymentGateway is Ownable(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xad487f23\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xad487f23\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe5a5ef4f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xff0f7b74\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x992642e5\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x245a7bfc\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x245a7bfc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4793f1d9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5143fe12\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x692058c2\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x0ae8c4dc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x194a7b8e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x20003022\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PaymentGateway.sol\":886:903  ICBTC public cBTC */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PaymentGateway.sol\":793:844  mapping(bytes32 => uint256) public merchantBalances */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PaymentGateway.sol\":742:787  mapping(bytes32 => Merchant) public merchants */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_33\n      swap3\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PaymentGateway.sol\":909:944  IAggregatorOracle public aggregator */\n    tag_6:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PaymentGateway.sol\":3787:4169  function payMerchant(bytes32 merchantId, uint256 amount) external {... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/PaymentGateway.sol\":5478:6794  function payMerchantInCBTC(bytes32 merchantId, uint256 cUSDTargetAmount) external {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/PaymentGateway.sol\":950:974  IDexInterface public dex */\n    tag_9:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PaymentGateway.sol\":851:880  IStableCoin public stableCoin */\n    tag_12:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PaymentGateway.sol\":4435:4943  function withdrawMerchantFunds(bytes32 merchantId) external onlyOwner {... */\n    tag_13:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/PaymentGateway.sol\":2454:2950  function registerMerchant(bytes32 merchantId, address payable payoutAddress) external onlyOwner {... */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/PaymentGateway.sol\":3141:3575  function updateMerchant(bytes32 merchantId, address payable payoutAddress, bool active) external onlyOwner {... */\n    tag_16:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/PaymentGateway.sol\":886:903  ICBTC public cBTC */\n    tag_21:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PaymentGateway.sol\":793:844  mapping(bytes32 => uint256) public merchantBalances */\n    tag_27:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/PaymentGateway.sol\":742:787  mapping(bytes32 => Merchant) public merchants */\n    tag_32:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/PaymentGateway.sol\":909:944  IAggregatorOracle public aggregator */\n    tag_36:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PaymentGateway.sol\":3787:4169  function payMerchant(bytes32 merchantId, uint256 amount) external {... */\n    tag_42:\n        /* \"contracts/PaymentGateway.sol\":3863:3880  Merchant memory m */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":3883:3892  merchants */\n      0x01\n        /* \"contracts/PaymentGateway.sol\":3883:3904  merchants[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":3893:3903  merchantId */\n      dup5\n        /* \"contracts/PaymentGateway.sol\":3883:3904  merchants[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PaymentGateway.sol\":3863:3904  Merchant memory m = merchants[merchantId] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PaymentGateway.sol\":3922:3923  m */\n      dup1\n        /* \"contracts/PaymentGateway.sol\":3922:3930  m.active */\n      0x20\n      add\n      mload\n        /* \"contracts/PaymentGateway.sol\":3914:3954  require(m.active, \"Merchant not active\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/PaymentGateway.sol\":3973:3983  stableCoin */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":3973:3996  stableCoin.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/PaymentGateway.sol\":3997:4007  msg.sender */\n      caller\n        /* \"contracts/PaymentGateway.sol\":4017:4021  this */\n      address\n        /* \"contracts/PaymentGateway.sol\":4024:4030  amount */\n      dup6\n        /* \"contracts/PaymentGateway.sol\":3973:4031  stableCoin.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"contracts/PaymentGateway.sol\":3965:4051  require(stableCoin.transferFrom(msg.sender, address(this), amount), \"Transfer failed\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/PaymentGateway.sol\":4093:4099  amount */\n      dup2\n        /* \"contracts/PaymentGateway.sol\":4061:4077  merchantBalances */\n      0x02\n        /* \"contracts/PaymentGateway.sol\":4061:4089  merchantBalances[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":4078:4088  merchantId */\n      dup6\n        /* \"contracts/PaymentGateway.sol\":4061:4089  merchantBalances[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PaymentGateway.sol\":4061:4099  merchantBalances[merchantId] += amount */\n      dup3\n      dup3\n      sload\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PaymentGateway.sol\":4143:4153  msg.sender */\n      caller\n        /* \"contracts/PaymentGateway.sol\":4115:4162  PaymentReceived(merchantId, msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":4131:4141  merchantId */\n      dup4\n        /* \"contracts/PaymentGateway.sol\":4115:4162  PaymentReceived(merchantId, msg.sender, amount) */\n      0x3b5907c9aaeaeef015f385111975b015225e1001bf659370e62c15e13373bc6d\n        /* \"contracts/PaymentGateway.sol\":4155:4161  amount */\n      dup5\n        /* \"contracts/PaymentGateway.sol\":4115:4162  PaymentReceived(merchantId, msg.sender, amount) */\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PaymentGateway.sol\":3853:4169  {... */\n      pop\n        /* \"contracts/PaymentGateway.sol\":3787:4169  function payMerchant(bytes32 merchantId, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PaymentGateway.sol\":5478:6794  function payMerchantInCBTC(bytes32 merchantId, uint256 cUSDTargetAmount) external {... */\n    tag_45:\n        /* \"contracts/PaymentGateway.sol\":5570:5587  Merchant memory m */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":5590:5599  merchants */\n      0x01\n        /* \"contracts/PaymentGateway.sol\":5590:5611  merchants[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":5600:5610  merchantId */\n      dup5\n        /* \"contracts/PaymentGateway.sol\":5590:5611  merchants[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PaymentGateway.sol\":5570:5611  Merchant memory m = merchants[merchantId] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PaymentGateway.sol\":5629:5630  m */\n      dup1\n        /* \"contracts/PaymentGateway.sol\":5629:5637  m.active */\n      0x20\n      add\n      mload\n        /* \"contracts/PaymentGateway.sol\":5621:5661  require(m.active, \"Merchant not active\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_78\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/PaymentGateway.sol\":5738:5761  uint256 cBTCPriceInCUSD */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":5764:5774  aggregator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":5764:5789  aggregator.getMedianPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadfe34f7\n        /* \"contracts/PaymentGateway.sol\":5798:5802  cBTC */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":5764:5804  aggregator.getMedianPrice(address(cBTC)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_94:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"contracts/PaymentGateway.sol\":5738:5804  uint256 cBTCPriceInCUSD = aggregator.getMedianPrice(address(cBTC)) */\n      swap1\n      pop\n        /* \"contracts/PaymentGateway.sol\":5840:5841  0 */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":5822:5837  cBTCPriceInCUSD */\n      dup2\n        /* \"contracts/PaymentGateway.sol\":5822:5841  cBTCPriceInCUSD > 0 */\n      gt\n        /* \"contracts/PaymentGateway.sol\":5814:5859  require(cBTCPriceInCUSD > 0, \"Invalid price\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/PaymentGateway.sol\":5994:6012  uint256 cBTCAmount */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":6043:6058  cBTCPriceInCUSD */\n      dup2\n        /* \"contracts/PaymentGateway.sol\":6035:6039  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/PaymentGateway.sol\":6016:6032  cUSDTargetAmount */\n      dup6\n        /* \"contracts/PaymentGateway.sol\":6016:6039  cUSDTargetAmount * 1e18 */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"contracts/PaymentGateway.sol\":6015:6058  (cUSDTargetAmount * 1e18) / cBTCPriceInCUSD */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"contracts/PaymentGateway.sol\":5994:6058  uint256 cBTCAmount = (cUSDTargetAmount * 1e18) / cBTCPriceInCUSD */\n      swap1\n      pop\n        /* \"contracts/PaymentGateway.sol\":6112:6116  cBTC */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":6112:6129  cBTC.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/PaymentGateway.sol\":6130:6140  msg.sender */\n      caller\n        /* \"contracts/PaymentGateway.sol\":6150:6154  this */\n      address\n        /* \"contracts/PaymentGateway.sol\":6157:6167  cBTCAmount */\n      dup5\n        /* \"contracts/PaymentGateway.sol\":6112:6168  cBTC.transferFrom(msg.sender, address(this), cBTCAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_106:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_109:\n        /* \"contracts/PaymentGateway.sol\":6104:6188  require(cBTC.transferFrom(msg.sender, address(this), cBTCAmount), \"Transfer failed\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_87\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/PaymentGateway.sol\":6244:6248  cBTC */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":6244:6256  cBTC.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/PaymentGateway.sol\":6265:6268  dex */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":6271:6281  cBTCAmount */\n      dup4\n        /* \"contracts/PaymentGateway.sol\":6244:6282  cBTC.approve(address(dex), cBTCAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_116:\n        /* \"contracts/PaymentGateway.sol\":6236:6306  require(cBTC.approve(address(dex), cBTCAmount), \"cBTC approve failed\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/PaymentGateway.sol\":6521:6524  dex */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":6521:6540  dex.swapCBTCForCUSD */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3a96d086\n        /* \"contracts/PaymentGateway.sol\":6541:6551  cBTCAmount */\n      dup3\n        /* \"contracts/PaymentGateway.sol\":6553:6569  cUSDTargetAmount */\n      dup7\n        /* \"contracts/PaymentGateway.sol\":6521:6570  dex.swapCBTCForCUSD(cBTCAmount, cUSDTargetAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PaymentGateway.sol\":6698:6714  cUSDTargetAmount */\n      dup4\n        /* \"contracts/PaymentGateway.sol\":6666:6682  merchantBalances */\n      0x02\n        /* \"contracts/PaymentGateway.sol\":6666:6694  merchantBalances[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":6683:6693  merchantId */\n      dup8\n        /* \"contracts/PaymentGateway.sol\":6666:6694  merchantBalances[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PaymentGateway.sol\":6666:6714  merchantBalances[merchantId] += cUSDTargetAmount */\n      dup3\n      dup3\n      sload\n      tag_125\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_125:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PaymentGateway.sol\":6758:6768  msg.sender */\n      caller\n        /* \"contracts/PaymentGateway.sol\":6730:6787  PaymentReceived(merchantId, msg.sender, cUSDTargetAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":6746:6756  merchantId */\n      dup6\n        /* \"contracts/PaymentGateway.sol\":6730:6787  PaymentReceived(merchantId, msg.sender, cUSDTargetAmount) */\n      0x3b5907c9aaeaeef015f385111975b015225e1001bf659370e62c15e13373bc6d\n        /* \"contracts/PaymentGateway.sol\":6770:6786  cUSDTargetAmount */\n      dup7\n        /* \"contracts/PaymentGateway.sol\":6730:6787  PaymentReceived(merchantId, msg.sender, cUSDTargetAmount) */\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PaymentGateway.sol\":5560:6794  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/PaymentGateway.sol\":5478:6794  function payMerchantInCBTC(bytes32 merchantId, uint256 cUSDTargetAmount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PaymentGateway.sol\":950:974  IDexInterface public dex */\n    tag_47:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PaymentGateway.sol\":851:880  IStableCoin public stableCoin */\n    tag_57:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PaymentGateway.sol\":4435:4943  function withdrawMerchantFunds(bytes32 merchantId) external onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/PaymentGateway.sol\":4523:4532  merchants */\n      0x01\n        /* \"contracts/PaymentGateway.sol\":4523:4544  merchants[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":4533:4543  merchantId */\n      dup3\n        /* \"contracts/PaymentGateway.sol\":4523:4544  merchants[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PaymentGateway.sol\":4523:4551  merchants[merchantId].active */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/PaymentGateway.sol\":4515:4575  require(merchants[merchantId].active, \"Merchant not active\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_78\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/PaymentGateway.sol\":4585:4600  uint256 balance */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":4603:4619  merchantBalances */\n      0x02\n        /* \"contracts/PaymentGateway.sol\":4603:4631  merchantBalances[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":4620:4630  merchantId */\n      dup4\n        /* \"contracts/PaymentGateway.sol\":4603:4631  merchantBalances[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PaymentGateway.sol\":4585:4631  uint256 balance = merchantBalances[merchantId] */\n      swap1\n      pop\n        /* \"contracts/PaymentGateway.sol\":4659:4660  0 */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":4649:4656  balance */\n      dup2\n        /* \"contracts/PaymentGateway.sol\":4649:4660  balance > 0 */\n      gt\n        /* \"contracts/PaymentGateway.sol\":4641:4687  require(balance > 0, \"No balance to withdraw\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/PaymentGateway.sol\":4729:4730  0 */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":4698:4714  merchantBalances */\n      0x02\n        /* \"contracts/PaymentGateway.sol\":4698:4726  merchantBalances[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":4715:4725  merchantId */\n      dup5\n        /* \"contracts/PaymentGateway.sol\":4698:4726  merchantBalances[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PaymentGateway.sol\":4698:4730  merchantBalances[merchantId] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PaymentGateway.sol\":4740:4762  address payable payout */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":4765:4774  merchants */\n      0x01\n        /* \"contracts/PaymentGateway.sol\":4765:4786  merchants[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":4775:4785  merchantId */\n      dup5\n        /* \"contracts/PaymentGateway.sol\":4765:4786  merchants[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PaymentGateway.sol\":4765:4800  merchants[merchantId].payoutAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":4740:4800  address payable payout = merchants[merchantId].payoutAddress */\n      swap1\n      pop\n        /* \"contracts/PaymentGateway.sol\":4819:4829  stableCoin */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":4819:4838  stableCoin.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/PaymentGateway.sol\":4839:4845  payout */\n      dup3\n        /* \"contracts/PaymentGateway.sol\":4847:4854  balance */\n      dup5\n        /* \"contracts/PaymentGateway.sol\":4819:4855  stableCoin.transfer(payout, balance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_146:\n        /* \"contracts/PaymentGateway.sol\":4811:4875  require(stableCoin.transfer(payout, balance), \"Transfer failed\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_87\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/PaymentGateway.sol\":4908:4918  merchantId */\n      dup3\n        /* \"contracts/PaymentGateway.sol\":4890:4936  MerchantWithdrawn(merchantId, balance, payout) */\n      0x195f245622abeb539754a2a6a6deb95e6b222cbf894d10cbffbebac70340e587\n        /* \"contracts/PaymentGateway.sol\":4920:4927  balance */\n      dup4\n        /* \"contracts/PaymentGateway.sol\":4929:4935  payout */\n      dup4\n        /* \"contracts/PaymentGateway.sol\":4890:4936  MerchantWithdrawn(merchantId, balance, payout) */\n      mload(0x40)\n      tag_149\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PaymentGateway.sol\":4505:4943  {... */\n      pop\n      pop\n        /* \"contracts/PaymentGateway.sol\":4435:4943  function withdrawMerchantFunds(bytes32 merchantId) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PaymentGateway.sol\":2454:2950  function registerMerchant(bytes32 merchantId, address payable payoutAddress) external onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/PaymentGateway.sol\":2582:2585  0x0 */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":2568:2585  merchantId != 0x0 */\n      dup1\n      shl\n        /* \"contracts/PaymentGateway.sol\":2568:2578  merchantId */\n      dup3\n        /* \"contracts/PaymentGateway.sol\":2568:2585  merchantId != 0x0 */\n      sub\n        /* \"contracts/PaymentGateway.sol\":2560:2608  require(merchantId != 0x0, \"Invalid merchantId\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/PaymentGateway.sol\":2651:2652  0 */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":2626:2653  payoutAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":2626:2639  payoutAddress */\n      dup2\n        /* \"contracts/PaymentGateway.sol\":2626:2653  payoutAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PaymentGateway.sol\":2618:2680  require(payoutAddress != address(0), \"Invalid payout address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/PaymentGateway.sol\":2699:2708  merchants */\n      0x01\n        /* \"contracts/PaymentGateway.sol\":2699:2720  merchants[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":2709:2719  merchantId */\n      dup4\n        /* \"contracts/PaymentGateway.sol\":2699:2720  merchants[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PaymentGateway.sol\":2699:2727  merchants[merchantId].active */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/PaymentGateway.sol\":2698:2727  !merchants[merchantId].active */\n      iszero\n        /* \"contracts/PaymentGateway.sol\":2690:2759  require(!merchants[merchantId].active, \"Merchant already registered\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/PaymentGateway.sol\":2794:2882  Merchant({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PaymentGateway.sol\":2832:2845  payoutAddress */\n      dup3\n        /* \"contracts/PaymentGateway.sol\":2794:2882  Merchant({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PaymentGateway.sol\":2867:2871  true */\n      0x01\n        /* \"contracts/PaymentGateway.sol\":2794:2882  Merchant({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/PaymentGateway.sol\":2770:2779  merchants */\n      0x01\n        /* \"contracts/PaymentGateway.sol\":2770:2791  merchants[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":2780:2790  merchantId */\n      dup5\n        /* \"contracts/PaymentGateway.sol\":2770:2791  merchants[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PaymentGateway.sol\":2770:2882  merchants[merchantId] = Merchant({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/PaymentGateway.sol\":2917:2927  merchantId */\n      dup2\n        /* \"contracts/PaymentGateway.sol\":2898:2943  MerchantRegistered(merchantId, payoutAddress) */\n      0x1108b573acb7954c6be9806cc3a17ed5864f50fa96ad4cbc9cd82fa63d42b9f7\n        /* \"contracts/PaymentGateway.sol\":2929:2942  payoutAddress */\n      dup3\n        /* \"contracts/PaymentGateway.sol\":2898:2943  MerchantRegistered(merchantId, payoutAddress) */\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PaymentGateway.sol\":2454:2950  function registerMerchant(bytes32 merchantId, address payable payoutAddress) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PaymentGateway.sol\":3141:3575  function updateMerchant(bytes32 merchantId, address payable payoutAddress, bool active) external onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_172:\n        /* \"contracts/PaymentGateway.sol\":3266:3275  merchants */\n      0x01\n        /* \"contracts/PaymentGateway.sol\":3266:3287  merchants[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":3276:3286  merchantId */\n      dup5\n        /* \"contracts/PaymentGateway.sol\":3266:3287  merchants[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PaymentGateway.sol\":3266:3294  merchants[merchantId].active */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/PaymentGateway.sol\":3258:3322  require(merchants[merchantId].active, \"Merchant not registered\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/PaymentGateway.sol\":3365:3366  0 */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":3340:3367  payoutAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PaymentGateway.sol\":3340:3353  payoutAddress */\n      dup3\n        /* \"contracts/PaymentGateway.sol\":3340:3367  payoutAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PaymentGateway.sol\":3332:3394  require(payoutAddress != address(0), \"Invalid payout address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_159\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/PaymentGateway.sol\":3443:3456  payoutAddress */\n      dup2\n        /* \"contracts/PaymentGateway.sol\":3405:3414  merchants */\n      0x01\n        /* \"contracts/PaymentGateway.sol\":3405:3426  merchants[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":3415:3425  merchantId */\n      dup6\n        /* \"contracts/PaymentGateway.sol\":3405:3426  merchants[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PaymentGateway.sol\":3405:3440  merchants[merchantId].payoutAddress */\n      0x00\n      add\n      0x00\n        /* \"contracts/PaymentGateway.sol\":3405:3456  merchants[merchantId].payoutAddress = payoutAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PaymentGateway.sol\":3497:3503  active */\n      dup1\n        /* \"contracts/PaymentGateway.sol\":3466:3475  merchants */\n      0x01\n        /* \"contracts/PaymentGateway.sol\":3466:3487  merchants[merchantId] */\n      0x00\n        /* \"contracts/PaymentGateway.sol\":3476:3486  merchantId */\n      dup6\n        /* \"contracts/PaymentGateway.sol\":3466:3487  merchants[merchantId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PaymentGateway.sol\":3466:3494  merchants[merchantId].active */\n      0x00\n      add\n      0x14\n        /* \"contracts/PaymentGateway.sol\":3466:3503  merchants[merchantId].active = active */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PaymentGateway.sol\":3534:3544  merchantId */\n      dup3\n        /* \"contracts/PaymentGateway.sol\":3518:3568  MerchantUpdated(merchantId, payoutAddress, active) */\n      0x7dac21e92520eaedc798f2261da9eecebda327db2d8dff77c1aab26798dc25e8\n        /* \"contracts/PaymentGateway.sol\":3546:3559  payoutAddress */\n      dup4\n        /* \"contracts/PaymentGateway.sol\":3561:3567  active */\n      dup4\n        /* \"contracts/PaymentGateway.sol\":3518:3568  MerchantUpdated(merchantId, payoutAddress, active) */\n      mload(0x40)\n      tag_179\n      swap3\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PaymentGateway.sol\":3141:3575  function updateMerchant(bytes32 merchantId, address payable payoutAddress, bool active) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_190:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_191:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_192:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_253\n        /* \"#utility.yul\":306:340   */\n      tag_254\n        /* \"#utility.yul\":315:339   */\n      tag_255\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_190\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":306:340   */\n      tag_191\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":288:341   */\n      tag_190\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_193:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_257\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_192\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:624   */\n    tag_194:\n        /* \"#utility.yul\":548:557   */\n      0x00\n        /* \"#utility.yul\":581:618   */\n      tag_259\n        /* \"#utility.yul\":612:617   */\n      dup3\n        /* \"#utility.yul\":581:618   */\n      tag_193\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":568:618   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":630:787   */\n    tag_195:\n        /* \"#utility.yul\":730:780   */\n      tag_261\n        /* \"#utility.yul\":774:779   */\n      dup2\n        /* \"#utility.yul\":730:780   */\n      tag_194\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":725:728   */\n      dup3\n        /* \"#utility.yul\":718:781   */\n      mstore\n        /* \"#utility.yul\":630:787   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":793:1041   */\n    tag_23:\n        /* \"#utility.yul\":899:903   */\n      0x00\n        /* \"#utility.yul\":937:939   */\n      0x20\n        /* \"#utility.yul\":926:935   */\n      dup3\n        /* \"#utility.yul\":922:940   */\n      add\n        /* \"#utility.yul\":914:940   */\n      swap1\n      pop\n        /* \"#utility.yul\":950:1034   */\n      tag_263\n        /* \"#utility.yul\":1031:1032   */\n      0x00\n        /* \"#utility.yul\":1020:1029   */\n      dup4\n        /* \"#utility.yul\":1016:1033   */\n      add\n        /* \"#utility.yul\":1007:1013   */\n      dup5\n        /* \"#utility.yul\":950:1034   */\n      tag_195\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":793:1041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1128:1245   */\n    tag_197:\n        /* \"#utility.yul\":1237:1238   */\n      0x00\n        /* \"#utility.yul\":1234:1235   */\n      dup1\n        /* \"#utility.yul\":1227:1239   */\n      revert\n        /* \"#utility.yul\":1374:1451   */\n    tag_199:\n        /* \"#utility.yul\":1411:1418   */\n      0x00\n        /* \"#utility.yul\":1440:1445   */\n      dup2\n        /* \"#utility.yul\":1429:1445   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1457:1579   */\n    tag_200:\n        /* \"#utility.yul\":1530:1554   */\n      tag_269\n        /* \"#utility.yul\":1548:1553   */\n      dup2\n        /* \"#utility.yul\":1530:1554   */\n      tag_199\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1523:1528   */\n      dup2\n        /* \"#utility.yul\":1520:1555   */\n      eq\n        /* \"#utility.yul\":1510:1573   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":1569:1570   */\n      0x00\n        /* \"#utility.yul\":1566:1567   */\n      dup1\n        /* \"#utility.yul\":1559:1571   */\n      revert\n        /* \"#utility.yul\":1510:1573   */\n    tag_270:\n        /* \"#utility.yul\":1457:1579   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1585:1724   */\n    tag_201:\n        /* \"#utility.yul\":1631:1636   */\n      0x00\n        /* \"#utility.yul\":1669:1675   */\n      dup2\n        /* \"#utility.yul\":1656:1676   */\n      calldataload\n        /* \"#utility.yul\":1647:1676   */\n      swap1\n      pop\n        /* \"#utility.yul\":1685:1718   */\n      tag_272\n        /* \"#utility.yul\":1712:1717   */\n      dup2\n        /* \"#utility.yul\":1685:1718   */\n      tag_200\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1585:1724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1730:2059   */\n    tag_26:\n        /* \"#utility.yul\":1789:1795   */\n      0x00\n        /* \"#utility.yul\":1838:1840   */\n      0x20\n        /* \"#utility.yul\":1826:1835   */\n      dup3\n        /* \"#utility.yul\":1817:1824   */\n      dup5\n        /* \"#utility.yul\":1813:1836   */\n      sub\n        /* \"#utility.yul\":1809:1841   */\n      slt\n        /* \"#utility.yul\":1806:1925   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":1844:1923   */\n      tag_275\n      tag_197\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1806:1925   */\n    tag_274:\n        /* \"#utility.yul\":1964:1965   */\n      0x00\n        /* \"#utility.yul\":1989:2042   */\n      tag_276\n        /* \"#utility.yul\":2034:2041   */\n      dup5\n        /* \"#utility.yul\":2025:2031   */\n      dup3\n        /* \"#utility.yul\":2014:2023   */\n      dup6\n        /* \"#utility.yul\":2010:2032   */\n      add\n        /* \"#utility.yul\":1989:2042   */\n      tag_201\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1979:2042   */\n      swap2\n      pop\n        /* \"#utility.yul\":1935:2052   */\n      pop\n        /* \"#utility.yul\":1730:2059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2065:2142   */\n    tag_202:\n        /* \"#utility.yul\":2102:2109   */\n      0x00\n        /* \"#utility.yul\":2131:2136   */\n      dup2\n        /* \"#utility.yul\":2120:2136   */\n      swap1\n      pop\n        /* \"#utility.yul\":2065:2142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2148:2266   */\n    tag_203:\n        /* \"#utility.yul\":2235:2259   */\n      tag_279\n        /* \"#utility.yul\":2253:2258   */\n      dup2\n        /* \"#utility.yul\":2235:2259   */\n      tag_202\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2230:2233   */\n      dup3\n        /* \"#utility.yul\":2223:2260   */\n      mstore\n        /* \"#utility.yul\":2148:2266   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2272:2494   */\n    tag_29:\n        /* \"#utility.yul\":2365:2369   */\n      0x00\n        /* \"#utility.yul\":2403:2405   */\n      0x20\n        /* \"#utility.yul\":2392:2401   */\n      dup3\n        /* \"#utility.yul\":2388:2406   */\n      add\n        /* \"#utility.yul\":2380:2406   */\n      swap1\n      pop\n        /* \"#utility.yul\":2416:2487   */\n      tag_281\n        /* \"#utility.yul\":2484:2485   */\n      0x00\n        /* \"#utility.yul\":2473:2482   */\n      dup4\n        /* \"#utility.yul\":2469:2486   */\n      add\n        /* \"#utility.yul\":2460:2466   */\n      dup5\n        /* \"#utility.yul\":2416:2487   */\n      tag_203\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2272:2494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2500:2604   */\n    tag_204:\n        /* \"#utility.yul\":2545:2552   */\n      0x00\n        /* \"#utility.yul\":2574:2598   */\n      tag_283\n        /* \"#utility.yul\":2592:2597   */\n      dup3\n        /* \"#utility.yul\":2574:2598   */\n      tag_190\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2563:2598   */\n      swap1\n      pop\n        /* \"#utility.yul\":2500:2604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2610:2752   */\n    tag_205:\n        /* \"#utility.yul\":2713:2745   */\n      tag_285\n        /* \"#utility.yul\":2739:2744   */\n      dup2\n        /* \"#utility.yul\":2713:2745   */\n      tag_204\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2708:2711   */\n      dup3\n        /* \"#utility.yul\":2701:2746   */\n      mstore\n        /* \"#utility.yul\":2610:2752   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2758:2848   */\n    tag_206:\n        /* \"#utility.yul\":2792:2799   */\n      0x00\n        /* \"#utility.yul\":2835:2840   */\n      dup2\n        /* \"#utility.yul\":2828:2841   */\n      iszero\n        /* \"#utility.yul\":2821:2842   */\n      iszero\n        /* \"#utility.yul\":2810:2842   */\n      swap1\n      pop\n        /* \"#utility.yul\":2758:2848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2854:2963   */\n    tag_207:\n        /* \"#utility.yul\":2935:2956   */\n      tag_288\n        /* \"#utility.yul\":2950:2955   */\n      dup2\n        /* \"#utility.yul\":2935:2956   */\n      tag_206\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2930:2933   */\n      dup3\n        /* \"#utility.yul\":2923:2957   */\n      mstore\n        /* \"#utility.yul\":2854:2963   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2969:3321   */\n    tag_34:\n        /* \"#utility.yul\":3100:3104   */\n      0x00\n        /* \"#utility.yul\":3138:3140   */\n      0x40\n        /* \"#utility.yul\":3127:3136   */\n      dup3\n        /* \"#utility.yul\":3123:3141   */\n      add\n        /* \"#utility.yul\":3115:3141   */\n      swap1\n      pop\n        /* \"#utility.yul\":3151:3238   */\n      tag_290\n        /* \"#utility.yul\":3235:3236   */\n      0x00\n        /* \"#utility.yul\":3224:3233   */\n      dup4\n        /* \"#utility.yul\":3220:3237   */\n      add\n        /* \"#utility.yul\":3211:3217   */\n      dup6\n        /* \"#utility.yul\":3151:3238   */\n      tag_205\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3248:3314   */\n      tag_291\n        /* \"#utility.yul\":3310:3312   */\n      0x20\n        /* \"#utility.yul\":3299:3308   */\n      dup4\n        /* \"#utility.yul\":3295:3313   */\n      add\n        /* \"#utility.yul\":3286:3292   */\n      dup5\n        /* \"#utility.yul\":3248:3314   */\n      tag_207\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2969:3321   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3327:3478   */\n    tag_208:\n        /* \"#utility.yul\":3402:3411   */\n      0x00\n        /* \"#utility.yul\":3435:3472   */\n      tag_293\n        /* \"#utility.yul\":3466:3471   */\n      dup3\n        /* \"#utility.yul\":3435:3472   */\n      tag_193\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3422:3472   */\n      swap1\n      pop\n        /* \"#utility.yul\":3327:3478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3665   */\n    tag_209:\n        /* \"#utility.yul\":3596:3658   */\n      tag_295\n        /* \"#utility.yul\":3652:3657   */\n      dup2\n        /* \"#utility.yul\":3596:3658   */\n      tag_208\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3591:3594   */\n      dup3\n        /* \"#utility.yul\":3584:3659   */\n      mstore\n        /* \"#utility.yul\":3484:3665   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3671:3943   */\n    tag_38:\n        /* \"#utility.yul\":3789:3793   */\n      0x00\n        /* \"#utility.yul\":3827:3829   */\n      0x20\n        /* \"#utility.yul\":3816:3825   */\n      dup3\n        /* \"#utility.yul\":3812:3830   */\n      add\n        /* \"#utility.yul\":3804:3830   */\n      swap1\n      pop\n        /* \"#utility.yul\":3840:3936   */\n      tag_297\n        /* \"#utility.yul\":3933:3934   */\n      0x00\n        /* \"#utility.yul\":3922:3931   */\n      dup4\n        /* \"#utility.yul\":3918:3935   */\n      add\n        /* \"#utility.yul\":3909:3915   */\n      dup5\n        /* \"#utility.yul\":3840:3936   */\n      tag_209\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3671:3943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3949:4071   */\n    tag_210:\n        /* \"#utility.yul\":4022:4046   */\n      tag_299\n        /* \"#utility.yul\":4040:4045   */\n      dup2\n        /* \"#utility.yul\":4022:4046   */\n      tag_202\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4015:4020   */\n      dup2\n        /* \"#utility.yul\":4012:4047   */\n      eq\n        /* \"#utility.yul\":4002:4065   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":4061:4062   */\n      0x00\n        /* \"#utility.yul\":4058:4059   */\n      dup1\n        /* \"#utility.yul\":4051:4063   */\n      revert\n        /* \"#utility.yul\":4002:4065   */\n    tag_300:\n        /* \"#utility.yul\":3949:4071   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4077:4216   */\n    tag_211:\n        /* \"#utility.yul\":4123:4128   */\n      0x00\n        /* \"#utility.yul\":4161:4167   */\n      dup2\n        /* \"#utility.yul\":4148:4168   */\n      calldataload\n        /* \"#utility.yul\":4139:4168   */\n      swap1\n      pop\n        /* \"#utility.yul\":4177:4210   */\n      tag_302\n        /* \"#utility.yul\":4204:4209   */\n      dup2\n        /* \"#utility.yul\":4177:4210   */\n      tag_210\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4077:4216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4222:4696   */\n    tag_41:\n        /* \"#utility.yul\":4290:4296   */\n      0x00\n        /* \"#utility.yul\":4298:4304   */\n      dup1\n        /* \"#utility.yul\":4347:4349   */\n      0x40\n        /* \"#utility.yul\":4335:4344   */\n      dup4\n        /* \"#utility.yul\":4326:4333   */\n      dup6\n        /* \"#utility.yul\":4322:4345   */\n      sub\n        /* \"#utility.yul\":4318:4350   */\n      slt\n        /* \"#utility.yul\":4315:4434   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4353:4432   */\n      tag_305\n      tag_197\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4315:4434   */\n    tag_304:\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4498:4551   */\n      tag_306\n        /* \"#utility.yul\":4543:4550   */\n      dup6\n        /* \"#utility.yul\":4534:4540   */\n      dup3\n        /* \"#utility.yul\":4523:4532   */\n      dup7\n        /* \"#utility.yul\":4519:4541   */\n      add\n        /* \"#utility.yul\":4498:4551   */\n      tag_201\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4488:4551   */\n      swap3\n      pop\n        /* \"#utility.yul\":4444:4561   */\n      pop\n        /* \"#utility.yul\":4600:4602   */\n      0x20\n        /* \"#utility.yul\":4626:4679   */\n      tag_307\n        /* \"#utility.yul\":4671:4678   */\n      dup6\n        /* \"#utility.yul\":4662:4668   */\n      dup3\n        /* \"#utility.yul\":4651:4660   */\n      dup7\n        /* \"#utility.yul\":4647:4669   */\n      add\n        /* \"#utility.yul\":4626:4679   */\n      tag_211\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4616:4679   */\n      swap2\n      pop\n        /* \"#utility.yul\":4571:4689   */\n      pop\n        /* \"#utility.yul\":4222:4696   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4702:4849   */\n    tag_212:\n        /* \"#utility.yul\":4773:4782   */\n      0x00\n        /* \"#utility.yul\":4806:4843   */\n      tag_309\n        /* \"#utility.yul\":4837:4842   */\n      dup3\n        /* \"#utility.yul\":4806:4843   */\n      tag_193\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4793:4843   */\n      swap1\n      pop\n        /* \"#utility.yul\":4702:4849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4855:5028   */\n    tag_213:\n        /* \"#utility.yul\":4963:5021   */\n      tag_311\n        /* \"#utility.yul\":5015:5020   */\n      dup2\n        /* \"#utility.yul\":4963:5021   */\n      tag_212\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4958:4961   */\n      dup3\n        /* \"#utility.yul\":4951:5022   */\n      mstore\n        /* \"#utility.yul\":4855:5028   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5034:5298   */\n    tag_49:\n        /* \"#utility.yul\":5148:5152   */\n      0x00\n        /* \"#utility.yul\":5186:5188   */\n      0x20\n        /* \"#utility.yul\":5175:5184   */\n      dup3\n        /* \"#utility.yul\":5171:5189   */\n      add\n        /* \"#utility.yul\":5163:5189   */\n      swap1\n      pop\n        /* \"#utility.yul\":5199:5291   */\n      tag_313\n        /* \"#utility.yul\":5288:5289   */\n      0x00\n        /* \"#utility.yul\":5277:5286   */\n      dup4\n        /* \"#utility.yul\":5273:5290   */\n      add\n        /* \"#utility.yul\":5264:5270   */\n      dup5\n        /* \"#utility.yul\":5199:5291   */\n      tag_213\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":5034:5298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5304:5400   */\n    tag_214:\n        /* \"#utility.yul\":5341:5348   */\n      0x00\n        /* \"#utility.yul\":5370:5394   */\n      tag_315\n        /* \"#utility.yul\":5388:5393   */\n      dup3\n        /* \"#utility.yul\":5370:5394   */\n      tag_190\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5359:5394   */\n      swap1\n      pop\n        /* \"#utility.yul\":5304:5400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5406:5524   */\n    tag_215:\n        /* \"#utility.yul\":5493:5517   */\n      tag_317\n        /* \"#utility.yul\":5511:5516   */\n      dup2\n        /* \"#utility.yul\":5493:5517   */\n      tag_214\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5488:5491   */\n      dup3\n        /* \"#utility.yul\":5481:5518   */\n      mstore\n        /* \"#utility.yul\":5406:5524   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5752   */\n    tag_55:\n        /* \"#utility.yul\":5623:5627   */\n      0x00\n        /* \"#utility.yul\":5661:5663   */\n      0x20\n        /* \"#utility.yul\":5650:5659   */\n      dup3\n        /* \"#utility.yul\":5646:5664   */\n      add\n        /* \"#utility.yul\":5638:5664   */\n      swap1\n      pop\n        /* \"#utility.yul\":5674:5745   */\n      tag_319\n        /* \"#utility.yul\":5742:5743   */\n      0x00\n        /* \"#utility.yul\":5731:5740   */\n      dup4\n        /* \"#utility.yul\":5727:5744   */\n      add\n        /* \"#utility.yul\":5718:5724   */\n      dup5\n        /* \"#utility.yul\":5674:5745   */\n      tag_215\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5530:5752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5758:5903   */\n    tag_216:\n        /* \"#utility.yul\":5827:5836   */\n      0x00\n        /* \"#utility.yul\":5860:5897   */\n      tag_321\n        /* \"#utility.yul\":5891:5896   */\n      dup3\n        /* \"#utility.yul\":5860:5897   */\n      tag_193\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5847:5897   */\n      swap1\n      pop\n        /* \"#utility.yul\":5758:5903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5909:6078   */\n    tag_217:\n        /* \"#utility.yul\":6015:6071   */\n      tag_323\n        /* \"#utility.yul\":6065:6070   */\n      dup2\n        /* \"#utility.yul\":6015:6071   */\n      tag_216\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6010:6013   */\n      dup3\n        /* \"#utility.yul\":6003:6072   */\n      mstore\n        /* \"#utility.yul\":5909:6078   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6084:6344   */\n    tag_59:\n        /* \"#utility.yul\":6196:6200   */\n      0x00\n        /* \"#utility.yul\":6234:6236   */\n      0x20\n        /* \"#utility.yul\":6223:6232   */\n      dup3\n        /* \"#utility.yul\":6219:6237   */\n      add\n        /* \"#utility.yul\":6211:6237   */\n      swap1\n      pop\n        /* \"#utility.yul\":6247:6337   */\n      tag_325\n        /* \"#utility.yul\":6334:6335   */\n      0x00\n        /* \"#utility.yul\":6323:6332   */\n      dup4\n        /* \"#utility.yul\":6319:6336   */\n      add\n        /* \"#utility.yul\":6310:6316   */\n      dup5\n        /* \"#utility.yul\":6247:6337   */\n      tag_217\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6084:6344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6350:6488   */\n    tag_218:\n        /* \"#utility.yul\":6431:6463   */\n      tag_327\n        /* \"#utility.yul\":6457:6462   */\n      dup2\n        /* \"#utility.yul\":6431:6463   */\n      tag_204\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6424:6429   */\n      dup2\n        /* \"#utility.yul\":6421:6464   */\n      eq\n        /* \"#utility.yul\":6411:6482   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":6478:6479   */\n      0x00\n        /* \"#utility.yul\":6475:6476   */\n      dup1\n        /* \"#utility.yul\":6468:6480   */\n      revert\n        /* \"#utility.yul\":6411:6482   */\n    tag_328:\n        /* \"#utility.yul\":6350:6488   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6494:6649   */\n    tag_219:\n        /* \"#utility.yul\":6548:6553   */\n      0x00\n        /* \"#utility.yul\":6586:6592   */\n      dup2\n        /* \"#utility.yul\":6573:6593   */\n      calldataload\n        /* \"#utility.yul\":6564:6593   */\n      swap1\n      pop\n        /* \"#utility.yul\":6602:6643   */\n      tag_330\n        /* \"#utility.yul\":6637:6642   */\n      dup2\n        /* \"#utility.yul\":6602:6643   */\n      tag_218\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":6494:6649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6655:7145   */\n    tag_65:\n        /* \"#utility.yul\":6731:6737   */\n      0x00\n        /* \"#utility.yul\":6739:6745   */\n      dup1\n        /* \"#utility.yul\":6788:6790   */\n      0x40\n        /* \"#utility.yul\":6776:6785   */\n      dup4\n        /* \"#utility.yul\":6767:6774   */\n      dup6\n        /* \"#utility.yul\":6763:6786   */\n      sub\n        /* \"#utility.yul\":6759:6791   */\n      slt\n        /* \"#utility.yul\":6756:6875   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":6794:6873   */\n      tag_333\n      tag_197\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6756:6875   */\n    tag_332:\n        /* \"#utility.yul\":6914:6915   */\n      0x00\n        /* \"#utility.yul\":6939:6992   */\n      tag_334\n        /* \"#utility.yul\":6984:6991   */\n      dup6\n        /* \"#utility.yul\":6975:6981   */\n      dup3\n        /* \"#utility.yul\":6964:6973   */\n      dup7\n        /* \"#utility.yul\":6960:6982   */\n      add\n        /* \"#utility.yul\":6939:6992   */\n      tag_201\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6929:6992   */\n      swap3\n      pop\n        /* \"#utility.yul\":6885:7002   */\n      pop\n        /* \"#utility.yul\":7041:7043   */\n      0x20\n        /* \"#utility.yul\":7067:7128   */\n      tag_335\n        /* \"#utility.yul\":7120:7127   */\n      dup6\n        /* \"#utility.yul\":7111:7117   */\n      dup3\n        /* \"#utility.yul\":7100:7109   */\n      dup7\n        /* \"#utility.yul\":7096:7118   */\n      add\n        /* \"#utility.yul\":7067:7128   */\n      tag_219\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7057:7128   */\n      swap2\n      pop\n        /* \"#utility.yul\":7012:7138   */\n      pop\n        /* \"#utility.yul\":6655:7145   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7151:7273   */\n    tag_220:\n        /* \"#utility.yul\":7224:7248   */\n      tag_337\n        /* \"#utility.yul\":7242:7247   */\n      dup2\n        /* \"#utility.yul\":7224:7248   */\n      tag_214\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7217:7222   */\n      dup2\n        /* \"#utility.yul\":7214:7249   */\n      eq\n        /* \"#utility.yul\":7204:7267   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":7263:7264   */\n      0x00\n        /* \"#utility.yul\":7260:7261   */\n      dup1\n        /* \"#utility.yul\":7253:7265   */\n      revert\n        /* \"#utility.yul\":7204:7267   */\n    tag_338:\n        /* \"#utility.yul\":7151:7273   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7279:7418   */\n    tag_221:\n        /* \"#utility.yul\":7325:7330   */\n      0x00\n        /* \"#utility.yul\":7363:7369   */\n      dup2\n        /* \"#utility.yul\":7350:7370   */\n      calldataload\n        /* \"#utility.yul\":7341:7370   */\n      swap1\n      pop\n        /* \"#utility.yul\":7379:7412   */\n      tag_340\n        /* \"#utility.yul\":7406:7411   */\n      dup2\n        /* \"#utility.yul\":7379:7412   */\n      tag_220\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7279:7418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7424:7753   */\n    tag_69:\n        /* \"#utility.yul\":7483:7489   */\n      0x00\n        /* \"#utility.yul\":7532:7534   */\n      0x20\n        /* \"#utility.yul\":7520:7529   */\n      dup3\n        /* \"#utility.yul\":7511:7518   */\n      dup5\n        /* \"#utility.yul\":7507:7530   */\n      sub\n        /* \"#utility.yul\":7503:7535   */\n      slt\n        /* \"#utility.yul\":7500:7619   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":7538:7617   */\n      tag_343\n      tag_197\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7500:7619   */\n    tag_342:\n        /* \"#utility.yul\":7658:7659   */\n      0x00\n        /* \"#utility.yul\":7683:7736   */\n      tag_344\n        /* \"#utility.yul\":7728:7735   */\n      dup5\n        /* \"#utility.yul\":7719:7725   */\n      dup3\n        /* \"#utility.yul\":7708:7717   */\n      dup6\n        /* \"#utility.yul\":7704:7726   */\n      add\n        /* \"#utility.yul\":7683:7736   */\n      tag_221\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7673:7736   */\n      swap2\n      pop\n        /* \"#utility.yul\":7629:7746   */\n      pop\n        /* \"#utility.yul\":7424:7753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7759:7875   */\n    tag_222:\n        /* \"#utility.yul\":7829:7850   */\n      tag_346\n        /* \"#utility.yul\":7844:7849   */\n      dup2\n        /* \"#utility.yul\":7829:7850   */\n      tag_206\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7822:7827   */\n      dup2\n        /* \"#utility.yul\":7819:7851   */\n      eq\n        /* \"#utility.yul\":7809:7869   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":7865:7866   */\n      0x00\n        /* \"#utility.yul\":7862:7863   */\n      dup1\n        /* \"#utility.yul\":7855:7867   */\n      revert\n        /* \"#utility.yul\":7809:7869   */\n    tag_347:\n        /* \"#utility.yul\":7759:7875   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7881:8014   */\n    tag_223:\n        /* \"#utility.yul\":7924:7929   */\n      0x00\n        /* \"#utility.yul\":7962:7968   */\n      dup2\n        /* \"#utility.yul\":7949:7969   */\n      calldataload\n        /* \"#utility.yul\":7940:7969   */\n      swap1\n      pop\n        /* \"#utility.yul\":7978:8008   */\n      tag_349\n        /* \"#utility.yul\":8002:8007   */\n      dup2\n        /* \"#utility.yul\":7978:8008   */\n      tag_222\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7881:8014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8020:8649   */\n    tag_73:\n        /* \"#utility.yul\":8102:8108   */\n      0x00\n        /* \"#utility.yul\":8110:8116   */\n      dup1\n        /* \"#utility.yul\":8118:8124   */\n      0x00\n        /* \"#utility.yul\":8167:8169   */\n      0x60\n        /* \"#utility.yul\":8155:8164   */\n      dup5\n        /* \"#utility.yul\":8146:8153   */\n      dup7\n        /* \"#utility.yul\":8142:8165   */\n      sub\n        /* \"#utility.yul\":8138:8170   */\n      slt\n        /* \"#utility.yul\":8135:8254   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":8173:8252   */\n      tag_352\n      tag_197\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8135:8254   */\n    tag_351:\n        /* \"#utility.yul\":8293:8294   */\n      0x00\n        /* \"#utility.yul\":8318:8371   */\n      tag_353\n        /* \"#utility.yul\":8363:8370   */\n      dup7\n        /* \"#utility.yul\":8354:8360   */\n      dup3\n        /* \"#utility.yul\":8343:8352   */\n      dup8\n        /* \"#utility.yul\":8339:8361   */\n      add\n        /* \"#utility.yul\":8318:8371   */\n      tag_201\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":8308:8371   */\n      swap4\n      pop\n        /* \"#utility.yul\":8264:8381   */\n      pop\n        /* \"#utility.yul\":8420:8422   */\n      0x20\n        /* \"#utility.yul\":8446:8507   */\n      tag_354\n        /* \"#utility.yul\":8499:8506   */\n      dup7\n        /* \"#utility.yul\":8490:8496   */\n      dup3\n        /* \"#utility.yul\":8479:8488   */\n      dup8\n        /* \"#utility.yul\":8475:8497   */\n      add\n        /* \"#utility.yul\":8446:8507   */\n      tag_219\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8436:8507   */\n      swap3\n      pop\n        /* \"#utility.yul\":8391:8517   */\n      pop\n        /* \"#utility.yul\":8556:8558   */\n      0x40\n        /* \"#utility.yul\":8582:8632   */\n      tag_355\n        /* \"#utility.yul\":8624:8631   */\n      dup7\n        /* \"#utility.yul\":8615:8621   */\n      dup3\n        /* \"#utility.yul\":8604:8613   */\n      dup8\n        /* \"#utility.yul\":8600:8622   */\n      add\n        /* \"#utility.yul\":8582:8632   */\n      tag_223\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8572:8632   */\n      swap2\n      pop\n        /* \"#utility.yul\":8527:8642   */\n      pop\n        /* \"#utility.yul\":8020:8649   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8655:8824   */\n    tag_224:\n        /* \"#utility.yul\":8739:8750   */\n      0x00\n        /* \"#utility.yul\":8773:8779   */\n      dup3\n        /* \"#utility.yul\":8768:8771   */\n      dup3\n        /* \"#utility.yul\":8761:8780   */\n      mstore\n        /* \"#utility.yul\":8813:8817   */\n      0x20\n        /* \"#utility.yul\":8808:8811   */\n      dup3\n        /* \"#utility.yul\":8804:8818   */\n      add\n        /* \"#utility.yul\":8789:8818   */\n      swap1\n      pop\n        /* \"#utility.yul\":8655:8824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8830:8999   */\n    tag_225:\n        /* \"#utility.yul\":8970:8991   */\n      0x4d65726368616e74206e6f742061637469766500000000000000000000000000\n        /* \"#utility.yul\":8966:8967   */\n      0x00\n        /* \"#utility.yul\":8958:8964   */\n      dup3\n        /* \"#utility.yul\":8954:8968   */\n      add\n        /* \"#utility.yul\":8947:8992   */\n      mstore\n        /* \"#utility.yul\":8830:8999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9005:9371   */\n    tag_226:\n        /* \"#utility.yul\":9147:9150   */\n      0x00\n        /* \"#utility.yul\":9168:9235   */\n      tag_359\n        /* \"#utility.yul\":9232:9234   */\n      0x13\n        /* \"#utility.yul\":9227:9230   */\n      dup4\n        /* \"#utility.yul\":9168:9235   */\n      tag_224\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9161:9235   */\n      swap2\n      pop\n        /* \"#utility.yul\":9244:9337   */\n      tag_360\n        /* \"#utility.yul\":9333:9336   */\n      dup3\n        /* \"#utility.yul\":9244:9337   */\n      tag_225\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9362:9364   */\n      0x20\n        /* \"#utility.yul\":9357:9360   */\n      dup3\n        /* \"#utility.yul\":9353:9365   */\n      add\n        /* \"#utility.yul\":9346:9365   */\n      swap1\n      pop\n        /* \"#utility.yul\":9005:9371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9377:9796   */\n    tag_78:\n        /* \"#utility.yul\":9543:9547   */\n      0x00\n        /* \"#utility.yul\":9581:9583   */\n      0x20\n        /* \"#utility.yul\":9570:9579   */\n      dup3\n        /* \"#utility.yul\":9566:9584   */\n      add\n        /* \"#utility.yul\":9558:9584   */\n      swap1\n      pop\n        /* \"#utility.yul\":9630:9639   */\n      dup2\n        /* \"#utility.yul\":9624:9628   */\n      dup2\n        /* \"#utility.yul\":9620:9640   */\n      sub\n        /* \"#utility.yul\":9616:9617   */\n      0x00\n        /* \"#utility.yul\":9605:9614   */\n      dup4\n        /* \"#utility.yul\":9601:9618   */\n      add\n        /* \"#utility.yul\":9594:9641   */\n      mstore\n        /* \"#utility.yul\":9658:9789   */\n      tag_362\n        /* \"#utility.yul\":9784:9788   */\n      dup2\n        /* \"#utility.yul\":9658:9789   */\n      tag_226\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9650:9789   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9802:10244   */\n    tag_80:\n        /* \"#utility.yul\":9951:9955   */\n      0x00\n        /* \"#utility.yul\":9989:9991   */\n      0x60\n        /* \"#utility.yul\":9978:9987   */\n      dup3\n        /* \"#utility.yul\":9974:9992   */\n      add\n        /* \"#utility.yul\":9966:9992   */\n      swap1\n      pop\n        /* \"#utility.yul\":10002:10073   */\n      tag_364\n        /* \"#utility.yul\":10070:10071   */\n      0x00\n        /* \"#utility.yul\":10059:10068   */\n      dup4\n        /* \"#utility.yul\":10055:10072   */\n      add\n        /* \"#utility.yul\":10046:10052   */\n      dup7\n        /* \"#utility.yul\":10002:10073   */\n      tag_215\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10083:10155   */\n      tag_365\n        /* \"#utility.yul\":10151:10153   */\n      0x20\n        /* \"#utility.yul\":10140:10149   */\n      dup4\n        /* \"#utility.yul\":10136:10154   */\n      add\n        /* \"#utility.yul\":10127:10133   */\n      dup6\n        /* \"#utility.yul\":10083:10155   */\n      tag_215\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10165:10237   */\n      tag_366\n        /* \"#utility.yul\":10233:10235   */\n      0x40\n        /* \"#utility.yul\":10222:10231   */\n      dup4\n        /* \"#utility.yul\":10218:10236   */\n      add\n        /* \"#utility.yul\":10209:10215   */\n      dup5\n        /* \"#utility.yul\":10165:10237   */\n      tag_203\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9802:10244   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10250:10387   */\n    tag_227:\n        /* \"#utility.yul\":10304:10309   */\n      0x00\n        /* \"#utility.yul\":10335:10341   */\n      dup2\n        /* \"#utility.yul\":10329:10342   */\n      mload\n        /* \"#utility.yul\":10320:10342   */\n      swap1\n      pop\n        /* \"#utility.yul\":10351:10381   */\n      tag_368\n        /* \"#utility.yul\":10375:10380   */\n      dup2\n        /* \"#utility.yul\":10351:10381   */\n      tag_222\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10250:10387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10393:10738   */\n    tag_84:\n        /* \"#utility.yul\":10460:10466   */\n      0x00\n        /* \"#utility.yul\":10509:10511   */\n      0x20\n        /* \"#utility.yul\":10497:10506   */\n      dup3\n        /* \"#utility.yul\":10488:10495   */\n      dup5\n        /* \"#utility.yul\":10484:10507   */\n      sub\n        /* \"#utility.yul\":10480:10512   */\n      slt\n        /* \"#utility.yul\":10477:10596   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":10515:10594   */\n      tag_371\n      tag_197\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10477:10596   */\n    tag_370:\n        /* \"#utility.yul\":10635:10636   */\n      0x00\n        /* \"#utility.yul\":10660:10721   */\n      tag_372\n        /* \"#utility.yul\":10713:10720   */\n      dup5\n        /* \"#utility.yul\":10704:10710   */\n      dup3\n        /* \"#utility.yul\":10693:10702   */\n      dup6\n        /* \"#utility.yul\":10689:10711   */\n      add\n        /* \"#utility.yul\":10660:10721   */\n      tag_227\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10650:10721   */\n      swap2\n      pop\n        /* \"#utility.yul\":10606:10731   */\n      pop\n        /* \"#utility.yul\":10393:10738   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10744:10909   */\n    tag_228:\n        /* \"#utility.yul\":10884:10901   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":10880:10881   */\n      0x00\n        /* \"#utility.yul\":10872:10878   */\n      dup3\n        /* \"#utility.yul\":10868:10882   */\n      add\n        /* \"#utility.yul\":10861:10902   */\n      mstore\n        /* \"#utility.yul\":10744:10909   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10915:11281   */\n    tag_229:\n        /* \"#utility.yul\":11057:11060   */\n      0x00\n        /* \"#utility.yul\":11078:11145   */\n      tag_375\n        /* \"#utility.yul\":11142:11144   */\n      0x0f\n        /* \"#utility.yul\":11137:11140   */\n      dup4\n        /* \"#utility.yul\":11078:11145   */\n      tag_224\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11071:11145   */\n      swap2\n      pop\n        /* \"#utility.yul\":11154:11247   */\n      tag_376\n        /* \"#utility.yul\":11243:11246   */\n      dup3\n        /* \"#utility.yul\":11154:11247   */\n      tag_228\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11272:11274   */\n      0x20\n        /* \"#utility.yul\":11267:11270   */\n      dup3\n        /* \"#utility.yul\":11263:11275   */\n      add\n        /* \"#utility.yul\":11256:11275   */\n      swap1\n      pop\n        /* \"#utility.yul\":10915:11281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11287:11706   */\n    tag_87:\n        /* \"#utility.yul\":11453:11457   */\n      0x00\n        /* \"#utility.yul\":11491:11493   */\n      0x20\n        /* \"#utility.yul\":11480:11489   */\n      dup3\n        /* \"#utility.yul\":11476:11494   */\n      add\n        /* \"#utility.yul\":11468:11494   */\n      swap1\n      pop\n        /* \"#utility.yul\":11540:11549   */\n      dup2\n        /* \"#utility.yul\":11534:11538   */\n      dup2\n        /* \"#utility.yul\":11530:11550   */\n      sub\n        /* \"#utility.yul\":11526:11527   */\n      0x00\n        /* \"#utility.yul\":11515:11524   */\n      dup4\n        /* \"#utility.yul\":11511:11528   */\n      add\n        /* \"#utility.yul\":11504:11551   */\n      mstore\n        /* \"#utility.yul\":11568:11699   */\n      tag_378\n        /* \"#utility.yul\":11694:11698   */\n      dup2\n        /* \"#utility.yul\":11568:11699   */\n      tag_229\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":11560:11699   */\n      swap1\n      pop\n        /* \"#utility.yul\":11287:11706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11712:11892   */\n    tag_230:\n        /* \"#utility.yul\":11760:11837   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11757:11758   */\n      0x00\n        /* \"#utility.yul\":11750:11838   */\n      mstore\n        /* \"#utility.yul\":11857:11861   */\n      0x11\n        /* \"#utility.yul\":11854:11855   */\n      0x04\n        /* \"#utility.yul\":11847:11862   */\n      mstore\n        /* \"#utility.yul\":11881:11885   */\n      0x24\n        /* \"#utility.yul\":11878:11879   */\n      0x00\n        /* \"#utility.yul\":11871:11886   */\n      revert\n        /* \"#utility.yul\":11898:12089   */\n    tag_89:\n        /* \"#utility.yul\":11938:11941   */\n      0x00\n        /* \"#utility.yul\":11957:11977   */\n      tag_381\n        /* \"#utility.yul\":11975:11976   */\n      dup3\n        /* \"#utility.yul\":11957:11977   */\n      tag_202\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11952:11977   */\n      swap2\n      pop\n        /* \"#utility.yul\":11991:12011   */\n      tag_382\n        /* \"#utility.yul\":12009:12010   */\n      dup4\n        /* \"#utility.yul\":11991:12011   */\n      tag_202\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11986:12011   */\n      swap3\n      pop\n        /* \"#utility.yul\":12034:12035   */\n      dup3\n        /* \"#utility.yul\":12031:12032   */\n      dup3\n        /* \"#utility.yul\":12027:12036   */\n      add\n        /* \"#utility.yul\":12020:12036   */\n      swap1\n      pop\n        /* \"#utility.yul\":12055:12058   */\n      dup1\n        /* \"#utility.yul\":12052:12053   */\n      dup3\n        /* \"#utility.yul\":12049:12059   */\n      gt\n        /* \"#utility.yul\":12046:12082   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":12062:12080   */\n      tag_384\n      tag_230\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12046:12082   */\n    tag_383:\n        /* \"#utility.yul\":11898:12089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12095:12238   */\n    tag_231:\n        /* \"#utility.yul\":12152:12157   */\n      0x00\n        /* \"#utility.yul\":12183:12189   */\n      dup2\n        /* \"#utility.yul\":12177:12190   */\n      mload\n        /* \"#utility.yul\":12168:12190   */\n      swap1\n      pop\n        /* \"#utility.yul\":12199:12232   */\n      tag_386\n        /* \"#utility.yul\":12226:12231   */\n      dup2\n        /* \"#utility.yul\":12199:12232   */\n      tag_210\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12095:12238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12244:12595   */\n    tag_98:\n        /* \"#utility.yul\":12314:12320   */\n      0x00\n        /* \"#utility.yul\":12363:12365   */\n      0x20\n        /* \"#utility.yul\":12351:12360   */\n      dup3\n        /* \"#utility.yul\":12342:12349   */\n      dup5\n        /* \"#utility.yul\":12338:12361   */\n      sub\n        /* \"#utility.yul\":12334:12366   */\n      slt\n        /* \"#utility.yul\":12331:12450   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":12369:12448   */\n      tag_389\n      tag_197\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":12331:12450   */\n    tag_388:\n        /* \"#utility.yul\":12489:12490   */\n      0x00\n        /* \"#utility.yul\":12514:12578   */\n      tag_390\n        /* \"#utility.yul\":12570:12577   */\n      dup5\n        /* \"#utility.yul\":12561:12567   */\n      dup3\n        /* \"#utility.yul\":12550:12559   */\n      dup6\n        /* \"#utility.yul\":12546:12568   */\n      add\n        /* \"#utility.yul\":12514:12578   */\n      tag_231\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":12504:12578   */\n      swap2\n      pop\n        /* \"#utility.yul\":12460:12588   */\n      pop\n        /* \"#utility.yul\":12244:12595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12601:12764   */\n    tag_232:\n        /* \"#utility.yul\":12741:12756   */\n      0x496e76616c696420707269636500000000000000000000000000000000000000\n        /* \"#utility.yul\":12737:12738   */\n      0x00\n        /* \"#utility.yul\":12729:12735   */\n      dup3\n        /* \"#utility.yul\":12725:12739   */\n      add\n        /* \"#utility.yul\":12718:12757   */\n      mstore\n        /* \"#utility.yul\":12601:12764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12770:13136   */\n    tag_233:\n        /* \"#utility.yul\":12912:12915   */\n      0x00\n        /* \"#utility.yul\":12933:13000   */\n      tag_393\n        /* \"#utility.yul\":12997:12999   */\n      0x0d\n        /* \"#utility.yul\":12992:12995   */\n      dup4\n        /* \"#utility.yul\":12933:13000   */\n      tag_224\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12926:13000   */\n      swap2\n      pop\n        /* \"#utility.yul\":13009:13102   */\n      tag_394\n        /* \"#utility.yul\":13098:13101   */\n      dup3\n        /* \"#utility.yul\":13009:13102   */\n      tag_232\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13127:13129   */\n      0x20\n        /* \"#utility.yul\":13122:13125   */\n      dup3\n        /* \"#utility.yul\":13118:13130   */\n      add\n        /* \"#utility.yul\":13111:13130   */\n      swap1\n      pop\n        /* \"#utility.yul\":12770:13136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13142:13561   */\n    tag_101:\n        /* \"#utility.yul\":13308:13312   */\n      0x00\n        /* \"#utility.yul\":13346:13348   */\n      0x20\n        /* \"#utility.yul\":13335:13344   */\n      dup3\n        /* \"#utility.yul\":13331:13349   */\n      add\n        /* \"#utility.yul\":13323:13349   */\n      swap1\n      pop\n        /* \"#utility.yul\":13395:13404   */\n      dup2\n        /* \"#utility.yul\":13389:13393   */\n      dup2\n        /* \"#utility.yul\":13385:13405   */\n      sub\n        /* \"#utility.yul\":13381:13382   */\n      0x00\n        /* \"#utility.yul\":13370:13379   */\n      dup4\n        /* \"#utility.yul\":13366:13383   */\n      add\n        /* \"#utility.yul\":13359:13406   */\n      mstore\n        /* \"#utility.yul\":13423:13554   */\n      tag_396\n        /* \"#utility.yul\":13549:13553   */\n      dup2\n        /* \"#utility.yul\":13423:13554   */\n      tag_233\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":13415:13554   */\n      swap1\n      pop\n        /* \"#utility.yul\":13142:13561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13567:13977   */\n    tag_103:\n        /* \"#utility.yul\":13607:13614   */\n      0x00\n        /* \"#utility.yul\":13630:13650   */\n      tag_398\n        /* \"#utility.yul\":13648:13649   */\n      dup3\n        /* \"#utility.yul\":13630:13650   */\n      tag_202\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13625:13650   */\n      swap2\n      pop\n        /* \"#utility.yul\":13664:13684   */\n      tag_399\n        /* \"#utility.yul\":13682:13683   */\n      dup4\n        /* \"#utility.yul\":13664:13684   */\n      tag_202\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":13659:13684   */\n      swap3\n      pop\n        /* \"#utility.yul\":13719:13720   */\n      dup3\n        /* \"#utility.yul\":13716:13717   */\n      dup3\n        /* \"#utility.yul\":13712:13721   */\n      mul\n        /* \"#utility.yul\":13741:13771   */\n      tag_400\n        /* \"#utility.yul\":13759:13770   */\n      dup2\n        /* \"#utility.yul\":13741:13771   */\n      tag_202\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13730:13771   */\n      swap2\n      pop\n        /* \"#utility.yul\":13920:13921   */\n      dup3\n        /* \"#utility.yul\":13911:13918   */\n      dup3\n        /* \"#utility.yul\":13907:13922   */\n      div\n        /* \"#utility.yul\":13904:13905   */\n      dup5\n        /* \"#utility.yul\":13901:13923   */\n      eq\n        /* \"#utility.yul\":13881:13882   */\n      dup4\n        /* \"#utility.yul\":13874:13883   */\n      iszero\n        /* \"#utility.yul\":13854:13937   */\n      or\n        /* \"#utility.yul\":13831:13970   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":13950:13968   */\n      tag_402\n      tag_230\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":13831:13970   */\n    tag_401:\n        /* \"#utility.yul\":13615:13977   */\n      pop\n        /* \"#utility.yul\":13567:13977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13983:14163   */\n    tag_234:\n        /* \"#utility.yul\":14031:14108   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14028:14029   */\n      0x00\n        /* \"#utility.yul\":14021:14109   */\n      mstore\n        /* \"#utility.yul\":14128:14132   */\n      0x12\n        /* \"#utility.yul\":14125:14126   */\n      0x04\n        /* \"#utility.yul\":14118:14133   */\n      mstore\n        /* \"#utility.yul\":14152:14156   */\n      0x24\n        /* \"#utility.yul\":14149:14150   */\n      0x00\n        /* \"#utility.yul\":14142:14157   */\n      revert\n        /* \"#utility.yul\":14169:14354   */\n    tag_105:\n        /* \"#utility.yul\":14209:14210   */\n      0x00\n        /* \"#utility.yul\":14226:14246   */\n      tag_405\n        /* \"#utility.yul\":14244:14245   */\n      dup3\n        /* \"#utility.yul\":14226:14246   */\n      tag_202\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":14221:14246   */\n      swap2\n      pop\n        /* \"#utility.yul\":14260:14280   */\n      tag_406\n        /* \"#utility.yul\":14278:14279   */\n      dup4\n        /* \"#utility.yul\":14260:14280   */\n      tag_202\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":14255:14280   */\n      swap3\n      pop\n        /* \"#utility.yul\":14299:14300   */\n      dup3\n        /* \"#utility.yul\":14289:14324   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":14304:14322   */\n      tag_408\n      tag_234\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":14289:14324   */\n    tag_407:\n        /* \"#utility.yul\":14346:14347   */\n      dup3\n        /* \"#utility.yul\":14343:14344   */\n      dup3\n        /* \"#utility.yul\":14339:14348   */\n      div\n        /* \"#utility.yul\":14334:14348   */\n      swap1\n      pop\n        /* \"#utility.yul\":14169:14354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14360:14692   */\n    tag_113:\n        /* \"#utility.yul\":14481:14485   */\n      0x00\n        /* \"#utility.yul\":14519:14521   */\n      0x40\n        /* \"#utility.yul\":14508:14517   */\n      dup3\n        /* \"#utility.yul\":14504:14522   */\n      add\n        /* \"#utility.yul\":14496:14522   */\n      swap1\n      pop\n        /* \"#utility.yul\":14532:14603   */\n      tag_410\n        /* \"#utility.yul\":14600:14601   */\n      0x00\n        /* \"#utility.yul\":14589:14598   */\n      dup4\n        /* \"#utility.yul\":14585:14602   */\n      add\n        /* \"#utility.yul\":14576:14582   */\n      dup6\n        /* \"#utility.yul\":14532:14603   */\n      tag_215\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":14613:14685   */\n      tag_411\n        /* \"#utility.yul\":14681:14683   */\n      0x20\n        /* \"#utility.yul\":14670:14679   */\n      dup4\n        /* \"#utility.yul\":14666:14684   */\n      add\n        /* \"#utility.yul\":14657:14663   */\n      dup5\n        /* \"#utility.yul\":14613:14685   */\n      tag_203\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":14360:14692   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14698:14867   */\n    tag_235:\n        /* \"#utility.yul\":14838:14859   */\n      0x6342544320617070726f7665206661696c656400000000000000000000000000\n        /* \"#utility.yul\":14834:14835   */\n      0x00\n        /* \"#utility.yul\":14826:14832   */\n      dup3\n        /* \"#utility.yul\":14822:14836   */\n      add\n        /* \"#utility.yul\":14815:14860   */\n      mstore\n        /* \"#utility.yul\":14698:14867   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14873:15239   */\n    tag_236:\n        /* \"#utility.yul\":15015:15018   */\n      0x00\n        /* \"#utility.yul\":15036:15103   */\n      tag_414\n        /* \"#utility.yul\":15100:15102   */\n      0x13\n        /* \"#utility.yul\":15095:15098   */\n      dup4\n        /* \"#utility.yul\":15036:15103   */\n      tag_224\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":15029:15103   */\n      swap2\n      pop\n        /* \"#utility.yul\":15112:15205   */\n      tag_415\n        /* \"#utility.yul\":15201:15204   */\n      dup3\n        /* \"#utility.yul\":15112:15205   */\n      tag_235\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":15230:15232   */\n      0x20\n        /* \"#utility.yul\":15225:15228   */\n      dup3\n        /* \"#utility.yul\":15221:15233   */\n      add\n        /* \"#utility.yul\":15214:15233   */\n      swap1\n      pop\n        /* \"#utility.yul\":14873:15239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15245:15664   */\n    tag_119:\n        /* \"#utility.yul\":15411:15415   */\n      0x00\n        /* \"#utility.yul\":15449:15451   */\n      0x20\n        /* \"#utility.yul\":15438:15447   */\n      dup3\n        /* \"#utility.yul\":15434:15452   */\n      add\n        /* \"#utility.yul\":15426:15452   */\n      swap1\n      pop\n        /* \"#utility.yul\":15498:15507   */\n      dup2\n        /* \"#utility.yul\":15492:15496   */\n      dup2\n        /* \"#utility.yul\":15488:15508   */\n      sub\n        /* \"#utility.yul\":15484:15485   */\n      0x00\n        /* \"#utility.yul\":15473:15482   */\n      dup4\n        /* \"#utility.yul\":15469:15486   */\n      add\n        /* \"#utility.yul\":15462:15509   */\n      mstore\n        /* \"#utility.yul\":15526:15657   */\n      tag_417\n        /* \"#utility.yul\":15652:15656   */\n      dup2\n        /* \"#utility.yul\":15526:15657   */\n      tag_236\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":15518:15657   */\n      swap1\n      pop\n        /* \"#utility.yul\":15245:15664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15670:16002   */\n    tag_121:\n        /* \"#utility.yul\":15791:15795   */\n      0x00\n        /* \"#utility.yul\":15829:15831   */\n      0x40\n        /* \"#utility.yul\":15818:15827   */\n      dup3\n        /* \"#utility.yul\":15814:15832   */\n      add\n        /* \"#utility.yul\":15806:15832   */\n      swap1\n      pop\n        /* \"#utility.yul\":15842:15913   */\n      tag_419\n        /* \"#utility.yul\":15910:15911   */\n      0x00\n        /* \"#utility.yul\":15899:15908   */\n      dup4\n        /* \"#utility.yul\":15895:15912   */\n      add\n        /* \"#utility.yul\":15886:15892   */\n      dup6\n        /* \"#utility.yul\":15842:15913   */\n      tag_203\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":15923:15995   */\n      tag_420\n        /* \"#utility.yul\":15991:15993   */\n      0x20\n        /* \"#utility.yul\":15980:15989   */\n      dup4\n        /* \"#utility.yul\":15976:15994   */\n      add\n        /* \"#utility.yul\":15967:15973   */\n      dup5\n        /* \"#utility.yul\":15923:15995   */\n      tag_203\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":15670:16002   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16008:16180   */\n    tag_237:\n        /* \"#utility.yul\":16148:16172   */\n      0x4e6f2062616c616e636520746f20776974686472617700000000000000000000\n        /* \"#utility.yul\":16144:16145   */\n      0x00\n        /* \"#utility.yul\":16136:16142   */\n      dup3\n        /* \"#utility.yul\":16132:16146   */\n      add\n        /* \"#utility.yul\":16125:16173   */\n      mstore\n        /* \"#utility.yul\":16008:16180   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16186:16552   */\n    tag_238:\n        /* \"#utility.yul\":16328:16331   */\n      0x00\n        /* \"#utility.yul\":16349:16416   */\n      tag_423\n        /* \"#utility.yul\":16413:16415   */\n      0x16\n        /* \"#utility.yul\":16408:16411   */\n      dup4\n        /* \"#utility.yul\":16349:16416   */\n      tag_224\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":16342:16416   */\n      swap2\n      pop\n        /* \"#utility.yul\":16425:16518   */\n      tag_424\n        /* \"#utility.yul\":16514:16517   */\n      dup3\n        /* \"#utility.yul\":16425:16518   */\n      tag_237\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":16543:16545   */\n      0x20\n        /* \"#utility.yul\":16538:16541   */\n      dup3\n        /* \"#utility.yul\":16534:16546   */\n      add\n        /* \"#utility.yul\":16527:16546   */\n      swap1\n      pop\n        /* \"#utility.yul\":16186:16552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16558:16977   */\n    tag_141:\n        /* \"#utility.yul\":16724:16728   */\n      0x00\n        /* \"#utility.yul\":16762:16764   */\n      0x20\n        /* \"#utility.yul\":16751:16760   */\n      dup3\n        /* \"#utility.yul\":16747:16765   */\n      add\n        /* \"#utility.yul\":16739:16765   */\n      swap1\n      pop\n        /* \"#utility.yul\":16811:16820   */\n      dup2\n        /* \"#utility.yul\":16805:16809   */\n      dup2\n        /* \"#utility.yul\":16801:16821   */\n      sub\n        /* \"#utility.yul\":16797:16798   */\n      0x00\n        /* \"#utility.yul\":16786:16795   */\n      dup4\n        /* \"#utility.yul\":16782:16799   */\n      add\n        /* \"#utility.yul\":16775:16822   */\n      mstore\n        /* \"#utility.yul\":16839:16970   */\n      tag_426\n        /* \"#utility.yul\":16965:16969   */\n      dup2\n        /* \"#utility.yul\":16839:16970   */\n      tag_238\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":16831:16970   */\n      swap1\n      pop\n        /* \"#utility.yul\":16558:16977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16983:17117   */\n    tag_239:\n        /* \"#utility.yul\":17041:17050   */\n      0x00\n        /* \"#utility.yul\":17074:17111   */\n      tag_428\n        /* \"#utility.yul\":17105:17110   */\n      dup3\n        /* \"#utility.yul\":17074:17111   */\n      tag_193\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":17061:17111   */\n      swap1\n      pop\n        /* \"#utility.yul\":16983:17117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17123:17270   */\n    tag_240:\n        /* \"#utility.yul\":17218:17263   */\n      tag_430\n        /* \"#utility.yul\":17257:17262   */\n      dup2\n        /* \"#utility.yul\":17218:17263   */\n      tag_239\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":17213:17216   */\n      dup3\n        /* \"#utility.yul\":17206:17264   */\n      mstore\n        /* \"#utility.yul\":17123:17270   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17276:17624   */\n    tag_143:\n        /* \"#utility.yul\":17405:17409   */\n      0x00\n        /* \"#utility.yul\":17443:17445   */\n      0x40\n        /* \"#utility.yul\":17432:17441   */\n      dup3\n        /* \"#utility.yul\":17428:17446   */\n      add\n        /* \"#utility.yul\":17420:17446   */\n      swap1\n      pop\n        /* \"#utility.yul\":17456:17535   */\n      tag_432\n        /* \"#utility.yul\":17532:17533   */\n      0x00\n        /* \"#utility.yul\":17521:17530   */\n      dup4\n        /* \"#utility.yul\":17517:17534   */\n      add\n        /* \"#utility.yul\":17508:17514   */\n      dup6\n        /* \"#utility.yul\":17456:17535   */\n      tag_240\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":17545:17617   */\n      tag_433\n        /* \"#utility.yul\":17613:17615   */\n      0x20\n        /* \"#utility.yul\":17602:17611   */\n      dup4\n        /* \"#utility.yul\":17598:17616   */\n      add\n        /* \"#utility.yul\":17589:17595   */\n      dup5\n        /* \"#utility.yul\":17545:17617   */\n      tag_203\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":17276:17624   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17630:17978   */\n    tag_150:\n        /* \"#utility.yul\":17759:17763   */\n      0x00\n        /* \"#utility.yul\":17797:17799   */\n      0x40\n        /* \"#utility.yul\":17786:17795   */\n      dup3\n        /* \"#utility.yul\":17782:17800   */\n      add\n        /* \"#utility.yul\":17774:17800   */\n      swap1\n      pop\n        /* \"#utility.yul\":17810:17881   */\n      tag_435\n        /* \"#utility.yul\":17878:17879   */\n      0x00\n        /* \"#utility.yul\":17867:17876   */\n      dup4\n        /* \"#utility.yul\":17863:17880   */\n      add\n        /* \"#utility.yul\":17854:17860   */\n      dup6\n        /* \"#utility.yul\":17810:17881   */\n      tag_203\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":17891:17971   */\n      tag_436\n        /* \"#utility.yul\":17967:17969   */\n      0x20\n        /* \"#utility.yul\":17956:17965   */\n      dup4\n        /* \"#utility.yul\":17952:17970   */\n      add\n        /* \"#utility.yul\":17943:17949   */\n      dup5\n        /* \"#utility.yul\":17891:17971   */\n      tag_240\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":17630:17978   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17984:18152   */\n    tag_241:\n        /* \"#utility.yul\":18124:18144   */\n      0x496e76616c6964206d65726368616e7449640000000000000000000000000000\n        /* \"#utility.yul\":18120:18121   */\n      0x00\n        /* \"#utility.yul\":18112:18118   */\n      dup3\n        /* \"#utility.yul\":18108:18122   */\n      add\n        /* \"#utility.yul\":18101:18145   */\n      mstore\n        /* \"#utility.yul\":17984:18152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18158:18524   */\n    tag_242:\n        /* \"#utility.yul\":18300:18303   */\n      0x00\n        /* \"#utility.yul\":18321:18388   */\n      tag_439\n        /* \"#utility.yul\":18385:18387   */\n      0x12\n        /* \"#utility.yul\":18380:18383   */\n      dup4\n        /* \"#utility.yul\":18321:18388   */\n      tag_224\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":18314:18388   */\n      swap2\n      pop\n        /* \"#utility.yul\":18397:18490   */\n      tag_440\n        /* \"#utility.yul\":18486:18489   */\n      dup3\n        /* \"#utility.yul\":18397:18490   */\n      tag_241\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":18515:18517   */\n      0x20\n        /* \"#utility.yul\":18510:18513   */\n      dup3\n        /* \"#utility.yul\":18506:18518   */\n      add\n        /* \"#utility.yul\":18499:18518   */\n      swap1\n      pop\n        /* \"#utility.yul\":18158:18524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18530:18949   */\n    tag_156:\n        /* \"#utility.yul\":18696:18700   */\n      0x00\n        /* \"#utility.yul\":18734:18736   */\n      0x20\n        /* \"#utility.yul\":18723:18732   */\n      dup3\n        /* \"#utility.yul\":18719:18737   */\n      add\n        /* \"#utility.yul\":18711:18737   */\n      swap1\n      pop\n        /* \"#utility.yul\":18783:18792   */\n      dup2\n        /* \"#utility.yul\":18777:18781   */\n      dup2\n        /* \"#utility.yul\":18773:18793   */\n      sub\n        /* \"#utility.yul\":18769:18770   */\n      0x00\n        /* \"#utility.yul\":18758:18767   */\n      dup4\n        /* \"#utility.yul\":18754:18771   */\n      add\n        /* \"#utility.yul\":18747:18794   */\n      mstore\n        /* \"#utility.yul\":18811:18942   */\n      tag_442\n        /* \"#utility.yul\":18937:18941   */\n      dup2\n        /* \"#utility.yul\":18811:18942   */\n      tag_242\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":18803:18942   */\n      swap1\n      pop\n        /* \"#utility.yul\":18530:18949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18955:19127   */\n    tag_243:\n        /* \"#utility.yul\":19095:19119   */\n      0x496e76616c6964207061796f7574206164647265737300000000000000000000\n        /* \"#utility.yul\":19091:19092   */\n      0x00\n        /* \"#utility.yul\":19083:19089   */\n      dup3\n        /* \"#utility.yul\":19079:19093   */\n      add\n        /* \"#utility.yul\":19072:19120   */\n      mstore\n        /* \"#utility.yul\":18955:19127   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19133:19499   */\n    tag_244:\n        /* \"#utility.yul\":19275:19278   */\n      0x00\n        /* \"#utility.yul\":19296:19363   */\n      tag_445\n        /* \"#utility.yul\":19360:19362   */\n      0x16\n        /* \"#utility.yul\":19355:19358   */\n      dup4\n        /* \"#utility.yul\":19296:19363   */\n      tag_224\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":19289:19363   */\n      swap2\n      pop\n        /* \"#utility.yul\":19372:19465   */\n      tag_446\n        /* \"#utility.yul\":19461:19464   */\n      dup3\n        /* \"#utility.yul\":19372:19465   */\n      tag_243\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":19490:19492   */\n      0x20\n        /* \"#utility.yul\":19485:19488   */\n      dup3\n        /* \"#utility.yul\":19481:19493   */\n      add\n        /* \"#utility.yul\":19474:19493   */\n      swap1\n      pop\n        /* \"#utility.yul\":19133:19499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19505:19924   */\n    tag_159:\n        /* \"#utility.yul\":19671:19675   */\n      0x00\n        /* \"#utility.yul\":19709:19711   */\n      0x20\n        /* \"#utility.yul\":19698:19707   */\n      dup3\n        /* \"#utility.yul\":19694:19712   */\n      add\n        /* \"#utility.yul\":19686:19712   */\n      swap1\n      pop\n        /* \"#utility.yul\":19758:19767   */\n      dup2\n        /* \"#utility.yul\":19752:19756   */\n      dup2\n        /* \"#utility.yul\":19748:19768   */\n      sub\n        /* \"#utility.yul\":19744:19745   */\n      0x00\n        /* \"#utility.yul\":19733:19742   */\n      dup4\n        /* \"#utility.yul\":19729:19746   */\n      add\n        /* \"#utility.yul\":19722:19769   */\n      mstore\n        /* \"#utility.yul\":19786:19917   */\n      tag_448\n        /* \"#utility.yul\":19912:19916   */\n      dup2\n        /* \"#utility.yul\":19786:19917   */\n      tag_244\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":19778:19917   */\n      swap1\n      pop\n        /* \"#utility.yul\":19505:19924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19930:20107   */\n    tag_245:\n        /* \"#utility.yul\":20070:20099   */\n      0x4d65726368616e7420616c726561647920726567697374657265640000000000\n        /* \"#utility.yul\":20066:20067   */\n      0x00\n        /* \"#utility.yul\":20058:20064   */\n      dup3\n        /* \"#utility.yul\":20054:20068   */\n      add\n        /* \"#utility.yul\":20047:20100   */\n      mstore\n        /* \"#utility.yul\":19930:20107   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20113:20479   */\n    tag_246:\n        /* \"#utility.yul\":20255:20258   */\n      0x00\n        /* \"#utility.yul\":20276:20343   */\n      tag_451\n        /* \"#utility.yul\":20340:20342   */\n      0x1b\n        /* \"#utility.yul\":20335:20338   */\n      dup4\n        /* \"#utility.yul\":20276:20343   */\n      tag_224\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":20269:20343   */\n      swap2\n      pop\n        /* \"#utility.yul\":20352:20445   */\n      tag_452\n        /* \"#utility.yul\":20441:20444   */\n      dup3\n        /* \"#utility.yul\":20352:20445   */\n      tag_245\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":20470:20472   */\n      0x20\n        /* \"#utility.yul\":20465:20468   */\n      dup3\n        /* \"#utility.yul\":20461:20473   */\n      add\n        /* \"#utility.yul\":20454:20473   */\n      swap1\n      pop\n        /* \"#utility.yul\":20113:20479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20485:20904   */\n    tag_162:\n        /* \"#utility.yul\":20651:20655   */\n      0x00\n        /* \"#utility.yul\":20689:20691   */\n      0x20\n        /* \"#utility.yul\":20678:20687   */\n      dup3\n        /* \"#utility.yul\":20674:20692   */\n      add\n        /* \"#utility.yul\":20666:20692   */\n      swap1\n      pop\n        /* \"#utility.yul\":20738:20747   */\n      dup2\n        /* \"#utility.yul\":20732:20736   */\n      dup2\n        /* \"#utility.yul\":20728:20748   */\n      sub\n        /* \"#utility.yul\":20724:20725   */\n      0x00\n        /* \"#utility.yul\":20713:20722   */\n      dup4\n        /* \"#utility.yul\":20709:20726   */\n      add\n        /* \"#utility.yul\":20702:20749   */\n      mstore\n        /* \"#utility.yul\":20766:20897   */\n      tag_454\n        /* \"#utility.yul\":20892:20896   */\n      dup2\n        /* \"#utility.yul\":20766:20897   */\n      tag_246\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":20758:20897   */\n      swap1\n      pop\n        /* \"#utility.yul\":20485:20904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20910:21148   */\n    tag_164:\n        /* \"#utility.yul\":21011:21015   */\n      0x00\n        /* \"#utility.yul\":21049:21051   */\n      0x20\n        /* \"#utility.yul\":21038:21047   */\n      dup3\n        /* \"#utility.yul\":21034:21052   */\n      add\n        /* \"#utility.yul\":21026:21052   */\n      swap1\n      pop\n        /* \"#utility.yul\":21062:21141   */\n      tag_456\n        /* \"#utility.yul\":21138:21139   */\n      0x00\n        /* \"#utility.yul\":21127:21136   */\n      dup4\n        /* \"#utility.yul\":21123:21140   */\n      add\n        /* \"#utility.yul\":21114:21120   */\n      dup5\n        /* \"#utility.yul\":21062:21141   */\n      tag_240\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":20910:21148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21154:21327   */\n    tag_247:\n        /* \"#utility.yul\":21294:21319   */\n      0x4d65726368616e74206e6f742072656769737465726564000000000000000000\n        /* \"#utility.yul\":21290:21291   */\n      0x00\n        /* \"#utility.yul\":21282:21288   */\n      dup3\n        /* \"#utility.yul\":21278:21292   */\n      add\n        /* \"#utility.yul\":21271:21320   */\n      mstore\n        /* \"#utility.yul\":21154:21327   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21333:21699   */\n    tag_248:\n        /* \"#utility.yul\":21475:21478   */\n      0x00\n        /* \"#utility.yul\":21496:21563   */\n      tag_459\n        /* \"#utility.yul\":21560:21562   */\n      0x17\n        /* \"#utility.yul\":21555:21558   */\n      dup4\n        /* \"#utility.yul\":21496:21563   */\n      tag_224\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":21489:21563   */\n      swap2\n      pop\n        /* \"#utility.yul\":21572:21665   */\n      tag_460\n        /* \"#utility.yul\":21661:21664   */\n      dup3\n        /* \"#utility.yul\":21572:21665   */\n      tag_247\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":21690:21692   */\n      0x20\n        /* \"#utility.yul\":21685:21688   */\n      dup3\n        /* \"#utility.yul\":21681:21693   */\n      add\n        /* \"#utility.yul\":21674:21693   */\n      swap1\n      pop\n        /* \"#utility.yul\":21333:21699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21705:22124   */\n    tag_176:\n        /* \"#utility.yul\":21871:21875   */\n      0x00\n        /* \"#utility.yul\":21909:21911   */\n      0x20\n        /* \"#utility.yul\":21898:21907   */\n      dup3\n        /* \"#utility.yul\":21894:21912   */\n      add\n        /* \"#utility.yul\":21886:21912   */\n      swap1\n      pop\n        /* \"#utility.yul\":21958:21967   */\n      dup2\n        /* \"#utility.yul\":21952:21956   */\n      dup2\n        /* \"#utility.yul\":21948:21968   */\n      sub\n        /* \"#utility.yul\":21944:21945   */\n      0x00\n        /* \"#utility.yul\":21933:21942   */\n      dup4\n        /* \"#utility.yul\":21929:21946   */\n      add\n        /* \"#utility.yul\":21922:21969   */\n      mstore\n        /* \"#utility.yul\":21986:22117   */\n      tag_462\n        /* \"#utility.yul\":22112:22116   */\n      dup2\n        /* \"#utility.yul\":21986:22117   */\n      tag_248\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":21978:22117   */\n      swap1\n      pop\n        /* \"#utility.yul\":21705:22124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22130:22466   */\n    tag_180:\n        /* \"#utility.yul\":22253:22257   */\n      0x00\n        /* \"#utility.yul\":22291:22293   */\n      0x40\n        /* \"#utility.yul\":22280:22289   */\n      dup3\n        /* \"#utility.yul\":22276:22294   */\n      add\n        /* \"#utility.yul\":22268:22294   */\n      swap1\n      pop\n        /* \"#utility.yul\":22304:22383   */\n      tag_464\n        /* \"#utility.yul\":22380:22381   */\n      0x00\n        /* \"#utility.yul\":22369:22378   */\n      dup4\n        /* \"#utility.yul\":22365:22382   */\n      add\n        /* \"#utility.yul\":22356:22362   */\n      dup6\n        /* \"#utility.yul\":22304:22383   */\n      tag_240\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":22393:22459   */\n      tag_465\n        /* \"#utility.yul\":22455:22457   */\n      0x20\n        /* \"#utility.yul\":22444:22453   */\n      dup4\n        /* \"#utility.yul\":22440:22458   */\n      add\n        /* \"#utility.yul\":22431:22437   */\n      dup5\n        /* \"#utility.yul\":22393:22459   */\n      tag_207\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":22130:22466   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207df806cf04ca5ff70c12db778cacc67538042d5114accee73c828b0c7fa873b364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1096": {
									"entryPoint": null,
									"id": 1096,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 883,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e": {
									"entryPoint": 1430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6098:7",
										"nodeType": "YulBlock",
										"src": "0:6098:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "973:692:7",
													"nodeType": "YulBlock",
													"src": "973:692:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:83:7",
																"nodeType": "YulBlock",
																"src": "1020:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1022:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1022:77:7"
																			},
																			"nativeSrc": "1022:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:79:7"
																		},
																		"nativeSrc": "1022:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1003:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1003:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "990:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "990:3:7"
																		},
																		"nativeSrc": "990:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "990:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1015:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1015:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "986:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "986:3:7"
																},
																"nativeSrc": "986:33:7",
																"nodeType": "YulFunctionCall",
																"src": "986:33:7"
															},
															"nativeSrc": "983:120:7",
															"nodeType": "YulIf",
															"src": "983:120:7"
														},
														{
															"nativeSrc": "1113:128:7",
															"nodeType": "YulBlock",
															"src": "1113:128:7",
															"statements": [
																{
																	"nativeSrc": "1128:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1128:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1142:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1142:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1132:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1132:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1157:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1157:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1203:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1203:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1214:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1214:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1199:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1199:3:7"
																				},
																				"nativeSrc": "1199:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1199:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1223:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1223:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1167:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1167:31:7"
																		},
																		"nativeSrc": "1167:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1167:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1157:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1157:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1251:129:7",
															"nodeType": "YulBlock",
															"src": "1251:129:7",
															"statements": [
																{
																	"nativeSrc": "1266:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1266:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1280:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1270:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1270:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1296:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1296:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1342:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1342:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1353:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1353:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1338:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1338:3:7"
																				},
																				"nativeSrc": "1338:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1338:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1362:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1306:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1306:31:7"
																		},
																		"nativeSrc": "1306:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1306:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1296:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1296:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1390:129:7",
															"nodeType": "YulBlock",
															"src": "1390:129:7",
															"statements": [
																{
																	"nativeSrc": "1405:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1405:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1419:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1419:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1409:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1409:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1435:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1435:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1481:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1481:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1492:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1492:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1477:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1477:3:7"
																				},
																				"nativeSrc": "1477:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1477:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1501:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1445:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1445:31:7"
																		},
																		"nativeSrc": "1445:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1435:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1435:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1529:129:7",
															"nodeType": "YulBlock",
															"src": "1529:129:7",
															"statements": [
																{
																	"nativeSrc": "1544:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1544:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1558:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1548:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1548:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1574:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1574:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1620:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1620:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1631:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1631:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1616:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1616:3:7"
																				},
																				"nativeSrc": "1616:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1616:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1640:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1584:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1584:31:7"
																		},
																		"nativeSrc": "1584:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1584:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1574:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1574:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:820:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "919:9:7",
														"nodeType": "YulTypedName",
														"src": "919:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "930:7:7",
														"nodeType": "YulTypedName",
														"src": "930:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "942:6:7",
														"nodeType": "YulTypedName",
														"src": "942:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "950:6:7",
														"nodeType": "YulTypedName",
														"src": "950:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "958:6:7",
														"nodeType": "YulTypedName",
														"src": "958:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "966:6:7",
														"nodeType": "YulTypedName",
														"src": "966:6:7",
														"type": ""
													}
												],
												"src": "845:820:7"
											},
											{
												"body": {
													"nativeSrc": "1736:53:7",
													"nodeType": "YulBlock",
													"src": "1736:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1753:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1753:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1776:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1776:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1758:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1758:17:7"
																		},
																		"nativeSrc": "1758:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1758:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1746:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:7"
																},
																"nativeSrc": "1746:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1746:37:7"
															},
															"nativeSrc": "1746:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1746:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1671:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1724:5:7",
														"nodeType": "YulTypedName",
														"src": "1724:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1731:3:7",
														"nodeType": "YulTypedName",
														"src": "1731:3:7",
														"type": ""
													}
												],
												"src": "1671:118:7"
											},
											{
												"body": {
													"nativeSrc": "1893:124:7",
													"nodeType": "YulBlock",
													"src": "1893:124:7",
													"statements": [
														{
															"nativeSrc": "1903:26:7",
															"nodeType": "YulAssignment",
															"src": "1903:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1915:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1915:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1926:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1926:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1911:3:7"
																},
																"nativeSrc": "1911:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1911:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1903:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1903:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1983:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1983:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1996:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1996:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2007:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2007:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1992:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1992:3:7"
																		},
																		"nativeSrc": "1992:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1939:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1939:43:7"
																},
																"nativeSrc": "1939:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1939:71:7"
															},
															"nativeSrc": "1939:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1939:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1795:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1865:9:7",
														"nodeType": "YulTypedName",
														"src": "1865:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1877:6:7",
														"nodeType": "YulTypedName",
														"src": "1877:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1888:4:7",
														"nodeType": "YulTypedName",
														"src": "1888:4:7",
														"type": ""
													}
												],
												"src": "1795:222:7"
											},
											{
												"body": {
													"nativeSrc": "2119:73:7",
													"nodeType": "YulBlock",
													"src": "2119:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2136:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2136:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2141:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2141:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2129:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2129:6:7"
																},
																"nativeSrc": "2129:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2129:19:7"
															},
															"nativeSrc": "2129:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "2129:19:7"
														},
														{
															"nativeSrc": "2157:29:7",
															"nodeType": "YulAssignment",
															"src": "2157:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2176:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2176:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2181:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2181:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2172:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:7"
																},
																"nativeSrc": "2172:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2172:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2157:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "2157:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2023:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2091:3:7",
														"nodeType": "YulTypedName",
														"src": "2091:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2096:6:7",
														"nodeType": "YulTypedName",
														"src": "2096:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2107:11:7",
														"nodeType": "YulTypedName",
														"src": "2107:11:7",
														"type": ""
													}
												],
												"src": "2023:169:7"
											},
											{
												"body": {
													"nativeSrc": "2304:70:7",
													"nodeType": "YulBlock",
													"src": "2304:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2326:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2334:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2334:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2322:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:7"
																		},
																		"nativeSrc": "2322:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420737461626c65636f696e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "2338:28:7",
																		"nodeType": "YulLiteral",
																		"src": "2338:28:7",
																		"type": "",
																		"value": "Invalid stablecoin address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2315:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:7"
																},
																"nativeSrc": "2315:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2315:52:7"
															},
															"nativeSrc": "2315:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2315:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015",
												"nativeSrc": "2198:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2296:6:7",
														"nodeType": "YulTypedName",
														"src": "2296:6:7",
														"type": ""
													}
												],
												"src": "2198:176:7"
											},
											{
												"body": {
													"nativeSrc": "2526:220:7",
													"nodeType": "YulBlock",
													"src": "2526:220:7",
													"statements": [
														{
															"nativeSrc": "2536:74:7",
															"nodeType": "YulAssignment",
															"src": "2536:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2602:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2602:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2607:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2607:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2543:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2543:58:7"
																},
																"nativeSrc": "2543:67:7",
																"nodeType": "YulFunctionCall",
																"src": "2543:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2536:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2536:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2708:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2708:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015",
																	"nativeSrc": "2619:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "2619:88:7"
																},
																"nativeSrc": "2619:93:7",
																"nodeType": "YulFunctionCall",
																"src": "2619:93:7"
															},
															"nativeSrc": "2619:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "2619:93:7"
														},
														{
															"nativeSrc": "2721:19:7",
															"nodeType": "YulAssignment",
															"src": "2721:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2732:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2732:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2737:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2737:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2728:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2728:3:7"
																},
																"nativeSrc": "2728:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2728:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2721:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2721:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2380:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2514:3:7",
														"nodeType": "YulTypedName",
														"src": "2514:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2522:3:7",
														"nodeType": "YulTypedName",
														"src": "2522:3:7",
														"type": ""
													}
												],
												"src": "2380:366:7"
											},
											{
												"body": {
													"nativeSrc": "2923:248:7",
													"nodeType": "YulBlock",
													"src": "2923:248:7",
													"statements": [
														{
															"nativeSrc": "2933:26:7",
															"nodeType": "YulAssignment",
															"src": "2933:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2945:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2945:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2956:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2956:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2941:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2941:3:7"
																},
																"nativeSrc": "2941:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2941:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2933:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2933:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2980:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2980:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2991:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2991:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2976:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2976:3:7"
																		},
																		"nativeSrc": "2976:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2976:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2999:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2999:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3005:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:7"
																		},
																		"nativeSrc": "2995:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2995:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2969:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2969:6:7"
																},
																"nativeSrc": "2969:47:7",
																"nodeType": "YulFunctionCall",
																"src": "2969:47:7"
															},
															"nativeSrc": "2969:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "2969:47:7"
														},
														{
															"nativeSrc": "3025:139:7",
															"nodeType": "YulAssignment",
															"src": "3025:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3159:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3159:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3033:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "3033:124:7"
																},
																"nativeSrc": "3033:131:7",
																"nodeType": "YulFunctionCall",
																"src": "3033:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3025:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3025:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2752:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2903:9:7",
														"nodeType": "YulTypedName",
														"src": "2903:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2918:4:7",
														"nodeType": "YulTypedName",
														"src": "2918:4:7",
														"type": ""
													}
												],
												"src": "2752:419:7"
											},
											{
												"body": {
													"nativeSrc": "3283:64:7",
													"nodeType": "YulBlock",
													"src": "3283:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3305:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3305:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3313:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3313:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3301:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:7"
																		},
																		"nativeSrc": "3301:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420634254432061646472657373",
																		"kind": "string",
																		"nativeSrc": "3317:22:7",
																		"nodeType": "YulLiteral",
																		"src": "3317:22:7",
																		"type": "",
																		"value": "Invalid cBTC address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3294:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3294:6:7"
																},
																"nativeSrc": "3294:46:7",
																"nodeType": "YulFunctionCall",
																"src": "3294:46:7"
															},
															"nativeSrc": "3294:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "3294:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e",
												"nativeSrc": "3177:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3275:6:7",
														"nodeType": "YulTypedName",
														"src": "3275:6:7",
														"type": ""
													}
												],
												"src": "3177:170:7"
											},
											{
												"body": {
													"nativeSrc": "3499:220:7",
													"nodeType": "YulBlock",
													"src": "3499:220:7",
													"statements": [
														{
															"nativeSrc": "3509:74:7",
															"nodeType": "YulAssignment",
															"src": "3509:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3575:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3575:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3580:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3516:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3516:58:7"
																},
																"nativeSrc": "3516:67:7",
																"nodeType": "YulFunctionCall",
																"src": "3516:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3509:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3681:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3681:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e",
																	"nativeSrc": "3592:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "3592:88:7"
																},
																"nativeSrc": "3592:93:7",
																"nodeType": "YulFunctionCall",
																"src": "3592:93:7"
															},
															"nativeSrc": "3592:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "3592:93:7"
														},
														{
															"nativeSrc": "3694:19:7",
															"nodeType": "YulAssignment",
															"src": "3694:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3705:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3705:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3710:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3710:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3701:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3701:3:7"
																},
																"nativeSrc": "3701:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3701:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3694:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3353:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3487:3:7",
														"nodeType": "YulTypedName",
														"src": "3487:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3495:3:7",
														"nodeType": "YulTypedName",
														"src": "3495:3:7",
														"type": ""
													}
												],
												"src": "3353:366:7"
											},
											{
												"body": {
													"nativeSrc": "3896:248:7",
													"nodeType": "YulBlock",
													"src": "3896:248:7",
													"statements": [
														{
															"nativeSrc": "3906:26:7",
															"nodeType": "YulAssignment",
															"src": "3906:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:7"
																},
																"nativeSrc": "3914:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3953:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3953:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3964:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3964:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3949:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3949:3:7"
																		},
																		"nativeSrc": "3949:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3949:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3972:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3972:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3978:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3978:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3968:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3968:3:7"
																		},
																		"nativeSrc": "3968:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3968:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3942:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:7"
																},
																"nativeSrc": "3942:47:7",
																"nodeType": "YulFunctionCall",
																"src": "3942:47:7"
															},
															"nativeSrc": "3942:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "3942:47:7"
														},
														{
															"nativeSrc": "3998:139:7",
															"nodeType": "YulAssignment",
															"src": "3998:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4132:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4132:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4006:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "4006:124:7"
																},
																"nativeSrc": "4006:131:7",
																"nodeType": "YulFunctionCall",
																"src": "4006:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3998:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3998:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3725:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3876:9:7",
														"nodeType": "YulTypedName",
														"src": "3876:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:7",
														"nodeType": "YulTypedName",
														"src": "3891:4:7",
														"type": ""
													}
												],
												"src": "3725:419:7"
											},
											{
												"body": {
													"nativeSrc": "4256:70:7",
													"nodeType": "YulBlock",
													"src": "4256:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4278:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4278:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4286:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4286:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4274:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4274:3:7"
																		},
																		"nativeSrc": "4274:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4274:14:7"
																	},
																	{
																		"hexValue": "496e76616c69642061676772656761746f722061646472657373",
																		"kind": "string",
																		"nativeSrc": "4290:28:7",
																		"nodeType": "YulLiteral",
																		"src": "4290:28:7",
																		"type": "",
																		"value": "Invalid aggregator address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4267:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:7"
																},
																"nativeSrc": "4267:52:7",
																"nodeType": "YulFunctionCall",
																"src": "4267:52:7"
															},
															"nativeSrc": "4267:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "4267:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
												"nativeSrc": "4150:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4248:6:7",
														"nodeType": "YulTypedName",
														"src": "4248:6:7",
														"type": ""
													}
												],
												"src": "4150:176:7"
											},
											{
												"body": {
													"nativeSrc": "4478:220:7",
													"nodeType": "YulBlock",
													"src": "4478:220:7",
													"statements": [
														{
															"nativeSrc": "4488:74:7",
															"nodeType": "YulAssignment",
															"src": "4488:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4554:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4554:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4559:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4559:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4495:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "4495:58:7"
																},
																"nativeSrc": "4495:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4495:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4488:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4488:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4660:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4660:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
																	"nativeSrc": "4571:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "4571:88:7"
																},
																"nativeSrc": "4571:93:7",
																"nodeType": "YulFunctionCall",
																"src": "4571:93:7"
															},
															"nativeSrc": "4571:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "4571:93:7"
														},
														{
															"nativeSrc": "4673:19:7",
															"nodeType": "YulAssignment",
															"src": "4673:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4684:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4684:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4689:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4689:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4680:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4680:3:7"
																},
																"nativeSrc": "4680:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4680:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4673:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4673:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4332:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4466:3:7",
														"nodeType": "YulTypedName",
														"src": "4466:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4474:3:7",
														"nodeType": "YulTypedName",
														"src": "4474:3:7",
														"type": ""
													}
												],
												"src": "4332:366:7"
											},
											{
												"body": {
													"nativeSrc": "4875:248:7",
													"nodeType": "YulBlock",
													"src": "4875:248:7",
													"statements": [
														{
															"nativeSrc": "4885:26:7",
															"nodeType": "YulAssignment",
															"src": "4885:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4897:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4897:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4908:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4908:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4893:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:7"
																},
																"nativeSrc": "4893:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4893:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4885:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4885:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4932:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4932:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4943:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4943:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4928:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4928:3:7"
																		},
																		"nativeSrc": "4928:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4928:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4951:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4951:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4957:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4957:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4947:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4947:3:7"
																		},
																		"nativeSrc": "4947:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4947:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4921:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:7"
																},
																"nativeSrc": "4921:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4921:47:7"
															},
															"nativeSrc": "4921:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "4921:47:7"
														},
														{
															"nativeSrc": "4977:139:7",
															"nodeType": "YulAssignment",
															"src": "4977:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5111:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4985:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "4985:124:7"
																},
																"nativeSrc": "4985:131:7",
																"nodeType": "YulFunctionCall",
																"src": "4985:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4977:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4977:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4704:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4855:9:7",
														"nodeType": "YulTypedName",
														"src": "4855:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4870:4:7",
														"nodeType": "YulTypedName",
														"src": "4870:4:7",
														"type": ""
													}
												],
												"src": "4704:419:7"
											},
											{
												"body": {
													"nativeSrc": "5235:63:7",
													"nodeType": "YulBlock",
													"src": "5235:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5257:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5257:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5265:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5265:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5253:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5253:3:7"
																		},
																		"nativeSrc": "5253:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5253:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964204445582061646472657373",
																		"kind": "string",
																		"nativeSrc": "5269:21:7",
																		"nodeType": "YulLiteral",
																		"src": "5269:21:7",
																		"type": "",
																		"value": "Invalid DEX address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5246:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5246:6:7"
																},
																"nativeSrc": "5246:45:7",
																"nodeType": "YulFunctionCall",
																"src": "5246:45:7"
															},
															"nativeSrc": "5246:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "5246:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde",
												"nativeSrc": "5129:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5227:6:7",
														"nodeType": "YulTypedName",
														"src": "5227:6:7",
														"type": ""
													}
												],
												"src": "5129:169:7"
											},
											{
												"body": {
													"nativeSrc": "5450:220:7",
													"nodeType": "YulBlock",
													"src": "5450:220:7",
													"statements": [
														{
															"nativeSrc": "5460:74:7",
															"nodeType": "YulAssignment",
															"src": "5460:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5526:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5526:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5531:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5531:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5467:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "5467:58:7"
																},
																"nativeSrc": "5467:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5467:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5460:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5460:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5632:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5632:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde",
																	"nativeSrc": "5543:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "5543:88:7"
																},
																"nativeSrc": "5543:93:7",
																"nodeType": "YulFunctionCall",
																"src": "5543:93:7"
															},
															"nativeSrc": "5543:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "5543:93:7"
														},
														{
															"nativeSrc": "5645:19:7",
															"nodeType": "YulAssignment",
															"src": "5645:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5656:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5656:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5661:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5661:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5652:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5652:3:7"
																},
																"nativeSrc": "5652:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5652:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5645:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5645:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5304:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5438:3:7",
														"nodeType": "YulTypedName",
														"src": "5438:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5446:3:7",
														"nodeType": "YulTypedName",
														"src": "5446:3:7",
														"type": ""
													}
												],
												"src": "5304:366:7"
											},
											{
												"body": {
													"nativeSrc": "5847:248:7",
													"nodeType": "YulBlock",
													"src": "5847:248:7",
													"statements": [
														{
															"nativeSrc": "5857:26:7",
															"nodeType": "YulAssignment",
															"src": "5857:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5869:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5869:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5880:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5880:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:7"
																},
																"nativeSrc": "5865:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5865:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5857:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5857:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5904:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5904:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5915:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5915:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5900:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:7"
																		},
																		"nativeSrc": "5900:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5900:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5923:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5923:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5929:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5929:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5919:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5919:3:7"
																		},
																		"nativeSrc": "5919:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5919:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5893:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:7"
																},
																"nativeSrc": "5893:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5893:47:7"
															},
															"nativeSrc": "5893:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "5893:47:7"
														},
														{
															"nativeSrc": "5949:139:7",
															"nodeType": "YulAssignment",
															"src": "5949:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6083:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6083:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5957:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "5957:124:7"
																},
																"nativeSrc": "5957:131:7",
																"nodeType": "YulFunctionCall",
																"src": "5957:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5949:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5949:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5676:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5827:9:7",
														"nodeType": "YulTypedName",
														"src": "5827:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5842:4:7",
														"nodeType": "YulTypedName",
														"src": "5842:4:7",
														"type": ""
													}
												],
												"src": "5676:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stablecoin address\")\n\n    }\n\n    function abi_encode_t_stringliteral_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid cBTC address\")\n\n    }\n\n    function abi_encode_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid aggregator address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid DEX address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x23C2 CODESIZE SUB DUP1 PUSH2 0x23C2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x373 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117 SWAP1 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185 SWAP1 PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0x6CE JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x461 DUP3 PUSH2 0x438 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x457 JUMP JUMPDEST DUP2 EQ PUSH2 0x47B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x48C DUP2 PUSH2 0x468 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4AA JUMPI PUSH2 0x4A9 PUSH2 0x434 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B7 DUP8 DUP3 DUP9 ADD PUSH2 0x47E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4C8 DUP8 DUP3 DUP9 ADD PUSH2 0x47E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4D9 DUP8 DUP3 DUP9 ADD PUSH2 0x47E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4EA DUP8 DUP3 DUP9 ADD PUSH2 0x47E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0x457 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x518 PUSH0 DUP4 ADD DUP5 PUSH2 0x4F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420737461626C65636F696E2061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x562 PUSH1 0x1A DUP4 PUSH2 0x51E JUMP JUMPDEST SWAP2 POP PUSH2 0x56D DUP3 PUSH2 0x52E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x58F DUP2 PUSH2 0x556 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420634254432061646472657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5CA PUSH1 0x14 DUP4 PUSH2 0x51E JUMP JUMPDEST SWAP2 POP PUSH2 0x5D5 DUP3 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5F7 DUP2 PUSH2 0x5BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642061676772656761746F722061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x632 PUSH1 0x1A DUP4 PUSH2 0x51E JUMP JUMPDEST SWAP2 POP PUSH2 0x63D DUP3 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x65F DUP2 PUSH2 0x626 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420444558206164647265737300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x69A PUSH1 0x13 DUP4 PUSH2 0x51E JUMP JUMPDEST SWAP2 POP PUSH2 0x6A5 DUP3 PUSH2 0x666 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6C7 DUP2 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE7 DUP1 PUSH2 0x6DB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAD487F23 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD487F23 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xE5A5EF4F EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xFF0F7B74 EQ PUSH2 0x279 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x207 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x245A7BFC GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x245A7BFC EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x4793F1D9 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x5143FE12 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x692058C2 EQ PUSH2 0x1C1 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0xAE8C4DC EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x194A7B8E EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x20003022 EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP3 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH2 0xA5E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH2 0xABD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0xF62 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x407 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x48A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E4 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x3B5907C9AAEAEEF015F385111975B015225E1001BF659370E62C15E13373BC6D DUP5 PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xADFE34F7 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B4 SWAP3 SWAP2 SWAP1 PUSH2 0x1945 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3A96D086 DUP3 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98F SWAP3 SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH1 0x2 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x3B5907C9AAEAEEF015F385111975B015225E1001BF659370E62C15E13373BC6D DUP7 PUSH1 0x40 MLOAD PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA66 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0xA6F PUSH0 PUSH2 0x117A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC24 SWAP3 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC40 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC64 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9A SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH32 0x195F245622ABEB539754A2A6A6DEB95E6B222CBF894D10CBFFBEBAC70340E587 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCD5 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xCEA PUSH2 0x10F3 JUMP JUMPDEST PUSH0 DUP1 SHL DUP3 SUB PUSH2 0xD2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD25 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD93 SWAP1 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH32 0x1108B573ACB7954C6BE9806CC3A17ED5864F50FA96AD4CBC9CD82FA63D42B9F7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xED2 SWAP2 SWAP1 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xEE6 PUSH2 0x10F3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF56 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5F DUP2 PUSH2 0x117A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF6A PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC1 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP1 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x7DAC21E92520EAEDC798F2261DA9EECEBDA327DB2D8DFF77C1AAB26798DC25E8 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10E6 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x10FB PUSH2 0x123B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1119 PUSH2 0xA71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1178 JUMPI PUSH2 0x113C PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116F SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1284 PUSH2 0x127F PUSH2 0x127A DUP5 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1295 DUP3 PUSH2 0x126A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12A6 DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B6 DUP2 PUSH2 0x129C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12CF PUSH0 DUP4 ADD DUP5 PUSH2 0x12AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12EB DUP2 PUSH2 0x12D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1306 DUP2 PUSH2 0x12E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1321 JUMPI PUSH2 0x1320 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x132E DUP5 DUP3 DUP6 ADD PUSH2 0x12F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1349 DUP2 PUSH2 0x1337 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1362 PUSH0 DUP4 ADD DUP5 PUSH2 0x1340 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1372 DUP3 PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1382 DUP2 PUSH2 0x1368 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x1388 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13B5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x13C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13D3 DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E3 DUP2 PUSH2 0x13C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13FC PUSH0 DUP4 ADD DUP5 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140B DUP2 PUSH2 0x1337 JUMP JUMPDEST DUP2 EQ PUSH2 0x1415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1426 DUP2 PUSH2 0x1402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1442 JUMPI PUSH2 0x1441 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144F DUP6 DUP3 DUP7 ADD PUSH2 0x12F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1460 DUP6 DUP3 DUP7 ADD PUSH2 0x1418 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1474 DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0x146A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x149D PUSH0 DUP4 ADD DUP5 PUSH2 0x147B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14AD DUP3 PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BD DUP2 PUSH2 0x14A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14E6 DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F6 DUP2 PUSH2 0x14DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x150F PUSH0 DUP4 ADD DUP5 PUSH2 0x14ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x151E DUP2 PUSH2 0x1368 JUMP JUMPDEST DUP2 EQ PUSH2 0x1528 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1539 DUP2 PUSH2 0x1515 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1555 JUMPI PUSH2 0x1554 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1562 DUP6 DUP3 DUP7 ADD PUSH2 0x12F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1573 DUP6 DUP3 DUP7 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1586 DUP2 PUSH2 0x14A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1590 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15A1 DUP2 PUSH2 0x157D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BC JUMPI PUSH2 0x15BB PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15C9 DUP5 DUP3 DUP6 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DB DUP2 PUSH2 0x1388 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F6 DUP2 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1613 JUMPI PUSH2 0x1612 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1620 DUP7 DUP3 DUP8 ADD PUSH2 0x12F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1631 DUP7 DUP3 DUP8 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1642 DUP7 DUP3 DUP8 ADD PUSH2 0x15E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D65726368616E74206E6F742061637469766500000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1690 PUSH1 0x13 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x169B DUP3 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16BD DUP2 PUSH2 0x1684 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16D7 PUSH0 DUP4 ADD DUP7 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x16E4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x16F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1340 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1707 DUP2 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1722 JUMPI PUSH2 0x1721 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172F DUP5 DUP3 DUP6 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x176C PUSH1 0xF DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1777 DUP3 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1799 DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17D7 DUP3 PUSH2 0x1337 JUMP JUMPDEST SWAP2 POP PUSH2 0x17E2 DUP4 PUSH2 0x1337 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x180E DUP2 PUSH2 0x1402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1829 JUMPI PUSH2 0x1828 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1836 DUP5 DUP3 DUP6 ADD PUSH2 0x1800 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1873 PUSH1 0xD DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x187E DUP3 PUSH2 0x183F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A0 DUP2 PUSH2 0x1867 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18B1 DUP3 PUSH2 0x1337 JUMP JUMPDEST SWAP2 POP PUSH2 0x18BC DUP4 PUSH2 0x1337 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18CA DUP2 PUSH2 0x1337 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18E1 JUMPI PUSH2 0x18E0 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x191F DUP3 PUSH2 0x1337 JUMP JUMPDEST SWAP2 POP PUSH2 0x192A DUP4 PUSH2 0x1337 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x193A JUMPI PUSH2 0x1939 PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1958 PUSH0 DUP4 ADD DUP6 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x1965 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1340 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6342544320617070726F7665206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19A0 PUSH1 0x13 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x19AB DUP3 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19CD DUP2 PUSH2 0x1994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19E7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x19F4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1340 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F2062616C616E636520746F20776974686472617700000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2F PUSH1 0x16 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3A DUP3 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A5C DUP2 PUSH2 0x1A23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6D DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7D DUP2 PUSH2 0x1A63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A96 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x1AA3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1340 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1ABD PUSH0 DUP4 ADD DUP6 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x1ACA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A74 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D65726368616E7449640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B05 PUSH1 0x12 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B10 DUP3 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B32 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207061796F7574206164647265737300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6D PUSH1 0x16 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B78 DUP3 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B9A DUP2 PUSH2 0x1B61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D65726368616E7420616C726561647920726567697374657265640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD5 PUSH1 0x1B DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE0 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C02 DUP2 PUSH2 0x1BC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1C PUSH0 DUP4 ADD DUP5 PUSH2 0x1A74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D65726368616E74206E6F742072656769737465726564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C56 PUSH1 0x17 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C61 DUP3 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C83 DUP2 PUSH2 0x1C4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C9D PUSH0 DUP4 ADD DUP6 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x1CAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xF806CF04CA5FF70C12DB778CACC67538042D5114ACCEE73C828B0C7FA873 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "600:6196:6:-:0;;;1663:563;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;635:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1825:1:6;1802:25;;:11;:25;;;1794:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1893:1;1876:19;;:5;:19;;;1868:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1961:1;1938:25;;:11;:25;;;1930:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2028:1;2012:18;;:4;:18;;;2004:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2090:11;2065:10;;:37;;;;;;;;;;;;;;;;;;2125:5;2112:4;;:19;;;;;;;;;;;;;;;;;;2172:11;2141:10;;:43;;;;;;;;;;;;;;;;;;2214:4;2194:3;;:25;;;;;;;;;;;;;;;;;;1663:563;;;;600:6196;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:820::-;942:6;950;958;966;1015:3;1003:9;994:7;990:23;986:33;983:120;;;1022:79;;:::i;:::-;983:120;1142:1;1167:64;1223:7;1214:6;1203:9;1199:22;1167:64;:::i;:::-;1157:74;;1113:128;1280:2;1306:64;1362:7;1353:6;1342:9;1338:22;1306:64;:::i;:::-;1296:74;;1251:129;1419:2;1445:64;1501:7;1492:6;1481:9;1477:22;1445:64;:::i;:::-;1435:74;;1390:129;1558:2;1584:64;1640:7;1631:6;1620:9;1616:22;1584:64;:::i;:::-;1574:74;;1529:129;845:820;;;;;;;:::o;1671:118::-;1758:24;1776:5;1758:24;:::i;:::-;1753:3;1746:37;1671:118;;:::o;1795:222::-;1888:4;1926:2;1915:9;1911:18;1903:26;;1939:71;2007:1;1996:9;1992:17;1983:6;1939:71;:::i;:::-;1795:222;;;;:::o;2023:169::-;2107:11;2141:6;2136:3;2129:19;2181:4;2176:3;2172:14;2157:29;;2023:169;;;;:::o;2198:176::-;2338:28;2334:1;2326:6;2322:14;2315:52;2198:176;:::o;2380:366::-;2522:3;2543:67;2607:2;2602:3;2543:67;:::i;:::-;2536:74;;2619:93;2708:3;2619:93;:::i;:::-;2737:2;2732:3;2728:12;2721:19;;2380:366;;;:::o;2752:419::-;2918:4;2956:2;2945:9;2941:18;2933:26;;3005:9;2999:4;2995:20;2991:1;2980:9;2976:17;2969:47;3033:131;3159:4;3033:131;:::i;:::-;3025:139;;2752:419;;;:::o;3177:170::-;3317:22;3313:1;3305:6;3301:14;3294:46;3177:170;:::o;3353:366::-;3495:3;3516:67;3580:2;3575:3;3516:67;:::i;:::-;3509:74;;3592:93;3681:3;3592:93;:::i;:::-;3710:2;3705:3;3701:12;3694:19;;3353:366;;;:::o;3725:419::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3978:9;3972:4;3968:20;3964:1;3953:9;3949:17;3942:47;4006:131;4132:4;4006:131;:::i;:::-;3998:139;;3725:419;;;:::o;4150:176::-;4290:28;4286:1;4278:6;4274:14;4267:52;4150:176;:::o;4332:366::-;4474:3;4495:67;4559:2;4554:3;4495:67;:::i;:::-;4488:74;;4571:93;4660:3;4571:93;:::i;:::-;4689:2;4684:3;4680:12;4673:19;;4332:366;;;:::o;4704:419::-;4870:4;4908:2;4897:9;4893:18;4885:26;;4957:9;4951:4;4947:20;4943:1;4932:9;4928:17;4921:47;4985:131;5111:4;4985:131;:::i;:::-;4977:139;;4704:419;;;:::o;5129:169::-;5269:21;5265:1;5257:6;5253:14;5246:45;5129:169;:::o;5304:366::-;5446:3;5467:67;5531:2;5526:3;5467:67;:::i;:::-;5460:74;;5543:93;5632:3;5543:93;:::i;:::-;5661:2;5656:3;5652:12;5645:19;;5304:366;;;:::o;5676:419::-;5842:4;5880:2;5869:9;5865:18;5857:26;;5929:9;5923:4;5919:20;5915:1;5904:9;5900:17;5893:47;5957:131;6083:4;5957:131;:::i;:::-;5949:139;;5676:419;;;:::o;600:6196:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 4339,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 4667,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4474,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@aggregator_986": {
									"entryPoint": 794,
									"id": 986,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cBTC_983": {
									"entryPoint": 661,
									"id": 983,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dex_989": {
									"entryPoint": 2617,
									"id": 989,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@merchantBalances_977": {
									"entryPoint": 698,
									"id": 977,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@merchants_973": {
									"entryPoint": 719,
									"id": 973,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2673,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payMerchantInCBTC_1399": {
									"entryPoint": 1384,
									"id": 1399,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@payMerchant_1247": {
									"entryPoint": 831,
									"id": 1247,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@registerMerchant_1147": {
									"entryPoint": 3298,
									"id": 1147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2654,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stableCoin_980": {
									"entryPoint": 2712,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3806,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMerchant_1198": {
									"entryPoint": 3938,
									"id": 1198,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawMerchantFunds_1305": {
									"entryPoint": 2749,
									"id": 1305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address_payable": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_address_payablet_bool": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32t_uint256": {
									"entryPoint": 5164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IAggregatorOracle_$948_to_t_address_fromStack": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ICBTC_$959_to_t_address_fromStack": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IDexInterface_$956_to_t_address_fromStack": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IStableCoin_$940_to_t_address_fromStack": {
									"entryPoint": 5357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed": {
									"entryPoint": 7177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_bool__to_t_address_payable_t_bool__fromStack_reversed": {
									"entryPoint": 5026,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_bool__to_t_address_t_bool__fromStack_reversed": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6787,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5828,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6469,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IAggregatorOracle_$948__to_t_address__fromStack_reversed": {
									"entryPoint": 5097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICBTC_$959__to_t_address__fromStack_reversed": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDexInterface_$956__to_t_address__fromStack_reversed": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IStableCoin_$940__to_t_address__fromStack_reversed": {
									"entryPoint": 5372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 6755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IAggregatorOracle_$948_to_t_address": {
									"entryPoint": 5065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ICBTC_$959_to_t_address": {
									"entryPoint": 4764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IDexInterface_$956_to_t_address": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IStableCoin_$940_to_t_address": {
									"entryPoint": 5340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375": {
									"entryPoint": 6508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 5397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22469:7",
										"nodeType": "YulBlock",
										"src": "0:22469:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:7",
													"nodeType": "YulBlock",
													"src": "52:81:7",
													"statements": [
														{
															"nativeSrc": "62:65:7",
															"nodeType": "YulAssignment",
															"src": "62:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:7",
																		"nodeType": "YulLiteral",
																		"src": "84:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:7"
																},
																"nativeSrc": "73:54:7",
																"nodeType": "YulFunctionCall",
																"src": "73:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:126:7"
											},
											{
												"body": {
													"nativeSrc": "171:28:7",
													"nodeType": "YulBlock",
													"src": "171:28:7",
													"statements": [
														{
															"nativeSrc": "181:12:7",
															"nodeType": "YulAssignment",
															"src": "181:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:7",
																"nodeType": "YulIdentifier",
																"src": "188:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:7",
														"nodeType": "YulTypedName",
														"src": "157:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:7",
														"nodeType": "YulTypedName",
														"src": "167:3:7",
														"type": ""
													}
												],
												"src": "139:60:7"
											},
											{
												"body": {
													"nativeSrc": "265:82:7",
													"nodeType": "YulBlock",
													"src": "265:82:7",
													"statements": [
														{
															"nativeSrc": "275:66:7",
															"nodeType": "YulAssignment",
															"src": "275:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:7"
																				},
																				"nativeSrc": "315:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:7"
																		},
																		"nativeSrc": "306:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:7"
																},
																"nativeSrc": "288:53:7",
																"nodeType": "YulFunctionCall",
																"src": "288:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:7",
														"nodeType": "YulTypedName",
														"src": "245:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:7",
														"nodeType": "YulTypedName",
														"src": "255:9:7",
														"type": ""
													}
												],
												"src": "205:142:7"
											},
											{
												"body": {
													"nativeSrc": "413:66:7",
													"nodeType": "YulBlock",
													"src": "413:66:7",
													"statements": [
														{
															"nativeSrc": "423:50:7",
															"nodeType": "YulAssignment",
															"src": "423:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:7"
																},
																"nativeSrc": "436:37:7",
																"nodeType": "YulFunctionCall",
																"src": "436:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:7",
														"nodeType": "YulTypedName",
														"src": "393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:7",
														"nodeType": "YulTypedName",
														"src": "403:9:7",
														"type": ""
													}
												],
												"src": "353:126:7"
											},
											{
												"body": {
													"nativeSrc": "558:66:7",
													"nodeType": "YulBlock",
													"src": "558:66:7",
													"statements": [
														{
															"nativeSrc": "568:50:7",
															"nodeType": "YulAssignment",
															"src": "568:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "612:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "612:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "581:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "581:30:7"
																},
																"nativeSrc": "581:37:7",
																"nodeType": "YulFunctionCall",
																"src": "581:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "568:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "568:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ICBTC_$959_to_t_address",
												"nativeSrc": "485:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "538:5:7",
														"nodeType": "YulTypedName",
														"src": "538:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "548:9:7",
														"nodeType": "YulTypedName",
														"src": "548:9:7",
														"type": ""
													}
												],
												"src": "485:139:7"
											},
											{
												"body": {
													"nativeSrc": "708:79:7",
													"nodeType": "YulBlock",
													"src": "708:79:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "725:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "725:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ICBTC_$959_to_t_address",
																			"nativeSrc": "730:43:7",
																			"nodeType": "YulIdentifier",
																			"src": "730:43:7"
																		},
																		"nativeSrc": "730:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "730:50:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "718:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:7"
																},
																"nativeSrc": "718:63:7",
																"nodeType": "YulFunctionCall",
																"src": "718:63:7"
															},
															"nativeSrc": "718:63:7",
															"nodeType": "YulExpressionStatement",
															"src": "718:63:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_ICBTC_$959_to_t_address_fromStack",
												"nativeSrc": "630:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "696:5:7",
														"nodeType": "YulTypedName",
														"src": "696:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "703:3:7",
														"nodeType": "YulTypedName",
														"src": "703:3:7",
														"type": ""
													}
												],
												"src": "630:157:7"
											},
											{
												"body": {
													"nativeSrc": "904:137:7",
													"nodeType": "YulBlock",
													"src": "904:137:7",
													"statements": [
														{
															"nativeSrc": "914:26:7",
															"nodeType": "YulAssignment",
															"src": "914:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "926:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "926:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "937:2:7",
																		"nodeType": "YulLiteral",
																		"src": "937:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "922:3:7"
																},
																"nativeSrc": "922:18:7",
																"nodeType": "YulFunctionCall",
																"src": "922:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "914:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "914:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1007:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1007:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1020:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1020:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1031:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1031:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1016:3:7"
																		},
																		"nativeSrc": "1016:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ICBTC_$959_to_t_address_fromStack",
																	"nativeSrc": "950:56:7",
																	"nodeType": "YulIdentifier",
																	"src": "950:56:7"
																},
																"nativeSrc": "950:84:7",
																"nodeType": "YulFunctionCall",
																"src": "950:84:7"
															},
															"nativeSrc": "950:84:7",
															"nodeType": "YulExpressionStatement",
															"src": "950:84:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICBTC_$959__to_t_address__fromStack_reversed",
												"nativeSrc": "793:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "876:9:7",
														"nodeType": "YulTypedName",
														"src": "876:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "888:6:7",
														"nodeType": "YulTypedName",
														"src": "888:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "899:4:7",
														"nodeType": "YulTypedName",
														"src": "899:4:7",
														"type": ""
													}
												],
												"src": "793:248:7"
											},
											{
												"body": {
													"nativeSrc": "1087:35:7",
													"nodeType": "YulBlock",
													"src": "1087:35:7",
													"statements": [
														{
															"nativeSrc": "1097:19:7",
															"nodeType": "YulAssignment",
															"src": "1097:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1113:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1113:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1107:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:7"
																},
																"nativeSrc": "1107:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1107:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1097:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1097:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1047:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1080:6:7",
														"nodeType": "YulTypedName",
														"src": "1080:6:7",
														"type": ""
													}
												],
												"src": "1047:75:7"
											},
											{
												"body": {
													"nativeSrc": "1217:28:7",
													"nodeType": "YulBlock",
													"src": "1217:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1234:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1234:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1237:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1237:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1227:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:7"
																},
																"nativeSrc": "1227:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1227:12:7"
															},
															"nativeSrc": "1227:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1227:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1128:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1128:117:7"
											},
											{
												"body": {
													"nativeSrc": "1340:28:7",
													"nodeType": "YulBlock",
													"src": "1340:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1357:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1357:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1360:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1350:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:7"
																},
																"nativeSrc": "1350:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1350:12:7"
															},
															"nativeSrc": "1350:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1350:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1251:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1251:117:7"
											},
											{
												"body": {
													"nativeSrc": "1419:32:7",
													"nodeType": "YulBlock",
													"src": "1419:32:7",
													"statements": [
														{
															"nativeSrc": "1429:16:7",
															"nodeType": "YulAssignment",
															"src": "1429:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1440:5:7",
																"nodeType": "YulIdentifier",
																"src": "1440:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1429:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1374:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1401:5:7",
														"nodeType": "YulTypedName",
														"src": "1401:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1411:7:7",
														"nodeType": "YulTypedName",
														"src": "1411:7:7",
														"type": ""
													}
												],
												"src": "1374:77:7"
											},
											{
												"body": {
													"nativeSrc": "1500:79:7",
													"nodeType": "YulBlock",
													"src": "1500:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1557:16:7",
																"nodeType": "YulBlock",
																"src": "1557:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1566:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1569:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1569:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1559:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1559:6:7"
																			},
																			"nativeSrc": "1559:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1559:12:7"
																		},
																		"nativeSrc": "1559:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1559:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1523:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1523:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1548:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1548:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1530:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1530:17:7"
																				},
																				"nativeSrc": "1530:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1530:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1520:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1520:2:7"
																		},
																		"nativeSrc": "1520:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1520:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1513:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1513:6:7"
																},
																"nativeSrc": "1513:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1513:43:7"
															},
															"nativeSrc": "1510:63:7",
															"nodeType": "YulIf",
															"src": "1510:63:7"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1457:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1493:5:7",
														"nodeType": "YulTypedName",
														"src": "1493:5:7",
														"type": ""
													}
												],
												"src": "1457:122:7"
											},
											{
												"body": {
													"nativeSrc": "1637:87:7",
													"nodeType": "YulBlock",
													"src": "1637:87:7",
													"statements": [
														{
															"nativeSrc": "1647:29:7",
															"nodeType": "YulAssignment",
															"src": "1647:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1669:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1669:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1656:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1656:12:7"
																},
																"nativeSrc": "1656:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1656:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1647:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1647:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1712:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1712:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1685:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1685:26:7"
																},
																"nativeSrc": "1685:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1685:33:7"
															},
															"nativeSrc": "1685:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1685:33:7"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1585:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1615:6:7",
														"nodeType": "YulTypedName",
														"src": "1615:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1623:3:7",
														"nodeType": "YulTypedName",
														"src": "1623:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1631:5:7",
														"nodeType": "YulTypedName",
														"src": "1631:5:7",
														"type": ""
													}
												],
												"src": "1585:139:7"
											},
											{
												"body": {
													"nativeSrc": "1796:263:7",
													"nodeType": "YulBlock",
													"src": "1796:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1842:83:7",
																"nodeType": "YulBlock",
																"src": "1842:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1844:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1844:77:7"
																			},
																			"nativeSrc": "1844:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1844:79:7"
																		},
																		"nativeSrc": "1844:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1844:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1817:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1817:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1826:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1813:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1813:3:7"
																		},
																		"nativeSrc": "1813:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1813:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1838:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1838:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1809:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1809:3:7"
																},
																"nativeSrc": "1809:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1809:32:7"
															},
															"nativeSrc": "1806:119:7",
															"nodeType": "YulIf",
															"src": "1806:119:7"
														},
														{
															"nativeSrc": "1935:117:7",
															"nodeType": "YulBlock",
															"src": "1935:117:7",
															"statements": [
																{
																	"nativeSrc": "1950:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1950:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1964:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1964:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1954:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1954:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1979:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1979:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2014:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2014:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2025:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2025:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2010:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2010:3:7"
																				},
																				"nativeSrc": "2010:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2010:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2034:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2034:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "1989:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1989:20:7"
																		},
																		"nativeSrc": "1989:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1989:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1979:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1979:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1730:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1766:9:7",
														"nodeType": "YulTypedName",
														"src": "1766:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1777:7:7",
														"nodeType": "YulTypedName",
														"src": "1777:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1789:6:7",
														"nodeType": "YulTypedName",
														"src": "1789:6:7",
														"type": ""
													}
												],
												"src": "1730:329:7"
											},
											{
												"body": {
													"nativeSrc": "2110:32:7",
													"nodeType": "YulBlock",
													"src": "2110:32:7",
													"statements": [
														{
															"nativeSrc": "2120:16:7",
															"nodeType": "YulAssignment",
															"src": "2120:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2131:5:7",
																"nodeType": "YulIdentifier",
																"src": "2131:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2120:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2120:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2065:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2092:5:7",
														"nodeType": "YulTypedName",
														"src": "2092:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2102:7:7",
														"nodeType": "YulTypedName",
														"src": "2102:7:7",
														"type": ""
													}
												],
												"src": "2065:77:7"
											},
											{
												"body": {
													"nativeSrc": "2213:53:7",
													"nodeType": "YulBlock",
													"src": "2213:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2230:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2230:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2253:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2253:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2235:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2235:17:7"
																		},
																		"nativeSrc": "2235:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2235:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2223:6:7"
																},
																"nativeSrc": "2223:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2223:37:7"
															},
															"nativeSrc": "2223:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2223:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2148:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2201:5:7",
														"nodeType": "YulTypedName",
														"src": "2201:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2208:3:7",
														"nodeType": "YulTypedName",
														"src": "2208:3:7",
														"type": ""
													}
												],
												"src": "2148:118:7"
											},
											{
												"body": {
													"nativeSrc": "2370:124:7",
													"nodeType": "YulBlock",
													"src": "2370:124:7",
													"statements": [
														{
															"nativeSrc": "2380:26:7",
															"nodeType": "YulAssignment",
															"src": "2380:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2392:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2392:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2403:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2403:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2388:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2388:3:7"
																},
																"nativeSrc": "2388:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2388:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2380:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2380:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2460:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2460:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2473:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2473:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2484:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2484:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2469:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2469:3:7"
																		},
																		"nativeSrc": "2469:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2469:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2416:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2416:43:7"
																},
																"nativeSrc": "2416:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2416:71:7"
															},
															"nativeSrc": "2416:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2416:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2272:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2342:9:7",
														"nodeType": "YulTypedName",
														"src": "2342:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2354:6:7",
														"nodeType": "YulTypedName",
														"src": "2354:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2365:4:7",
														"nodeType": "YulTypedName",
														"src": "2365:4:7",
														"type": ""
													}
												],
												"src": "2272:222:7"
											},
											{
												"body": {
													"nativeSrc": "2553:51:7",
													"nodeType": "YulBlock",
													"src": "2553:51:7",
													"statements": [
														{
															"nativeSrc": "2563:35:7",
															"nodeType": "YulAssignment",
															"src": "2563:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2592:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2592:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2574:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2574:17:7"
																},
																"nativeSrc": "2574:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2574:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2563:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2563:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "2500:104:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2535:5:7",
														"nodeType": "YulTypedName",
														"src": "2535:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2545:7:7",
														"nodeType": "YulTypedName",
														"src": "2545:7:7",
														"type": ""
													}
												],
												"src": "2500:104:7"
											},
											{
												"body": {
													"nativeSrc": "2691:61:7",
													"nodeType": "YulBlock",
													"src": "2691:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2708:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2708:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2739:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2739:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "2713:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "2713:25:7"
																		},
																		"nativeSrc": "2713:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2713:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2701:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2701:6:7"
																},
																"nativeSrc": "2701:45:7",
																"nodeType": "YulFunctionCall",
																"src": "2701:45:7"
															},
															"nativeSrc": "2701:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "2701:45:7"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "2610:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2679:5:7",
														"nodeType": "YulTypedName",
														"src": "2679:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2686:3:7",
														"nodeType": "YulTypedName",
														"src": "2686:3:7",
														"type": ""
													}
												],
												"src": "2610:142:7"
											},
											{
												"body": {
													"nativeSrc": "2800:48:7",
													"nodeType": "YulBlock",
													"src": "2800:48:7",
													"statements": [
														{
															"nativeSrc": "2810:32:7",
															"nodeType": "YulAssignment",
															"src": "2810:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2835:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2835:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2828:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2828:6:7"
																		},
																		"nativeSrc": "2828:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2828:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2821:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2821:6:7"
																},
																"nativeSrc": "2821:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2821:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2810:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2810:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2758:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2782:5:7",
														"nodeType": "YulTypedName",
														"src": "2782:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2792:7:7",
														"nodeType": "YulTypedName",
														"src": "2792:7:7",
														"type": ""
													}
												],
												"src": "2758:90:7"
											},
											{
												"body": {
													"nativeSrc": "2913:50:7",
													"nodeType": "YulBlock",
													"src": "2913:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2930:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2930:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2950:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2950:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2935:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "2935:14:7"
																		},
																		"nativeSrc": "2935:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2935:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2923:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:7"
																},
																"nativeSrc": "2923:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2923:34:7"
															},
															"nativeSrc": "2923:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2923:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2854:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2901:5:7",
														"nodeType": "YulTypedName",
														"src": "2901:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2908:3:7",
														"nodeType": "YulTypedName",
														"src": "2908:3:7",
														"type": ""
													}
												],
												"src": "2854:109:7"
											},
											{
												"body": {
													"nativeSrc": "3105:216:7",
													"nodeType": "YulBlock",
													"src": "3105:216:7",
													"statements": [
														{
															"nativeSrc": "3115:26:7",
															"nodeType": "YulAssignment",
															"src": "3115:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3127:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3127:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3138:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3138:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3123:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3123:3:7"
																},
																"nativeSrc": "3123:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3123:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3115:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3115:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3211:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3211:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3224:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3224:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3235:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3235:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3220:3:7"
																		},
																		"nativeSrc": "3220:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3220:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "3151:59:7",
																	"nodeType": "YulIdentifier",
																	"src": "3151:59:7"
																},
																"nativeSrc": "3151:87:7",
																"nodeType": "YulFunctionCall",
																"src": "3151:87:7"
															},
															"nativeSrc": "3151:87:7",
															"nodeType": "YulExpressionStatement",
															"src": "3151:87:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3286:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3286:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3299:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3299:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3310:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3310:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3295:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3295:3:7"
																		},
																		"nativeSrc": "3295:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3295:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3248:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3248:37:7"
																},
																"nativeSrc": "3248:66:7",
																"nodeType": "YulFunctionCall",
																"src": "3248:66:7"
															},
															"nativeSrc": "3248:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "3248:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_bool__to_t_address_payable_t_bool__fromStack_reversed",
												"nativeSrc": "2969:352:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3069:9:7",
														"nodeType": "YulTypedName",
														"src": "3069:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3081:6:7",
														"nodeType": "YulTypedName",
														"src": "3081:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3089:6:7",
														"nodeType": "YulTypedName",
														"src": "3089:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3100:4:7",
														"nodeType": "YulTypedName",
														"src": "3100:4:7",
														"type": ""
													}
												],
												"src": "2969:352:7"
											},
											{
												"body": {
													"nativeSrc": "3412:66:7",
													"nodeType": "YulBlock",
													"src": "3412:66:7",
													"statements": [
														{
															"nativeSrc": "3422:50:7",
															"nodeType": "YulAssignment",
															"src": "3422:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3466:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3466:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3435:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3435:30:7"
																},
																"nativeSrc": "3435:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3435:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3422:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3422:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IAggregatorOracle_$948_to_t_address",
												"nativeSrc": "3327:151:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3402:9:7",
														"nodeType": "YulTypedName",
														"src": "3402:9:7",
														"type": ""
													}
												],
												"src": "3327:151:7"
											},
											{
												"body": {
													"nativeSrc": "3574:91:7",
													"nodeType": "YulBlock",
													"src": "3574:91:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3591:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3591:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3652:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3652:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IAggregatorOracle_$948_to_t_address",
																			"nativeSrc": "3596:55:7",
																			"nodeType": "YulIdentifier",
																			"src": "3596:55:7"
																		},
																		"nativeSrc": "3596:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:62:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3584:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:7"
																},
																"nativeSrc": "3584:75:7",
																"nodeType": "YulFunctionCall",
																"src": "3584:75:7"
															},
															"nativeSrc": "3584:75:7",
															"nodeType": "YulExpressionStatement",
															"src": "3584:75:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IAggregatorOracle_$948_to_t_address_fromStack",
												"nativeSrc": "3484:181:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3562:5:7",
														"nodeType": "YulTypedName",
														"src": "3562:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3569:3:7",
														"nodeType": "YulTypedName",
														"src": "3569:3:7",
														"type": ""
													}
												],
												"src": "3484:181:7"
											},
											{
												"body": {
													"nativeSrc": "3794:149:7",
													"nodeType": "YulBlock",
													"src": "3794:149:7",
													"statements": [
														{
															"nativeSrc": "3804:26:7",
															"nodeType": "YulAssignment",
															"src": "3804:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3816:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3816:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3827:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3827:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3812:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3812:3:7"
																},
																"nativeSrc": "3812:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3812:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3804:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3909:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3909:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3922:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3922:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3933:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3933:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3918:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3918:3:7"
																		},
																		"nativeSrc": "3918:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3918:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IAggregatorOracle_$948_to_t_address_fromStack",
																	"nativeSrc": "3840:68:7",
																	"nodeType": "YulIdentifier",
																	"src": "3840:68:7"
																},
																"nativeSrc": "3840:96:7",
																"nodeType": "YulFunctionCall",
																"src": "3840:96:7"
															},
															"nativeSrc": "3840:96:7",
															"nodeType": "YulExpressionStatement",
															"src": "3840:96:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IAggregatorOracle_$948__to_t_address__fromStack_reversed",
												"nativeSrc": "3671:272:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3766:9:7",
														"nodeType": "YulTypedName",
														"src": "3766:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3778:6:7",
														"nodeType": "YulTypedName",
														"src": "3778:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3789:4:7",
														"nodeType": "YulTypedName",
														"src": "3789:4:7",
														"type": ""
													}
												],
												"src": "3671:272:7"
											},
											{
												"body": {
													"nativeSrc": "3992:79:7",
													"nodeType": "YulBlock",
													"src": "3992:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4049:16:7",
																"nodeType": "YulBlock",
																"src": "4049:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4058:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4058:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4061:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4061:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4051:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4051:6:7"
																			},
																			"nativeSrc": "4051:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4051:12:7"
																		},
																		"nativeSrc": "4051:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4051:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4015:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4015:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4040:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4040:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4022:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4022:17:7"
																				},
																				"nativeSrc": "4022:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4022:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4012:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4012:2:7"
																		},
																		"nativeSrc": "4012:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4012:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4005:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4005:6:7"
																},
																"nativeSrc": "4005:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4005:43:7"
															},
															"nativeSrc": "4002:63:7",
															"nodeType": "YulIf",
															"src": "4002:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3949:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3985:5:7",
														"nodeType": "YulTypedName",
														"src": "3985:5:7",
														"type": ""
													}
												],
												"src": "3949:122:7"
											},
											{
												"body": {
													"nativeSrc": "4129:87:7",
													"nodeType": "YulBlock",
													"src": "4129:87:7",
													"statements": [
														{
															"nativeSrc": "4139:29:7",
															"nodeType": "YulAssignment",
															"src": "4139:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4161:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4161:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4148:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4148:12:7"
																},
																"nativeSrc": "4148:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4148:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4139:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4139:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4204:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4204:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4177:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4177:26:7"
																},
																"nativeSrc": "4177:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4177:33:7"
															},
															"nativeSrc": "4177:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4177:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4077:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4107:6:7",
														"nodeType": "YulTypedName",
														"src": "4107:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4115:3:7",
														"nodeType": "YulTypedName",
														"src": "4115:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4123:5:7",
														"nodeType": "YulTypedName",
														"src": "4123:5:7",
														"type": ""
													}
												],
												"src": "4077:139:7"
											},
											{
												"body": {
													"nativeSrc": "4305:391:7",
													"nodeType": "YulBlock",
													"src": "4305:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4351:83:7",
																"nodeType": "YulBlock",
																"src": "4351:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4353:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4353:77:7"
																			},
																			"nativeSrc": "4353:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4353:79:7"
																		},
																		"nativeSrc": "4353:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4353:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4326:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4326:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4335:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4335:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4322:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4322:3:7"
																		},
																		"nativeSrc": "4322:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4322:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4347:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4347:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4318:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4318:3:7"
																},
																"nativeSrc": "4318:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4318:32:7"
															},
															"nativeSrc": "4315:119:7",
															"nodeType": "YulIf",
															"src": "4315:119:7"
														},
														{
															"nativeSrc": "4444:117:7",
															"nodeType": "YulBlock",
															"src": "4444:117:7",
															"statements": [
																{
																	"nativeSrc": "4459:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4459:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4473:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4463:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4463:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4488:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4488:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4523:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4523:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4534:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4534:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4519:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4519:3:7"
																				},
																				"nativeSrc": "4519:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4519:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4543:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4543:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4498:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4498:20:7"
																		},
																		"nativeSrc": "4498:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4498:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4488:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4488:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4571:118:7",
															"nodeType": "YulBlock",
															"src": "4571:118:7",
															"statements": [
																{
																	"nativeSrc": "4586:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4586:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4600:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4600:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4590:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4590:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4616:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4616:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4651:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4651:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4662:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4662:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4647:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4647:3:7"
																				},
																				"nativeSrc": "4647:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4647:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4671:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4671:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4626:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4626:20:7"
																		},
																		"nativeSrc": "4626:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4626:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4616:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4616:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nativeSrc": "4222:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4267:9:7",
														"nodeType": "YulTypedName",
														"src": "4267:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4278:7:7",
														"nodeType": "YulTypedName",
														"src": "4278:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4290:6:7",
														"nodeType": "YulTypedName",
														"src": "4290:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4298:6:7",
														"nodeType": "YulTypedName",
														"src": "4298:6:7",
														"type": ""
													}
												],
												"src": "4222:474:7"
											},
											{
												"body": {
													"nativeSrc": "4783:66:7",
													"nodeType": "YulBlock",
													"src": "4783:66:7",
													"statements": [
														{
															"nativeSrc": "4793:50:7",
															"nodeType": "YulAssignment",
															"src": "4793:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4837:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4837:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4806:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4806:30:7"
																},
																"nativeSrc": "4806:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4806:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4793:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4793:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IDexInterface_$956_to_t_address",
												"nativeSrc": "4702:147:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4763:5:7",
														"nodeType": "YulTypedName",
														"src": "4763:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4773:9:7",
														"nodeType": "YulTypedName",
														"src": "4773:9:7",
														"type": ""
													}
												],
												"src": "4702:147:7"
											},
											{
												"body": {
													"nativeSrc": "4941:87:7",
													"nodeType": "YulBlock",
													"src": "4941:87:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4958:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4958:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5015:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5015:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IDexInterface_$956_to_t_address",
																			"nativeSrc": "4963:51:7",
																			"nodeType": "YulIdentifier",
																			"src": "4963:51:7"
																		},
																		"nativeSrc": "4963:58:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4963:58:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4951:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4951:6:7"
																},
																"nativeSrc": "4951:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4951:71:7"
															},
															"nativeSrc": "4951:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4951:71:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IDexInterface_$956_to_t_address_fromStack",
												"nativeSrc": "4855:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4929:5:7",
														"nodeType": "YulTypedName",
														"src": "4929:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4936:3:7",
														"nodeType": "YulTypedName",
														"src": "4936:3:7",
														"type": ""
													}
												],
												"src": "4855:173:7"
											},
											{
												"body": {
													"nativeSrc": "5153:145:7",
													"nodeType": "YulBlock",
													"src": "5153:145:7",
													"statements": [
														{
															"nativeSrc": "5163:26:7",
															"nodeType": "YulAssignment",
															"src": "5163:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5175:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5175:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5186:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5186:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5171:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:7"
																},
																"nativeSrc": "5171:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5171:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5163:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5163:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5264:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5264:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5277:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5277:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5288:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5288:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5273:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5273:3:7"
																		},
																		"nativeSrc": "5273:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5273:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IDexInterface_$956_to_t_address_fromStack",
																	"nativeSrc": "5199:64:7",
																	"nodeType": "YulIdentifier",
																	"src": "5199:64:7"
																},
																"nativeSrc": "5199:92:7",
																"nodeType": "YulFunctionCall",
																"src": "5199:92:7"
															},
															"nativeSrc": "5199:92:7",
															"nodeType": "YulExpressionStatement",
															"src": "5199:92:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDexInterface_$956__to_t_address__fromStack_reversed",
												"nativeSrc": "5034:264:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5125:9:7",
														"nodeType": "YulTypedName",
														"src": "5125:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5137:6:7",
														"nodeType": "YulTypedName",
														"src": "5137:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5148:4:7",
														"nodeType": "YulTypedName",
														"src": "5148:4:7",
														"type": ""
													}
												],
												"src": "5034:264:7"
											},
											{
												"body": {
													"nativeSrc": "5349:51:7",
													"nodeType": "YulBlock",
													"src": "5349:51:7",
													"statements": [
														{
															"nativeSrc": "5359:35:7",
															"nodeType": "YulAssignment",
															"src": "5359:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5388:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5388:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5370:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5370:17:7"
																},
																"nativeSrc": "5370:24:7",
																"nodeType": "YulFunctionCall",
																"src": "5370:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5359:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5359:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5304:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5331:5:7",
														"nodeType": "YulTypedName",
														"src": "5331:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5341:7:7",
														"nodeType": "YulTypedName",
														"src": "5341:7:7",
														"type": ""
													}
												],
												"src": "5304:96:7"
											},
											{
												"body": {
													"nativeSrc": "5471:53:7",
													"nodeType": "YulBlock",
													"src": "5471:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5488:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5488:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5511:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5511:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5493:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5493:17:7"
																		},
																		"nativeSrc": "5493:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5493:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5481:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5481:6:7"
																},
																"nativeSrc": "5481:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5481:37:7"
															},
															"nativeSrc": "5481:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5481:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5406:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5459:5:7",
														"nodeType": "YulTypedName",
														"src": "5459:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5466:3:7",
														"nodeType": "YulTypedName",
														"src": "5466:3:7",
														"type": ""
													}
												],
												"src": "5406:118:7"
											},
											{
												"body": {
													"nativeSrc": "5628:124:7",
													"nodeType": "YulBlock",
													"src": "5628:124:7",
													"statements": [
														{
															"nativeSrc": "5638:26:7",
															"nodeType": "YulAssignment",
															"src": "5638:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5650:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5650:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5661:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5661:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5646:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:7"
																},
																"nativeSrc": "5646:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5646:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5638:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5638:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5718:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5718:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5731:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5731:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5742:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5742:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5727:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5727:3:7"
																		},
																		"nativeSrc": "5727:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5727:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5674:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5674:43:7"
																},
																"nativeSrc": "5674:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5674:71:7"
															},
															"nativeSrc": "5674:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5674:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5530:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5600:9:7",
														"nodeType": "YulTypedName",
														"src": "5600:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5612:6:7",
														"nodeType": "YulTypedName",
														"src": "5612:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5623:4:7",
														"nodeType": "YulTypedName",
														"src": "5623:4:7",
														"type": ""
													}
												],
												"src": "5530:222:7"
											},
											{
												"body": {
													"nativeSrc": "5837:66:7",
													"nodeType": "YulBlock",
													"src": "5837:66:7",
													"statements": [
														{
															"nativeSrc": "5847:50:7",
															"nodeType": "YulAssignment",
															"src": "5847:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5891:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5891:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5860:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5860:30:7"
																},
																"nativeSrc": "5860:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5860:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5847:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5847:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IStableCoin_$940_to_t_address",
												"nativeSrc": "5758:145:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:7",
														"nodeType": "YulTypedName",
														"src": "5817:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5827:9:7",
														"nodeType": "YulTypedName",
														"src": "5827:9:7",
														"type": ""
													}
												],
												"src": "5758:145:7"
											},
											{
												"body": {
													"nativeSrc": "5993:85:7",
													"nodeType": "YulBlock",
													"src": "5993:85:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6010:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6010:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6065:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6065:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IStableCoin_$940_to_t_address",
																			"nativeSrc": "6015:49:7",
																			"nodeType": "YulIdentifier",
																			"src": "6015:49:7"
																		},
																		"nativeSrc": "6015:56:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6015:56:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6003:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6003:6:7"
																},
																"nativeSrc": "6003:69:7",
																"nodeType": "YulFunctionCall",
																"src": "6003:69:7"
															},
															"nativeSrc": "6003:69:7",
															"nodeType": "YulExpressionStatement",
															"src": "6003:69:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IStableCoin_$940_to_t_address_fromStack",
												"nativeSrc": "5909:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5981:5:7",
														"nodeType": "YulTypedName",
														"src": "5981:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5988:3:7",
														"nodeType": "YulTypedName",
														"src": "5988:3:7",
														"type": ""
													}
												],
												"src": "5909:169:7"
											},
											{
												"body": {
													"nativeSrc": "6201:143:7",
													"nodeType": "YulBlock",
													"src": "6201:143:7",
													"statements": [
														{
															"nativeSrc": "6211:26:7",
															"nodeType": "YulAssignment",
															"src": "6211:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6223:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6223:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6234:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6219:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6219:3:7"
																},
																"nativeSrc": "6219:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6219:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6211:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6211:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6310:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6310:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6323:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6323:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6334:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6334:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6319:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6319:3:7"
																		},
																		"nativeSrc": "6319:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6319:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IStableCoin_$940_to_t_address_fromStack",
																	"nativeSrc": "6247:62:7",
																	"nodeType": "YulIdentifier",
																	"src": "6247:62:7"
																},
																"nativeSrc": "6247:90:7",
																"nodeType": "YulFunctionCall",
																"src": "6247:90:7"
															},
															"nativeSrc": "6247:90:7",
															"nodeType": "YulExpressionStatement",
															"src": "6247:90:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IStableCoin_$940__to_t_address__fromStack_reversed",
												"nativeSrc": "6084:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6173:9:7",
														"nodeType": "YulTypedName",
														"src": "6173:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6185:6:7",
														"nodeType": "YulTypedName",
														"src": "6185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6196:4:7",
														"nodeType": "YulTypedName",
														"src": "6196:4:7",
														"type": ""
													}
												],
												"src": "6084:260:7"
											},
											{
												"body": {
													"nativeSrc": "6401:87:7",
													"nodeType": "YulBlock",
													"src": "6401:87:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6466:16:7",
																"nodeType": "YulBlock",
																"src": "6466:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6475:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6475:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6478:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6478:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6468:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6468:6:7"
																			},
																			"nativeSrc": "6468:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6468:12:7"
																		},
																		"nativeSrc": "6468:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6468:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6424:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6424:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6457:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6457:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "6431:25:7",
																					"nodeType": "YulIdentifier",
																					"src": "6431:25:7"
																				},
																				"nativeSrc": "6431:32:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6431:32:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6421:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6421:2:7"
																		},
																		"nativeSrc": "6421:43:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6421:43:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:7"
																},
																"nativeSrc": "6414:51:7",
																"nodeType": "YulFunctionCall",
																"src": "6414:51:7"
															},
															"nativeSrc": "6411:71:7",
															"nodeType": "YulIf",
															"src": "6411:71:7"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "6350:138:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6394:5:7",
														"nodeType": "YulTypedName",
														"src": "6394:5:7",
														"type": ""
													}
												],
												"src": "6350:138:7"
											},
											{
												"body": {
													"nativeSrc": "6554:95:7",
													"nodeType": "YulBlock",
													"src": "6554:95:7",
													"statements": [
														{
															"nativeSrc": "6564:29:7",
															"nodeType": "YulAssignment",
															"src": "6564:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6586:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6586:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6573:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6573:12:7"
																},
																"nativeSrc": "6573:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6573:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6564:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6564:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6637:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6637:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "6602:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "6602:34:7"
																},
																"nativeSrc": "6602:41:7",
																"nodeType": "YulFunctionCall",
																"src": "6602:41:7"
															},
															"nativeSrc": "6602:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "6602:41:7"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "6494:155:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6532:6:7",
														"nodeType": "YulTypedName",
														"src": "6532:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6540:3:7",
														"nodeType": "YulTypedName",
														"src": "6540:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6548:5:7",
														"nodeType": "YulTypedName",
														"src": "6548:5:7",
														"type": ""
													}
												],
												"src": "6494:155:7"
											},
											{
												"body": {
													"nativeSrc": "6746:399:7",
													"nodeType": "YulBlock",
													"src": "6746:399:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6792:83:7",
																"nodeType": "YulBlock",
																"src": "6792:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6794:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6794:77:7"
																			},
																			"nativeSrc": "6794:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6794:79:7"
																		},
																		"nativeSrc": "6794:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6794:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6767:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6767:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6776:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6776:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6763:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6763:3:7"
																		},
																		"nativeSrc": "6763:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6763:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6788:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6759:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6759:3:7"
																},
																"nativeSrc": "6759:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6759:32:7"
															},
															"nativeSrc": "6756:119:7",
															"nodeType": "YulIf",
															"src": "6756:119:7"
														},
														{
															"nativeSrc": "6885:117:7",
															"nodeType": "YulBlock",
															"src": "6885:117:7",
															"statements": [
																{
																	"nativeSrc": "6900:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6900:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6914:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6914:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6904:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6904:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6929:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6929:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6964:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6964:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6975:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6975:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6960:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6960:3:7"
																				},
																				"nativeSrc": "6960:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6960:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6984:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6984:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6939:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6939:20:7"
																		},
																		"nativeSrc": "6939:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6939:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6929:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6929:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7012:126:7",
															"nodeType": "YulBlock",
															"src": "7012:126:7",
															"statements": [
																{
																	"nativeSrc": "7027:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7027:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7041:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7031:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7031:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7057:71:7",
																	"nodeType": "YulAssignment",
																	"src": "7057:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7100:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7100:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7111:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7111:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7096:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7096:3:7"
																				},
																				"nativeSrc": "7096:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7096:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7120:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7120:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "7067:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7067:28:7"
																		},
																		"nativeSrc": "7067:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7067:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7057:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7057:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address_payable",
												"nativeSrc": "6655:490:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6708:9:7",
														"nodeType": "YulTypedName",
														"src": "6708:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6719:7:7",
														"nodeType": "YulTypedName",
														"src": "6719:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6731:6:7",
														"nodeType": "YulTypedName",
														"src": "6731:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6739:6:7",
														"nodeType": "YulTypedName",
														"src": "6739:6:7",
														"type": ""
													}
												],
												"src": "6655:490:7"
											},
											{
												"body": {
													"nativeSrc": "7194:79:7",
													"nodeType": "YulBlock",
													"src": "7194:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7251:16:7",
																"nodeType": "YulBlock",
																"src": "7251:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7260:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7260:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7263:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7263:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7253:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7253:6:7"
																			},
																			"nativeSrc": "7253:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7253:12:7"
																		},
																		"nativeSrc": "7253:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7253:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7217:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7217:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7242:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7242:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "7224:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "7224:17:7"
																				},
																				"nativeSrc": "7224:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7224:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7214:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7214:2:7"
																		},
																		"nativeSrc": "7214:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7214:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7207:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:7"
																},
																"nativeSrc": "7207:43:7",
																"nodeType": "YulFunctionCall",
																"src": "7207:43:7"
															},
															"nativeSrc": "7204:63:7",
															"nodeType": "YulIf",
															"src": "7204:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "7151:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7187:5:7",
														"nodeType": "YulTypedName",
														"src": "7187:5:7",
														"type": ""
													}
												],
												"src": "7151:122:7"
											},
											{
												"body": {
													"nativeSrc": "7331:87:7",
													"nodeType": "YulBlock",
													"src": "7331:87:7",
													"statements": [
														{
															"nativeSrc": "7341:29:7",
															"nodeType": "YulAssignment",
															"src": "7341:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7363:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7363:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7350:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "7350:12:7"
																},
																"nativeSrc": "7350:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7350:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7341:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7341:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7406:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7406:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7379:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "7379:26:7"
																},
																"nativeSrc": "7379:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7379:33:7"
															},
															"nativeSrc": "7379:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "7379:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "7279:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7309:6:7",
														"nodeType": "YulTypedName",
														"src": "7309:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7317:3:7",
														"nodeType": "YulTypedName",
														"src": "7317:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7325:5:7",
														"nodeType": "YulTypedName",
														"src": "7325:5:7",
														"type": ""
													}
												],
												"src": "7279:139:7"
											},
											{
												"body": {
													"nativeSrc": "7490:263:7",
													"nodeType": "YulBlock",
													"src": "7490:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7536:83:7",
																"nodeType": "YulBlock",
																"src": "7536:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7538:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7538:77:7"
																			},
																			"nativeSrc": "7538:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7538:79:7"
																		},
																		"nativeSrc": "7538:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7538:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7511:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7511:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7520:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7520:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7507:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7507:3:7"
																		},
																		"nativeSrc": "7507:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7507:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7532:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7532:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7503:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7503:3:7"
																},
																"nativeSrc": "7503:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7503:32:7"
															},
															"nativeSrc": "7500:119:7",
															"nodeType": "YulIf",
															"src": "7500:119:7"
														},
														{
															"nativeSrc": "7629:117:7",
															"nodeType": "YulBlock",
															"src": "7629:117:7",
															"statements": [
																{
																	"nativeSrc": "7644:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7644:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7658:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7658:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7648:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7648:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7673:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7673:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7708:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7708:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7719:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7719:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7704:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7704:3:7"
																				},
																				"nativeSrc": "7704:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7704:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7728:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7728:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7683:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7683:20:7"
																		},
																		"nativeSrc": "7683:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7683:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7673:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7673:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7424:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7460:9:7",
														"nodeType": "YulTypedName",
														"src": "7460:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7471:7:7",
														"nodeType": "YulTypedName",
														"src": "7471:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7483:6:7",
														"nodeType": "YulTypedName",
														"src": "7483:6:7",
														"type": ""
													}
												],
												"src": "7424:329:7"
											},
											{
												"body": {
													"nativeSrc": "7799:76:7",
													"nodeType": "YulBlock",
													"src": "7799:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7853:16:7",
																"nodeType": "YulBlock",
																"src": "7853:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7862:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7862:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7865:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7865:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7855:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7855:6:7"
																			},
																			"nativeSrc": "7855:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7855:12:7"
																		},
																		"nativeSrc": "7855:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7855:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7822:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7822:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7844:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7844:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7829:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "7829:14:7"
																				},
																				"nativeSrc": "7829:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7829:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7819:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7819:2:7"
																		},
																		"nativeSrc": "7819:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7819:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7812:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7812:6:7"
																},
																"nativeSrc": "7812:40:7",
																"nodeType": "YulFunctionCall",
																"src": "7812:40:7"
															},
															"nativeSrc": "7809:60:7",
															"nodeType": "YulIf",
															"src": "7809:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7759:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7792:5:7",
														"nodeType": "YulTypedName",
														"src": "7792:5:7",
														"type": ""
													}
												],
												"src": "7759:116:7"
											},
											{
												"body": {
													"nativeSrc": "7930:84:7",
													"nodeType": "YulBlock",
													"src": "7930:84:7",
													"statements": [
														{
															"nativeSrc": "7940:29:7",
															"nodeType": "YulAssignment",
															"src": "7940:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7962:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7962:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7949:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "7949:12:7"
																},
																"nativeSrc": "7949:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7949:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7940:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7940:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8002:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8002:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7978:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "7978:23:7"
																},
																"nativeSrc": "7978:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7978:30:7"
															},
															"nativeSrc": "7978:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7978:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "7881:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7908:6:7",
														"nodeType": "YulTypedName",
														"src": "7908:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7916:3:7",
														"nodeType": "YulTypedName",
														"src": "7916:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7924:5:7",
														"nodeType": "YulTypedName",
														"src": "7924:5:7",
														"type": ""
													}
												],
												"src": "7881:133:7"
											},
											{
												"body": {
													"nativeSrc": "8125:524:7",
													"nodeType": "YulBlock",
													"src": "8125:524:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8171:83:7",
																"nodeType": "YulBlock",
																"src": "8171:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8173:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8173:77:7"
																			},
																			"nativeSrc": "8173:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8173:79:7"
																		},
																		"nativeSrc": "8173:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8173:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8146:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8146:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8155:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8155:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8142:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8142:3:7"
																		},
																		"nativeSrc": "8142:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8142:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8167:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8167:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8138:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8138:3:7"
																},
																"nativeSrc": "8138:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8138:32:7"
															},
															"nativeSrc": "8135:119:7",
															"nodeType": "YulIf",
															"src": "8135:119:7"
														},
														{
															"nativeSrc": "8264:117:7",
															"nodeType": "YulBlock",
															"src": "8264:117:7",
															"statements": [
																{
																	"nativeSrc": "8279:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8279:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8293:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8293:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8283:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8283:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8308:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8308:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8343:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8343:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8354:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8354:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8339:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8339:3:7"
																				},
																				"nativeSrc": "8339:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8339:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8363:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8363:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "8318:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8318:20:7"
																		},
																		"nativeSrc": "8318:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8318:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8308:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8308:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8391:126:7",
															"nodeType": "YulBlock",
															"src": "8391:126:7",
															"statements": [
																{
																	"nativeSrc": "8406:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8406:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8420:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8420:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8410:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8410:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8436:71:7",
																	"nodeType": "YulAssignment",
																	"src": "8436:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8479:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8479:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8490:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8490:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8475:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8475:3:7"
																				},
																				"nativeSrc": "8475:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8475:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8499:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8499:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "8446:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "8446:28:7"
																		},
																		"nativeSrc": "8446:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8446:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8436:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8436:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8527:115:7",
															"nodeType": "YulBlock",
															"src": "8527:115:7",
															"statements": [
																{
																	"nativeSrc": "8542:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8542:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8556:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8556:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8546:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8546:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8572:60:7",
																	"nodeType": "YulAssignment",
																	"src": "8572:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8604:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8604:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8615:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8615:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8600:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8600:3:7"
																				},
																				"nativeSrc": "8600:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8600:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8624:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8624:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8582:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8582:17:7"
																		},
																		"nativeSrc": "8582:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8582:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8572:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8572:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address_payablet_bool",
												"nativeSrc": "8020:629:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8079:9:7",
														"nodeType": "YulTypedName",
														"src": "8079:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8090:7:7",
														"nodeType": "YulTypedName",
														"src": "8090:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8102:6:7",
														"nodeType": "YulTypedName",
														"src": "8102:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8110:6:7",
														"nodeType": "YulTypedName",
														"src": "8110:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8118:6:7",
														"nodeType": "YulTypedName",
														"src": "8118:6:7",
														"type": ""
													}
												],
												"src": "8020:629:7"
											},
											{
												"body": {
													"nativeSrc": "8751:73:7",
													"nodeType": "YulBlock",
													"src": "8751:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8768:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8768:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8773:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8773:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8761:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8761:6:7"
																},
																"nativeSrc": "8761:19:7",
																"nodeType": "YulFunctionCall",
																"src": "8761:19:7"
															},
															"nativeSrc": "8761:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "8761:19:7"
														},
														{
															"nativeSrc": "8789:29:7",
															"nodeType": "YulAssignment",
															"src": "8789:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8808:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8808:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8813:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8813:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8804:3:7"
																},
																"nativeSrc": "8804:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8804:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8789:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8789:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8655:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8723:3:7",
														"nodeType": "YulTypedName",
														"src": "8723:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8728:6:7",
														"nodeType": "YulTypedName",
														"src": "8728:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8739:11:7",
														"nodeType": "YulTypedName",
														"src": "8739:11:7",
														"type": ""
													}
												],
												"src": "8655:169:7"
											},
											{
												"body": {
													"nativeSrc": "8936:63:7",
													"nodeType": "YulBlock",
													"src": "8936:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8958:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8958:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8966:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8966:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8954:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8954:3:7"
																		},
																		"nativeSrc": "8954:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8954:14:7"
																	},
																	{
																		"hexValue": "4d65726368616e74206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "8970:21:7",
																		"nodeType": "YulLiteral",
																		"src": "8970:21:7",
																		"type": "",
																		"value": "Merchant not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8947:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8947:6:7"
																},
																"nativeSrc": "8947:45:7",
																"nodeType": "YulFunctionCall",
																"src": "8947:45:7"
															},
															"nativeSrc": "8947:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "8947:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc",
												"nativeSrc": "8830:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8928:6:7",
														"nodeType": "YulTypedName",
														"src": "8928:6:7",
														"type": ""
													}
												],
												"src": "8830:169:7"
											},
											{
												"body": {
													"nativeSrc": "9151:220:7",
													"nodeType": "YulBlock",
													"src": "9151:220:7",
													"statements": [
														{
															"nativeSrc": "9161:74:7",
															"nodeType": "YulAssignment",
															"src": "9161:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9227:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9227:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9232:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9232:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9168:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9168:58:7"
																},
																"nativeSrc": "9168:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9168:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9161:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9161:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9333:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9333:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc",
																	"nativeSrc": "9244:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9244:88:7"
																},
																"nativeSrc": "9244:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9244:93:7"
															},
															"nativeSrc": "9244:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9244:93:7"
														},
														{
															"nativeSrc": "9346:19:7",
															"nodeType": "YulAssignment",
															"src": "9346:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9357:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9357:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9362:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9362:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9353:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9353:3:7"
																},
																"nativeSrc": "9353:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9353:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9346:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9346:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9005:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9139:3:7",
														"nodeType": "YulTypedName",
														"src": "9139:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9147:3:7",
														"nodeType": "YulTypedName",
														"src": "9147:3:7",
														"type": ""
													}
												],
												"src": "9005:366:7"
											},
											{
												"body": {
													"nativeSrc": "9548:248:7",
													"nodeType": "YulBlock",
													"src": "9548:248:7",
													"statements": [
														{
															"nativeSrc": "9558:26:7",
															"nodeType": "YulAssignment",
															"src": "9558:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9570:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9570:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9581:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9581:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9566:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9566:3:7"
																},
																"nativeSrc": "9566:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9566:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9558:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9558:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9605:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9605:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9616:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9616:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9601:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9601:3:7"
																		},
																		"nativeSrc": "9601:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9601:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9624:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9624:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9630:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9630:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9620:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:7"
																		},
																		"nativeSrc": "9620:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9620:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9594:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9594:6:7"
																},
																"nativeSrc": "9594:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9594:47:7"
															},
															"nativeSrc": "9594:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9594:47:7"
														},
														{
															"nativeSrc": "9650:139:7",
															"nodeType": "YulAssignment",
															"src": "9650:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9784:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9784:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9658:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9658:124:7"
																},
																"nativeSrc": "9658:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9658:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9650:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9650:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9377:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9528:9:7",
														"nodeType": "YulTypedName",
														"src": "9528:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9543:4:7",
														"nodeType": "YulTypedName",
														"src": "9543:4:7",
														"type": ""
													}
												],
												"src": "9377:419:7"
											},
											{
												"body": {
													"nativeSrc": "9956:288:7",
													"nodeType": "YulBlock",
													"src": "9956:288:7",
													"statements": [
														{
															"nativeSrc": "9966:26:7",
															"nodeType": "YulAssignment",
															"src": "9966:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9978:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9978:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9989:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9989:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9974:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9974:3:7"
																},
																"nativeSrc": "9974:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9974:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9966:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9966:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10046:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10046:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10059:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10059:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10070:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10070:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10055:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10055:3:7"
																		},
																		"nativeSrc": "10055:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10055:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10002:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10002:43:7"
																},
																"nativeSrc": "10002:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10002:71:7"
															},
															"nativeSrc": "10002:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10002:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10127:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10127:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10140:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10140:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10151:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10151:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10136:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10136:3:7"
																		},
																		"nativeSrc": "10136:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10136:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10083:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10083:43:7"
																},
																"nativeSrc": "10083:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10083:72:7"
															},
															"nativeSrc": "10083:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10083:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10209:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10209:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10222:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10222:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10233:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10233:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10218:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10218:3:7"
																		},
																		"nativeSrc": "10218:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10218:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10165:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10165:43:7"
																},
																"nativeSrc": "10165:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10165:72:7"
															},
															"nativeSrc": "10165:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10165:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9802:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9912:9:7",
														"nodeType": "YulTypedName",
														"src": "9912:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9924:6:7",
														"nodeType": "YulTypedName",
														"src": "9924:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9932:6:7",
														"nodeType": "YulTypedName",
														"src": "9932:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9940:6:7",
														"nodeType": "YulTypedName",
														"src": "9940:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9951:4:7",
														"nodeType": "YulTypedName",
														"src": "9951:4:7",
														"type": ""
													}
												],
												"src": "9802:442:7"
											},
											{
												"body": {
													"nativeSrc": "10310:77:7",
													"nodeType": "YulBlock",
													"src": "10310:77:7",
													"statements": [
														{
															"nativeSrc": "10320:22:7",
															"nodeType": "YulAssignment",
															"src": "10320:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10335:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10335:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10329:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10329:5:7"
																},
																"nativeSrc": "10329:13:7",
																"nodeType": "YulFunctionCall",
																"src": "10329:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10320:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10320:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10375:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10375:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10351:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "10351:23:7"
																},
																"nativeSrc": "10351:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10351:30:7"
															},
															"nativeSrc": "10351:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10351:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10250:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10288:6:7",
														"nodeType": "YulTypedName",
														"src": "10288:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10296:3:7",
														"nodeType": "YulTypedName",
														"src": "10296:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10304:5:7",
														"nodeType": "YulTypedName",
														"src": "10304:5:7",
														"type": ""
													}
												],
												"src": "10250:137:7"
											},
											{
												"body": {
													"nativeSrc": "10467:271:7",
													"nodeType": "YulBlock",
													"src": "10467:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10513:83:7",
																"nodeType": "YulBlock",
																"src": "10513:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10515:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10515:77:7"
																			},
																			"nativeSrc": "10515:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10515:79:7"
																		},
																		"nativeSrc": "10515:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10515:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10488:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10488:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10497:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10497:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10484:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10484:3:7"
																		},
																		"nativeSrc": "10484:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10484:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10509:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10480:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10480:3:7"
																},
																"nativeSrc": "10480:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10480:32:7"
															},
															"nativeSrc": "10477:119:7",
															"nodeType": "YulIf",
															"src": "10477:119:7"
														},
														{
															"nativeSrc": "10606:125:7",
															"nodeType": "YulBlock",
															"src": "10606:125:7",
															"statements": [
																{
																	"nativeSrc": "10621:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10621:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10635:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10635:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10625:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10625:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10650:71:7",
																	"nodeType": "YulAssignment",
																	"src": "10650:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10693:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10693:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10704:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10704:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10689:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10689:3:7"
																				},
																				"nativeSrc": "10689:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10689:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10713:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10713:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10660:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "10660:28:7"
																		},
																		"nativeSrc": "10660:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10660:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10650:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10650:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10393:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10437:9:7",
														"nodeType": "YulTypedName",
														"src": "10437:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10448:7:7",
														"nodeType": "YulTypedName",
														"src": "10448:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10460:6:7",
														"nodeType": "YulTypedName",
														"src": "10460:6:7",
														"type": ""
													}
												],
												"src": "10393:345:7"
											},
											{
												"body": {
													"nativeSrc": "10850:59:7",
													"nodeType": "YulBlock",
													"src": "10850:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10872:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10872:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10880:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10880:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10868:3:7"
																		},
																		"nativeSrc": "10868:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10868:14:7"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "10884:17:7",
																		"nodeType": "YulLiteral",
																		"src": "10884:17:7",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10861:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10861:6:7"
																},
																"nativeSrc": "10861:41:7",
																"nodeType": "YulFunctionCall",
																"src": "10861:41:7"
															},
															"nativeSrc": "10861:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "10861:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "10744:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10842:6:7",
														"nodeType": "YulTypedName",
														"src": "10842:6:7",
														"type": ""
													}
												],
												"src": "10744:165:7"
											},
											{
												"body": {
													"nativeSrc": "11061:220:7",
													"nodeType": "YulBlock",
													"src": "11061:220:7",
													"statements": [
														{
															"nativeSrc": "11071:74:7",
															"nodeType": "YulAssignment",
															"src": "11071:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11137:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11137:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11142:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11142:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11078:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11078:58:7"
																},
																"nativeSrc": "11078:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11078:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11071:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11071:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11243:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11243:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "11154:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11154:88:7"
																},
																"nativeSrc": "11154:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11154:93:7"
															},
															"nativeSrc": "11154:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11154:93:7"
														},
														{
															"nativeSrc": "11256:19:7",
															"nodeType": "YulAssignment",
															"src": "11256:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11267:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11267:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11272:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11272:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11263:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11263:3:7"
																},
																"nativeSrc": "11263:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11263:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11256:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11256:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10915:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11049:3:7",
														"nodeType": "YulTypedName",
														"src": "11049:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11057:3:7",
														"nodeType": "YulTypedName",
														"src": "11057:3:7",
														"type": ""
													}
												],
												"src": "10915:366:7"
											},
											{
												"body": {
													"nativeSrc": "11458:248:7",
													"nodeType": "YulBlock",
													"src": "11458:248:7",
													"statements": [
														{
															"nativeSrc": "11468:26:7",
															"nodeType": "YulAssignment",
															"src": "11468:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11480:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11480:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11491:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11491:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11476:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11476:3:7"
																},
																"nativeSrc": "11476:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11476:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11468:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11468:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11515:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11515:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11526:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11526:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11511:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11511:3:7"
																		},
																		"nativeSrc": "11511:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11511:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11534:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11534:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11540:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11540:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11530:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11530:3:7"
																		},
																		"nativeSrc": "11530:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11530:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11504:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11504:6:7"
																},
																"nativeSrc": "11504:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11504:47:7"
															},
															"nativeSrc": "11504:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11504:47:7"
														},
														{
															"nativeSrc": "11560:139:7",
															"nodeType": "YulAssignment",
															"src": "11560:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11694:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11694:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11568:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11568:124:7"
																},
																"nativeSrc": "11568:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11568:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11560:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11560:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11287:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11438:9:7",
														"nodeType": "YulTypedName",
														"src": "11438:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11453:4:7",
														"nodeType": "YulTypedName",
														"src": "11453:4:7",
														"type": ""
													}
												],
												"src": "11287:419:7"
											},
											{
												"body": {
													"nativeSrc": "11740:152:7",
													"nodeType": "YulBlock",
													"src": "11740:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11757:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11757:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11760:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11760:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11750:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11750:6:7"
																},
																"nativeSrc": "11750:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11750:88:7"
															},
															"nativeSrc": "11750:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11750:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11854:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11857:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11857:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11847:6:7"
																},
																"nativeSrc": "11847:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11847:15:7"
															},
															"nativeSrc": "11847:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11847:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11878:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11878:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11881:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11881:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11871:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11871:6:7"
																},
																"nativeSrc": "11871:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11871:15:7"
															},
															"nativeSrc": "11871:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11871:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11712:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11712:180:7"
											},
											{
												"body": {
													"nativeSrc": "11942:147:7",
													"nodeType": "YulBlock",
													"src": "11942:147:7",
													"statements": [
														{
															"nativeSrc": "11952:25:7",
															"nodeType": "YulAssignment",
															"src": "11952:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11975:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11975:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11957:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11957:17:7"
																},
																"nativeSrc": "11957:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11957:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11952:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11952:1:7"
																}
															]
														},
														{
															"nativeSrc": "11986:25:7",
															"nodeType": "YulAssignment",
															"src": "11986:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12009:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12009:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11991:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11991:17:7"
																},
																"nativeSrc": "11991:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11991:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11986:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11986:1:7"
																}
															]
														},
														{
															"nativeSrc": "12020:16:7",
															"nodeType": "YulAssignment",
															"src": "12020:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12031:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12031:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12034:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12034:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12027:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12027:3:7"
																},
																"nativeSrc": "12027:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12027:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12020:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12020:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12060:22:7",
																"nodeType": "YulBlock",
																"src": "12060:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12062:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12062:16:7"
																			},
																			"nativeSrc": "12062:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12062:18:7"
																		},
																		"nativeSrc": "12062:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12062:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12052:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12052:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12055:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12055:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12049:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12049:2:7"
																},
																"nativeSrc": "12049:10:7",
																"nodeType": "YulFunctionCall",
																"src": "12049:10:7"
															},
															"nativeSrc": "12046:36:7",
															"nodeType": "YulIf",
															"src": "12046:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11898:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11929:1:7",
														"nodeType": "YulTypedName",
														"src": "11929:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11932:1:7",
														"nodeType": "YulTypedName",
														"src": "11932:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11938:3:7",
														"nodeType": "YulTypedName",
														"src": "11938:3:7",
														"type": ""
													}
												],
												"src": "11898:191:7"
											},
											{
												"body": {
													"nativeSrc": "12158:80:7",
													"nodeType": "YulBlock",
													"src": "12158:80:7",
													"statements": [
														{
															"nativeSrc": "12168:22:7",
															"nodeType": "YulAssignment",
															"src": "12168:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12183:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12183:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12177:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "12177:5:7"
																},
																"nativeSrc": "12177:13:7",
																"nodeType": "YulFunctionCall",
																"src": "12177:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12168:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "12168:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12226:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12226:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12199:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "12199:26:7"
																},
																"nativeSrc": "12199:33:7",
																"nodeType": "YulFunctionCall",
																"src": "12199:33:7"
															},
															"nativeSrc": "12199:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "12199:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12095:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12136:6:7",
														"nodeType": "YulTypedName",
														"src": "12136:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12144:3:7",
														"nodeType": "YulTypedName",
														"src": "12144:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12152:5:7",
														"nodeType": "YulTypedName",
														"src": "12152:5:7",
														"type": ""
													}
												],
												"src": "12095:143:7"
											},
											{
												"body": {
													"nativeSrc": "12321:274:7",
													"nodeType": "YulBlock",
													"src": "12321:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12367:83:7",
																"nodeType": "YulBlock",
																"src": "12367:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12369:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12369:77:7"
																			},
																			"nativeSrc": "12369:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12369:79:7"
																		},
																		"nativeSrc": "12369:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12369:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12342:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12342:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12351:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12351:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12338:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12338:3:7"
																		},
																		"nativeSrc": "12338:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12338:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12363:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12363:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12334:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12334:3:7"
																},
																"nativeSrc": "12334:32:7",
																"nodeType": "YulFunctionCall",
																"src": "12334:32:7"
															},
															"nativeSrc": "12331:119:7",
															"nodeType": "YulIf",
															"src": "12331:119:7"
														},
														{
															"nativeSrc": "12460:128:7",
															"nodeType": "YulBlock",
															"src": "12460:128:7",
															"statements": [
																{
																	"nativeSrc": "12475:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12475:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12489:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12489:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12479:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12479:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12504:74:7",
																	"nodeType": "YulAssignment",
																	"src": "12504:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12550:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12550:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12561:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12561:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12546:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12546:3:7"
																				},
																				"nativeSrc": "12546:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12546:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12570:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12570:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12514:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "12514:31:7"
																		},
																		"nativeSrc": "12514:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12514:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12504:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12504:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "12244:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12291:9:7",
														"nodeType": "YulTypedName",
														"src": "12291:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12302:7:7",
														"nodeType": "YulTypedName",
														"src": "12302:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12314:6:7",
														"nodeType": "YulTypedName",
														"src": "12314:6:7",
														"type": ""
													}
												],
												"src": "12244:351:7"
											},
											{
												"body": {
													"nativeSrc": "12707:57:7",
													"nodeType": "YulBlock",
													"src": "12707:57:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12729:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12729:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12737:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12737:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12725:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12725:3:7"
																		},
																		"nativeSrc": "12725:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12725:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964207072696365",
																		"kind": "string",
																		"nativeSrc": "12741:15:7",
																		"nodeType": "YulLiteral",
																		"src": "12741:15:7",
																		"type": "",
																		"value": "Invalid price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12718:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12718:6:7"
																},
																"nativeSrc": "12718:39:7",
																"nodeType": "YulFunctionCall",
																"src": "12718:39:7"
															},
															"nativeSrc": "12718:39:7",
															"nodeType": "YulExpressionStatement",
															"src": "12718:39:7"
														}
													]
												},
												"name": "store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
												"nativeSrc": "12601:163:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12699:6:7",
														"nodeType": "YulTypedName",
														"src": "12699:6:7",
														"type": ""
													}
												],
												"src": "12601:163:7"
											},
											{
												"body": {
													"nativeSrc": "12916:220:7",
													"nodeType": "YulBlock",
													"src": "12916:220:7",
													"statements": [
														{
															"nativeSrc": "12926:74:7",
															"nodeType": "YulAssignment",
															"src": "12926:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12992:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12992:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12997:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12997:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12933:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12933:58:7"
																},
																"nativeSrc": "12933:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12933:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12926:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12926:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13098:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13098:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																	"nativeSrc": "13009:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13009:88:7"
																},
																"nativeSrc": "13009:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13009:93:7"
															},
															"nativeSrc": "13009:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13009:93:7"
														},
														{
															"nativeSrc": "13111:19:7",
															"nodeType": "YulAssignment",
															"src": "13111:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13122:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13122:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13127:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13127:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13118:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13118:3:7"
																},
																"nativeSrc": "13118:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13118:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13111:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13111:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12770:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12904:3:7",
														"nodeType": "YulTypedName",
														"src": "12904:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12912:3:7",
														"nodeType": "YulTypedName",
														"src": "12912:3:7",
														"type": ""
													}
												],
												"src": "12770:366:7"
											},
											{
												"body": {
													"nativeSrc": "13313:248:7",
													"nodeType": "YulBlock",
													"src": "13313:248:7",
													"statements": [
														{
															"nativeSrc": "13323:26:7",
															"nodeType": "YulAssignment",
															"src": "13323:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13335:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13335:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13346:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13346:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13331:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13331:3:7"
																},
																"nativeSrc": "13331:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13331:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13323:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13323:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13370:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13370:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13381:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13381:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13366:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13366:3:7"
																		},
																		"nativeSrc": "13366:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13366:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13389:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13389:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13395:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13395:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13385:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13385:3:7"
																		},
																		"nativeSrc": "13385:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13385:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13359:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13359:6:7"
																},
																"nativeSrc": "13359:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13359:47:7"
															},
															"nativeSrc": "13359:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13359:47:7"
														},
														{
															"nativeSrc": "13415:139:7",
															"nodeType": "YulAssignment",
															"src": "13415:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13549:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13549:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13423:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13423:124:7"
																},
																"nativeSrc": "13423:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13423:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13415:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13415:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13142:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13293:9:7",
														"nodeType": "YulTypedName",
														"src": "13293:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13308:4:7",
														"nodeType": "YulTypedName",
														"src": "13308:4:7",
														"type": ""
													}
												],
												"src": "13142:419:7"
											},
											{
												"body": {
													"nativeSrc": "13615:362:7",
													"nodeType": "YulBlock",
													"src": "13615:362:7",
													"statements": [
														{
															"nativeSrc": "13625:25:7",
															"nodeType": "YulAssignment",
															"src": "13625:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13648:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13648:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13630:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13630:17:7"
																},
																"nativeSrc": "13630:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13630:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13625:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13625:1:7"
																}
															]
														},
														{
															"nativeSrc": "13659:25:7",
															"nodeType": "YulAssignment",
															"src": "13659:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13682:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13682:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13664:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13664:17:7"
																},
																"nativeSrc": "13664:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13664:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13659:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13659:1:7"
																}
															]
														},
														{
															"nativeSrc": "13693:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13693:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13716:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13716:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13719:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13719:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13712:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13712:3:7"
																},
																"nativeSrc": "13712:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13712:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13697:11:7",
																	"nodeType": "YulTypedName",
																	"src": "13697:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13730:41:7",
															"nodeType": "YulAssignment",
															"src": "13730:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13759:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "13759:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13741:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13741:17:7"
																},
																"nativeSrc": "13741:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13741:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13730:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "13730:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13948:22:7",
																"nodeType": "YulBlock",
																"src": "13948:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13950:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13950:16:7"
																			},
																			"nativeSrc": "13950:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13950:18:7"
																		},
																		"nativeSrc": "13950:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13950:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13881:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "13881:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13874:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "13874:6:7"
																				},
																				"nativeSrc": "13874:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13874:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13904:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "13904:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13911:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "13911:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13920:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "13920:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13907:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "13907:3:7"
																						},
																						"nativeSrc": "13907:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "13907:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13901:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "13901:2:7"
																				},
																				"nativeSrc": "13901:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13901:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13854:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13854:2:7"
																		},
																		"nativeSrc": "13854:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13854:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13834:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13834:6:7"
																},
																"nativeSrc": "13834:113:7",
																"nodeType": "YulFunctionCall",
																"src": "13834:113:7"
															},
															"nativeSrc": "13831:139:7",
															"nodeType": "YulIf",
															"src": "13831:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13567:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13598:1:7",
														"nodeType": "YulTypedName",
														"src": "13598:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13601:1:7",
														"nodeType": "YulTypedName",
														"src": "13601:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13607:7:7",
														"nodeType": "YulTypedName",
														"src": "13607:7:7",
														"type": ""
													}
												],
												"src": "13567:410:7"
											},
											{
												"body": {
													"nativeSrc": "14011:152:7",
													"nodeType": "YulBlock",
													"src": "14011:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14028:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14028:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14031:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14031:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14021:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14021:6:7"
																},
																"nativeSrc": "14021:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14021:88:7"
															},
															"nativeSrc": "14021:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14021:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14125:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14125:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14128:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14128:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14118:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14118:6:7"
																},
																"nativeSrc": "14118:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14118:15:7"
															},
															"nativeSrc": "14118:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14118:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14149:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14149:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14152:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14152:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14142:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14142:6:7"
																},
																"nativeSrc": "14142:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14142:15:7"
															},
															"nativeSrc": "14142:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14142:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13983:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13983:180:7"
											},
											{
												"body": {
													"nativeSrc": "14211:143:7",
													"nodeType": "YulBlock",
													"src": "14211:143:7",
													"statements": [
														{
															"nativeSrc": "14221:25:7",
															"nodeType": "YulAssignment",
															"src": "14221:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14244:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14244:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14226:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14226:17:7"
																},
																"nativeSrc": "14226:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14226:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14221:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14221:1:7"
																}
															]
														},
														{
															"nativeSrc": "14255:25:7",
															"nodeType": "YulAssignment",
															"src": "14255:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14278:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14278:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14260:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14260:17:7"
																},
																"nativeSrc": "14260:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14260:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14255:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14255:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14302:22:7",
																"nodeType": "YulBlock",
																"src": "14302:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14304:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14304:16:7"
																			},
																			"nativeSrc": "14304:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14304:18:7"
																		},
																		"nativeSrc": "14304:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14304:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14299:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14299:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14292:6:7"
																},
																"nativeSrc": "14292:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14292:9:7"
															},
															"nativeSrc": "14289:35:7",
															"nodeType": "YulIf",
															"src": "14289:35:7"
														},
														{
															"nativeSrc": "14334:14:7",
															"nodeType": "YulAssignment",
															"src": "14334:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14343:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14343:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14346:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14346:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14339:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14339:3:7"
																},
																"nativeSrc": "14339:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14339:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14334:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14334:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14169:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14200:1:7",
														"nodeType": "YulTypedName",
														"src": "14200:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14203:1:7",
														"nodeType": "YulTypedName",
														"src": "14203:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14209:1:7",
														"nodeType": "YulTypedName",
														"src": "14209:1:7",
														"type": ""
													}
												],
												"src": "14169:185:7"
											},
											{
												"body": {
													"nativeSrc": "14486:206:7",
													"nodeType": "YulBlock",
													"src": "14486:206:7",
													"statements": [
														{
															"nativeSrc": "14496:26:7",
															"nodeType": "YulAssignment",
															"src": "14496:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14508:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14508:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14519:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14519:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14504:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14504:3:7"
																},
																"nativeSrc": "14504:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14504:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14496:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14496:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14576:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14576:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14589:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14589:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14600:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14600:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14585:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14585:3:7"
																		},
																		"nativeSrc": "14585:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14585:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14532:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14532:43:7"
																},
																"nativeSrc": "14532:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14532:71:7"
															},
															"nativeSrc": "14532:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14532:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14657:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14657:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14670:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14670:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14681:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14681:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14666:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14666:3:7"
																		},
																		"nativeSrc": "14666:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14666:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14613:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14613:43:7"
																},
																"nativeSrc": "14613:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14613:72:7"
															},
															"nativeSrc": "14613:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14613:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14360:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14450:9:7",
														"nodeType": "YulTypedName",
														"src": "14450:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14462:6:7",
														"nodeType": "YulTypedName",
														"src": "14462:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14470:6:7",
														"nodeType": "YulTypedName",
														"src": "14470:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14481:4:7",
														"nodeType": "YulTypedName",
														"src": "14481:4:7",
														"type": ""
													}
												],
												"src": "14360:332:7"
											},
											{
												"body": {
													"nativeSrc": "14804:63:7",
													"nodeType": "YulBlock",
													"src": "14804:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14826:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14826:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14834:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14834:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14822:3:7"
																		},
																		"nativeSrc": "14822:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14822:14:7"
																	},
																	{
																		"hexValue": "6342544320617070726f7665206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14838:21:7",
																		"nodeType": "YulLiteral",
																		"src": "14838:21:7",
																		"type": "",
																		"value": "cBTC approve failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14815:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14815:6:7"
																},
																"nativeSrc": "14815:45:7",
																"nodeType": "YulFunctionCall",
																"src": "14815:45:7"
															},
															"nativeSrc": "14815:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "14815:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375",
												"nativeSrc": "14698:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14796:6:7",
														"nodeType": "YulTypedName",
														"src": "14796:6:7",
														"type": ""
													}
												],
												"src": "14698:169:7"
											},
											{
												"body": {
													"nativeSrc": "15019:220:7",
													"nodeType": "YulBlock",
													"src": "15019:220:7",
													"statements": [
														{
															"nativeSrc": "15029:74:7",
															"nodeType": "YulAssignment",
															"src": "15029:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15095:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15095:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15100:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15100:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15036:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15036:58:7"
																},
																"nativeSrc": "15036:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15036:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15029:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15029:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15201:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15201:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375",
																	"nativeSrc": "15112:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15112:88:7"
																},
																"nativeSrc": "15112:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15112:93:7"
															},
															"nativeSrc": "15112:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15112:93:7"
														},
														{
															"nativeSrc": "15214:19:7",
															"nodeType": "YulAssignment",
															"src": "15214:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15225:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15230:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15230:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15221:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15221:3:7"
																},
																"nativeSrc": "15221:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15221:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15214:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14873:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15007:3:7",
														"nodeType": "YulTypedName",
														"src": "15007:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15015:3:7",
														"nodeType": "YulTypedName",
														"src": "15015:3:7",
														"type": ""
													}
												],
												"src": "14873:366:7"
											},
											{
												"body": {
													"nativeSrc": "15416:248:7",
													"nodeType": "YulBlock",
													"src": "15416:248:7",
													"statements": [
														{
															"nativeSrc": "15426:26:7",
															"nodeType": "YulAssignment",
															"src": "15426:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15438:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15438:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15449:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15449:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15434:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15434:3:7"
																},
																"nativeSrc": "15434:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15434:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15426:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15426:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15473:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15473:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15484:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15484:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15469:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15469:3:7"
																		},
																		"nativeSrc": "15469:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15469:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15492:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15492:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15498:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15498:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15488:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15488:3:7"
																		},
																		"nativeSrc": "15488:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15488:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15462:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15462:6:7"
																},
																"nativeSrc": "15462:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15462:47:7"
															},
															"nativeSrc": "15462:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15462:47:7"
														},
														{
															"nativeSrc": "15518:139:7",
															"nodeType": "YulAssignment",
															"src": "15518:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15652:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15652:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15526:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15526:124:7"
																},
																"nativeSrc": "15526:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15526:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15518:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15518:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15245:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15396:9:7",
														"nodeType": "YulTypedName",
														"src": "15396:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15411:4:7",
														"nodeType": "YulTypedName",
														"src": "15411:4:7",
														"type": ""
													}
												],
												"src": "15245:419:7"
											},
											{
												"body": {
													"nativeSrc": "15796:206:7",
													"nodeType": "YulBlock",
													"src": "15796:206:7",
													"statements": [
														{
															"nativeSrc": "15806:26:7",
															"nodeType": "YulAssignment",
															"src": "15806:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15818:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15818:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15829:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15829:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15814:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15814:3:7"
																},
																"nativeSrc": "15814:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15814:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15806:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15806:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15886:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15886:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15899:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15899:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15910:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15910:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15895:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15895:3:7"
																		},
																		"nativeSrc": "15895:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15895:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15842:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15842:43:7"
																},
																"nativeSrc": "15842:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15842:71:7"
															},
															"nativeSrc": "15842:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15842:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15967:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15967:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15980:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15980:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15991:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15991:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15976:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15976:3:7"
																		},
																		"nativeSrc": "15976:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15976:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15923:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15923:43:7"
																},
																"nativeSrc": "15923:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15923:72:7"
															},
															"nativeSrc": "15923:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15923:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15670:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15760:9:7",
														"nodeType": "YulTypedName",
														"src": "15760:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15772:6:7",
														"nodeType": "YulTypedName",
														"src": "15772:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15780:6:7",
														"nodeType": "YulTypedName",
														"src": "15780:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15791:4:7",
														"nodeType": "YulTypedName",
														"src": "15791:4:7",
														"type": ""
													}
												],
												"src": "15670:332:7"
											},
											{
												"body": {
													"nativeSrc": "16114:66:7",
													"nodeType": "YulBlock",
													"src": "16114:66:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16136:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16136:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16144:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16144:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16132:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16132:3:7"
																		},
																		"nativeSrc": "16132:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16132:14:7"
																	},
																	{
																		"hexValue": "4e6f2062616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "16148:24:7",
																		"nodeType": "YulLiteral",
																		"src": "16148:24:7",
																		"type": "",
																		"value": "No balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16125:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16125:6:7"
																},
																"nativeSrc": "16125:48:7",
																"nodeType": "YulFunctionCall",
																"src": "16125:48:7"
															},
															"nativeSrc": "16125:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "16125:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5",
												"nativeSrc": "16008:172:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16106:6:7",
														"nodeType": "YulTypedName",
														"src": "16106:6:7",
														"type": ""
													}
												],
												"src": "16008:172:7"
											},
											{
												"body": {
													"nativeSrc": "16332:220:7",
													"nodeType": "YulBlock",
													"src": "16332:220:7",
													"statements": [
														{
															"nativeSrc": "16342:74:7",
															"nodeType": "YulAssignment",
															"src": "16342:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16408:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16408:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16413:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16413:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16349:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16349:58:7"
																},
																"nativeSrc": "16349:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16349:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16342:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16342:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16514:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16514:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5",
																	"nativeSrc": "16425:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16425:88:7"
																},
																"nativeSrc": "16425:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16425:93:7"
															},
															"nativeSrc": "16425:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16425:93:7"
														},
														{
															"nativeSrc": "16527:19:7",
															"nodeType": "YulAssignment",
															"src": "16527:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16538:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16538:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16543:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16543:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16534:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16534:3:7"
																},
																"nativeSrc": "16534:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16534:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16527:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16527:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16186:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16320:3:7",
														"nodeType": "YulTypedName",
														"src": "16320:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16328:3:7",
														"nodeType": "YulTypedName",
														"src": "16328:3:7",
														"type": ""
													}
												],
												"src": "16186:366:7"
											},
											{
												"body": {
													"nativeSrc": "16729:248:7",
													"nodeType": "YulBlock",
													"src": "16729:248:7",
													"statements": [
														{
															"nativeSrc": "16739:26:7",
															"nodeType": "YulAssignment",
															"src": "16739:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16751:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16751:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16762:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16762:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16747:3:7"
																},
																"nativeSrc": "16747:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16747:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16739:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16739:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16786:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16797:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16797:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16782:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16782:3:7"
																		},
																		"nativeSrc": "16782:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16782:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16805:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16805:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16811:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16811:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16801:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16801:3:7"
																		},
																		"nativeSrc": "16801:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16801:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16775:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16775:6:7"
																},
																"nativeSrc": "16775:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16775:47:7"
															},
															"nativeSrc": "16775:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16775:47:7"
														},
														{
															"nativeSrc": "16831:139:7",
															"nodeType": "YulAssignment",
															"src": "16831:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16965:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16965:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16839:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16839:124:7"
																},
																"nativeSrc": "16839:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16839:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16831:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16831:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16558:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16709:9:7",
														"nodeType": "YulTypedName",
														"src": "16709:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16724:4:7",
														"nodeType": "YulTypedName",
														"src": "16724:4:7",
														"type": ""
													}
												],
												"src": "16558:419:7"
											},
											{
												"body": {
													"nativeSrc": "17051:66:7",
													"nodeType": "YulBlock",
													"src": "17051:66:7",
													"statements": [
														{
															"nativeSrc": "17061:50:7",
															"nodeType": "YulAssignment",
															"src": "17061:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17105:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "17105:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "17074:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "17074:30:7"
																},
																"nativeSrc": "17074:37:7",
																"nodeType": "YulFunctionCall",
																"src": "17074:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17061:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "17061:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nativeSrc": "16983:134:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17031:5:7",
														"nodeType": "YulTypedName",
														"src": "17031:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17041:9:7",
														"nodeType": "YulTypedName",
														"src": "17041:9:7",
														"type": ""
													}
												],
												"src": "16983:134:7"
											},
											{
												"body": {
													"nativeSrc": "17196:74:7",
													"nodeType": "YulBlock",
													"src": "17196:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17213:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17213:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17257:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "17257:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nativeSrc": "17218:38:7",
																			"nodeType": "YulIdentifier",
																			"src": "17218:38:7"
																		},
																		"nativeSrc": "17218:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17218:45:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17206:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17206:6:7"
																},
																"nativeSrc": "17206:58:7",
																"nodeType": "YulFunctionCall",
																"src": "17206:58:7"
															},
															"nativeSrc": "17206:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "17206:58:7"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nativeSrc": "17123:147:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17184:5:7",
														"nodeType": "YulTypedName",
														"src": "17184:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17191:3:7",
														"nodeType": "YulTypedName",
														"src": "17191:3:7",
														"type": ""
													}
												],
												"src": "17123:147:7"
											},
											{
												"body": {
													"nativeSrc": "17410:214:7",
													"nodeType": "YulBlock",
													"src": "17410:214:7",
													"statements": [
														{
															"nativeSrc": "17420:26:7",
															"nodeType": "YulAssignment",
															"src": "17420:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17432:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17432:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17443:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17443:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17428:3:7"
																},
																"nativeSrc": "17428:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17428:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17420:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17508:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17508:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17521:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17521:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17532:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17532:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17517:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17517:3:7"
																		},
																		"nativeSrc": "17517:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17517:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "17456:51:7",
																	"nodeType": "YulIdentifier",
																	"src": "17456:51:7"
																},
																"nativeSrc": "17456:79:7",
																"nodeType": "YulFunctionCall",
																"src": "17456:79:7"
															},
															"nativeSrc": "17456:79:7",
															"nodeType": "YulExpressionStatement",
															"src": "17456:79:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17589:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17589:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17602:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17602:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17613:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17613:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17598:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17598:3:7"
																		},
																		"nativeSrc": "17598:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17598:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17545:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17545:43:7"
																},
																"nativeSrc": "17545:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17545:72:7"
															},
															"nativeSrc": "17545:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17545:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17276:348:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17374:9:7",
														"nodeType": "YulTypedName",
														"src": "17374:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17386:6:7",
														"nodeType": "YulTypedName",
														"src": "17386:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17394:6:7",
														"nodeType": "YulTypedName",
														"src": "17394:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17405:4:7",
														"nodeType": "YulTypedName",
														"src": "17405:4:7",
														"type": ""
													}
												],
												"src": "17276:348:7"
											},
											{
												"body": {
													"nativeSrc": "17764:214:7",
													"nodeType": "YulBlock",
													"src": "17764:214:7",
													"statements": [
														{
															"nativeSrc": "17774:26:7",
															"nodeType": "YulAssignment",
															"src": "17774:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17786:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17786:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17797:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17797:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17782:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17782:3:7"
																},
																"nativeSrc": "17782:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17782:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17774:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17774:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17854:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17854:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17867:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17867:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17878:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17878:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17863:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17863:3:7"
																		},
																		"nativeSrc": "17863:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17863:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17810:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17810:43:7"
																},
																"nativeSrc": "17810:71:7",
																"nodeType": "YulFunctionCall",
																"src": "17810:71:7"
															},
															"nativeSrc": "17810:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "17810:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17943:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17943:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17956:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17956:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17967:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17967:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17952:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17952:3:7"
																		},
																		"nativeSrc": "17952:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17952:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "17891:51:7",
																	"nodeType": "YulIdentifier",
																	"src": "17891:51:7"
																},
																"nativeSrc": "17891:80:7",
																"nodeType": "YulFunctionCall",
																"src": "17891:80:7"
															},
															"nativeSrc": "17891:80:7",
															"nodeType": "YulExpressionStatement",
															"src": "17891:80:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "17630:348:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17728:9:7",
														"nodeType": "YulTypedName",
														"src": "17728:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17740:6:7",
														"nodeType": "YulTypedName",
														"src": "17740:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17748:6:7",
														"nodeType": "YulTypedName",
														"src": "17748:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17759:4:7",
														"nodeType": "YulTypedName",
														"src": "17759:4:7",
														"type": ""
													}
												],
												"src": "17630:348:7"
											},
											{
												"body": {
													"nativeSrc": "18090:62:7",
													"nodeType": "YulBlock",
													"src": "18090:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18112:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18112:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18120:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18120:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18108:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18108:3:7"
																		},
																		"nativeSrc": "18108:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18108:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964206d65726368616e744964",
																		"kind": "string",
																		"nativeSrc": "18124:20:7",
																		"nodeType": "YulLiteral",
																		"src": "18124:20:7",
																		"type": "",
																		"value": "Invalid merchantId"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18101:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18101:6:7"
																},
																"nativeSrc": "18101:44:7",
																"nodeType": "YulFunctionCall",
																"src": "18101:44:7"
															},
															"nativeSrc": "18101:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "18101:44:7"
														}
													]
												},
												"name": "store_literal_in_memory_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428",
												"nativeSrc": "17984:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18082:6:7",
														"nodeType": "YulTypedName",
														"src": "18082:6:7",
														"type": ""
													}
												],
												"src": "17984:168:7"
											},
											{
												"body": {
													"nativeSrc": "18304:220:7",
													"nodeType": "YulBlock",
													"src": "18304:220:7",
													"statements": [
														{
															"nativeSrc": "18314:74:7",
															"nodeType": "YulAssignment",
															"src": "18314:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18380:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18380:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18385:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18385:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18321:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18321:58:7"
																},
																"nativeSrc": "18321:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18321:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18314:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18314:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18486:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428",
																	"nativeSrc": "18397:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18397:88:7"
																},
																"nativeSrc": "18397:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18397:93:7"
															},
															"nativeSrc": "18397:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18397:93:7"
														},
														{
															"nativeSrc": "18499:19:7",
															"nodeType": "YulAssignment",
															"src": "18499:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18510:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18510:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18515:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18515:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18506:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18506:3:7"
																},
																"nativeSrc": "18506:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18506:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18499:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18499:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18158:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18292:3:7",
														"nodeType": "YulTypedName",
														"src": "18292:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18300:3:7",
														"nodeType": "YulTypedName",
														"src": "18300:3:7",
														"type": ""
													}
												],
												"src": "18158:366:7"
											},
											{
												"body": {
													"nativeSrc": "18701:248:7",
													"nodeType": "YulBlock",
													"src": "18701:248:7",
													"statements": [
														{
															"nativeSrc": "18711:26:7",
															"nodeType": "YulAssignment",
															"src": "18711:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18723:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18723:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18734:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18734:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18719:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18719:3:7"
																},
																"nativeSrc": "18719:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18719:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18711:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18711:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18758:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18758:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18769:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18769:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18754:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18754:3:7"
																		},
																		"nativeSrc": "18754:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18754:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18777:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18777:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18783:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18783:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18773:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18773:3:7"
																		},
																		"nativeSrc": "18773:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18773:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18747:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18747:6:7"
																},
																"nativeSrc": "18747:47:7",
																"nodeType": "YulFunctionCall",
																"src": "18747:47:7"
															},
															"nativeSrc": "18747:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "18747:47:7"
														},
														{
															"nativeSrc": "18803:139:7",
															"nodeType": "YulAssignment",
															"src": "18803:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18937:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18937:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18811:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18811:124:7"
																},
																"nativeSrc": "18811:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18811:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18803:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18803:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18530:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18681:9:7",
														"nodeType": "YulTypedName",
														"src": "18681:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18696:4:7",
														"nodeType": "YulTypedName",
														"src": "18696:4:7",
														"type": ""
													}
												],
												"src": "18530:419:7"
											},
											{
												"body": {
													"nativeSrc": "19061:66:7",
													"nodeType": "YulBlock",
													"src": "19061:66:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19083:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19083:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19091:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19091:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19079:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19079:3:7"
																		},
																		"nativeSrc": "19079:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19079:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964207061796f75742061646472657373",
																		"kind": "string",
																		"nativeSrc": "19095:24:7",
																		"nodeType": "YulLiteral",
																		"src": "19095:24:7",
																		"type": "",
																		"value": "Invalid payout address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19072:6:7"
																},
																"nativeSrc": "19072:48:7",
																"nodeType": "YulFunctionCall",
																"src": "19072:48:7"
															},
															"nativeSrc": "19072:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "19072:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084",
												"nativeSrc": "18955:172:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19053:6:7",
														"nodeType": "YulTypedName",
														"src": "19053:6:7",
														"type": ""
													}
												],
												"src": "18955:172:7"
											},
											{
												"body": {
													"nativeSrc": "19279:220:7",
													"nodeType": "YulBlock",
													"src": "19279:220:7",
													"statements": [
														{
															"nativeSrc": "19289:74:7",
															"nodeType": "YulAssignment",
															"src": "19289:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19355:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19355:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19360:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19360:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19296:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "19296:58:7"
																},
																"nativeSrc": "19296:67:7",
																"nodeType": "YulFunctionCall",
																"src": "19296:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19289:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19289:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19461:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19461:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084",
																	"nativeSrc": "19372:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "19372:88:7"
																},
																"nativeSrc": "19372:93:7",
																"nodeType": "YulFunctionCall",
																"src": "19372:93:7"
															},
															"nativeSrc": "19372:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "19372:93:7"
														},
														{
															"nativeSrc": "19474:19:7",
															"nodeType": "YulAssignment",
															"src": "19474:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19485:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19485:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19490:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19490:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19481:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19481:3:7"
																},
																"nativeSrc": "19481:12:7",
																"nodeType": "YulFunctionCall",
																"src": "19481:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19474:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19133:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19267:3:7",
														"nodeType": "YulTypedName",
														"src": "19267:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19275:3:7",
														"nodeType": "YulTypedName",
														"src": "19275:3:7",
														"type": ""
													}
												],
												"src": "19133:366:7"
											},
											{
												"body": {
													"nativeSrc": "19676:248:7",
													"nodeType": "YulBlock",
													"src": "19676:248:7",
													"statements": [
														{
															"nativeSrc": "19686:26:7",
															"nodeType": "YulAssignment",
															"src": "19686:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19698:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19698:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19709:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19709:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19694:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19694:3:7"
																},
																"nativeSrc": "19694:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19694:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19686:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19686:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19733:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19733:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19744:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19744:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19729:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19729:3:7"
																		},
																		"nativeSrc": "19729:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19729:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19752:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19752:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19758:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19758:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19748:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19748:3:7"
																		},
																		"nativeSrc": "19748:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19748:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19722:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19722:6:7"
																},
																"nativeSrc": "19722:47:7",
																"nodeType": "YulFunctionCall",
																"src": "19722:47:7"
															},
															"nativeSrc": "19722:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "19722:47:7"
														},
														{
															"nativeSrc": "19778:139:7",
															"nodeType": "YulAssignment",
															"src": "19778:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19912:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19912:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19786:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "19786:124:7"
																},
																"nativeSrc": "19786:131:7",
																"nodeType": "YulFunctionCall",
																"src": "19786:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19778:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19778:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19505:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19656:9:7",
														"nodeType": "YulTypedName",
														"src": "19656:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19671:4:7",
														"nodeType": "YulTypedName",
														"src": "19671:4:7",
														"type": ""
													}
												],
												"src": "19505:419:7"
											},
											{
												"body": {
													"nativeSrc": "20036:71:7",
													"nodeType": "YulBlock",
													"src": "20036:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20058:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "20058:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20066:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20066:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20054:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20054:3:7"
																		},
																		"nativeSrc": "20054:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20054:14:7"
																	},
																	{
																		"hexValue": "4d65726368616e7420616c72656164792072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "20070:29:7",
																		"nodeType": "YulLiteral",
																		"src": "20070:29:7",
																		"type": "",
																		"value": "Merchant already registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20047:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20047:6:7"
																},
																"nativeSrc": "20047:53:7",
																"nodeType": "YulFunctionCall",
																"src": "20047:53:7"
															},
															"nativeSrc": "20047:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "20047:53:7"
														}
													]
												},
												"name": "store_literal_in_memory_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2",
												"nativeSrc": "19930:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20028:6:7",
														"nodeType": "YulTypedName",
														"src": "20028:6:7",
														"type": ""
													}
												],
												"src": "19930:177:7"
											},
											{
												"body": {
													"nativeSrc": "20259:220:7",
													"nodeType": "YulBlock",
													"src": "20259:220:7",
													"statements": [
														{
															"nativeSrc": "20269:74:7",
															"nodeType": "YulAssignment",
															"src": "20269:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20335:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20335:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20340:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20340:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20276:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "20276:58:7"
																},
																"nativeSrc": "20276:67:7",
																"nodeType": "YulFunctionCall",
																"src": "20276:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20269:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20269:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20441:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20441:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2",
																	"nativeSrc": "20352:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "20352:88:7"
																},
																"nativeSrc": "20352:93:7",
																"nodeType": "YulFunctionCall",
																"src": "20352:93:7"
															},
															"nativeSrc": "20352:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "20352:93:7"
														},
														{
															"nativeSrc": "20454:19:7",
															"nodeType": "YulAssignment",
															"src": "20454:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20465:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20465:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20470:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20470:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20461:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20461:3:7"
																},
																"nativeSrc": "20461:12:7",
																"nodeType": "YulFunctionCall",
																"src": "20461:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20454:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20454:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20113:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20247:3:7",
														"nodeType": "YulTypedName",
														"src": "20247:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20255:3:7",
														"nodeType": "YulTypedName",
														"src": "20255:3:7",
														"type": ""
													}
												],
												"src": "20113:366:7"
											},
											{
												"body": {
													"nativeSrc": "20656:248:7",
													"nodeType": "YulBlock",
													"src": "20656:248:7",
													"statements": [
														{
															"nativeSrc": "20666:26:7",
															"nodeType": "YulAssignment",
															"src": "20666:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20678:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20678:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20689:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20689:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20674:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20674:3:7"
																},
																"nativeSrc": "20674:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20674:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20666:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20666:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20713:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20713:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20724:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20724:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20709:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20709:3:7"
																		},
																		"nativeSrc": "20709:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20709:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20732:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "20732:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20738:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20738:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20728:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20728:3:7"
																		},
																		"nativeSrc": "20728:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20728:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20702:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20702:6:7"
																},
																"nativeSrc": "20702:47:7",
																"nodeType": "YulFunctionCall",
																"src": "20702:47:7"
															},
															"nativeSrc": "20702:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "20702:47:7"
														},
														{
															"nativeSrc": "20758:139:7",
															"nodeType": "YulAssignment",
															"src": "20758:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20892:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20892:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20766:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "20766:124:7"
																},
																"nativeSrc": "20766:131:7",
																"nodeType": "YulFunctionCall",
																"src": "20766:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20758:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20758:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20485:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20636:9:7",
														"nodeType": "YulTypedName",
														"src": "20636:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20651:4:7",
														"nodeType": "YulTypedName",
														"src": "20651:4:7",
														"type": ""
													}
												],
												"src": "20485:419:7"
											},
											{
												"body": {
													"nativeSrc": "21016:132:7",
													"nodeType": "YulBlock",
													"src": "21016:132:7",
													"statements": [
														{
															"nativeSrc": "21026:26:7",
															"nodeType": "YulAssignment",
															"src": "21026:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21038:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "21038:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21049:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21049:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21034:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21034:3:7"
																},
																"nativeSrc": "21034:18:7",
																"nodeType": "YulFunctionCall",
																"src": "21034:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21026:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21026:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21114:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "21114:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21127:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21127:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21138:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21138:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21123:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21123:3:7"
																		},
																		"nativeSrc": "21123:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21123:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "21062:51:7",
																	"nodeType": "YulIdentifier",
																	"src": "21062:51:7"
																},
																"nativeSrc": "21062:79:7",
																"nodeType": "YulFunctionCall",
																"src": "21062:79:7"
															},
															"nativeSrc": "21062:79:7",
															"nodeType": "YulExpressionStatement",
															"src": "21062:79:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
												"nativeSrc": "20910:238:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20988:9:7",
														"nodeType": "YulTypedName",
														"src": "20988:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21000:6:7",
														"nodeType": "YulTypedName",
														"src": "21000:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21011:4:7",
														"nodeType": "YulTypedName",
														"src": "21011:4:7",
														"type": ""
													}
												],
												"src": "20910:238:7"
											},
											{
												"body": {
													"nativeSrc": "21260:67:7",
													"nodeType": "YulBlock",
													"src": "21260:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21282:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "21282:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21290:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21290:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21278:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21278:3:7"
																		},
																		"nativeSrc": "21278:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21278:14:7"
																	},
																	{
																		"hexValue": "4d65726368616e74206e6f742072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "21294:25:7",
																		"nodeType": "YulLiteral",
																		"src": "21294:25:7",
																		"type": "",
																		"value": "Merchant not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21271:6:7"
																},
																"nativeSrc": "21271:49:7",
																"nodeType": "YulFunctionCall",
																"src": "21271:49:7"
															},
															"nativeSrc": "21271:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "21271:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551",
												"nativeSrc": "21154:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21252:6:7",
														"nodeType": "YulTypedName",
														"src": "21252:6:7",
														"type": ""
													}
												],
												"src": "21154:173:7"
											},
											{
												"body": {
													"nativeSrc": "21479:220:7",
													"nodeType": "YulBlock",
													"src": "21479:220:7",
													"statements": [
														{
															"nativeSrc": "21489:74:7",
															"nodeType": "YulAssignment",
															"src": "21489:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21555:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21555:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21560:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21560:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21496:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "21496:58:7"
																},
																"nativeSrc": "21496:67:7",
																"nodeType": "YulFunctionCall",
																"src": "21496:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21489:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21661:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21661:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551",
																	"nativeSrc": "21572:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "21572:88:7"
																},
																"nativeSrc": "21572:93:7",
																"nodeType": "YulFunctionCall",
																"src": "21572:93:7"
															},
															"nativeSrc": "21572:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "21572:93:7"
														},
														{
															"nativeSrc": "21674:19:7",
															"nodeType": "YulAssignment",
															"src": "21674:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21685:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21685:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21690:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21690:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21681:3:7"
																},
																"nativeSrc": "21681:12:7",
																"nodeType": "YulFunctionCall",
																"src": "21681:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21674:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21674:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21333:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21467:3:7",
														"nodeType": "YulTypedName",
														"src": "21467:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21475:3:7",
														"nodeType": "YulTypedName",
														"src": "21475:3:7",
														"type": ""
													}
												],
												"src": "21333:366:7"
											},
											{
												"body": {
													"nativeSrc": "21876:248:7",
													"nodeType": "YulBlock",
													"src": "21876:248:7",
													"statements": [
														{
															"nativeSrc": "21886:26:7",
															"nodeType": "YulAssignment",
															"src": "21886:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21898:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "21898:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21909:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21894:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21894:3:7"
																},
																"nativeSrc": "21894:18:7",
																"nodeType": "YulFunctionCall",
																"src": "21894:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21886:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21886:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21933:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21933:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21944:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21944:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21929:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21929:3:7"
																		},
																		"nativeSrc": "21929:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21929:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21952:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "21952:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21958:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21958:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21948:3:7"
																		},
																		"nativeSrc": "21948:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21948:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21922:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21922:6:7"
																},
																"nativeSrc": "21922:47:7",
																"nodeType": "YulFunctionCall",
																"src": "21922:47:7"
															},
															"nativeSrc": "21922:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "21922:47:7"
														},
														{
															"nativeSrc": "21978:139:7",
															"nodeType": "YulAssignment",
															"src": "21978:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22112:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "22112:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21986:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "21986:124:7"
																},
																"nativeSrc": "21986:131:7",
																"nodeType": "YulFunctionCall",
																"src": "21986:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21978:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21978:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21705:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21856:9:7",
														"nodeType": "YulTypedName",
														"src": "21856:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21871:4:7",
														"nodeType": "YulTypedName",
														"src": "21871:4:7",
														"type": ""
													}
												],
												"src": "21705:419:7"
											},
											{
												"body": {
													"nativeSrc": "22258:208:7",
													"nodeType": "YulBlock",
													"src": "22258:208:7",
													"statements": [
														{
															"nativeSrc": "22268:26:7",
															"nodeType": "YulAssignment",
															"src": "22268:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22280:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22280:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22291:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22291:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22276:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22276:3:7"
																},
																"nativeSrc": "22276:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22276:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22268:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22268:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22356:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22356:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22369:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22369:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22380:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22380:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22365:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22365:3:7"
																		},
																		"nativeSrc": "22365:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22365:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "22304:51:7",
																	"nodeType": "YulIdentifier",
																	"src": "22304:51:7"
																},
																"nativeSrc": "22304:79:7",
																"nodeType": "YulFunctionCall",
																"src": "22304:79:7"
															},
															"nativeSrc": "22304:79:7",
															"nodeType": "YulExpressionStatement",
															"src": "22304:79:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22431:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22431:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22444:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22444:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22455:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22455:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22440:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22440:3:7"
																		},
																		"nativeSrc": "22440:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22440:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "22393:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "22393:37:7"
																},
																"nativeSrc": "22393:66:7",
																"nodeType": "YulFunctionCall",
																"src": "22393:66:7"
															},
															"nativeSrc": "22393:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "22393:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_bool__to_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "22130:336:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22222:9:7",
														"nodeType": "YulTypedName",
														"src": "22222:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22234:6:7",
														"nodeType": "YulTypedName",
														"src": "22234:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22242:6:7",
														"nodeType": "YulTypedName",
														"src": "22242:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22253:4:7",
														"nodeType": "YulTypedName",
														"src": "22253:4:7",
														"type": ""
													}
												],
												"src": "22130:336:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ICBTC_$959_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ICBTC_$959_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICBTC_$959_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ICBTC_$959__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICBTC_$959_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_bool__to_t_address_payable_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function convert_t_contract$_IAggregatorOracle_$948_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IAggregatorOracle_$948_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IAggregatorOracle_$948_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IAggregatorOracle_$948__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IAggregatorOracle_$948_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IDexInterface_$956_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IDexInterface_$956_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDexInterface_$956_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IDexInterface_$956__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDexInterface_$956_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IStableCoin_$940_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IStableCoin_$940_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IStableCoin_$940_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IStableCoin_$940__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IStableCoin_$940_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address_payable(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address_payablet_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Merchant not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price\")\n\n    }\n\n    function abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375(memPtr) {\n\n        mstore(add(memPtr, 0), \"cBTC approve failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"No balance to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid merchantId\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid payout address\")\n\n    }\n\n    function abi_encode_t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Merchant already registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551(memPtr) {\n\n        mstore(add(memPtr, 0), \"Merchant not registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c8063715018a61161008a578063ad487f2311610064578063ad487f2314610225578063e5a5ef4f14610241578063f2fde38b1461025d578063ff0f7b7414610279576100e8565b8063715018a6146101df5780638da5cb5b146101e9578063992642e514610207576100e8565b8063245a7bfc116100c6578063245a7bfc1461016b5780634793f1d9146101895780635143fe12146101a5578063692058c2146101c1576100e8565b80630ae8c4dc146100ec578063194a7b8e1461010a578063200030221461013a575b5f80fd5b6100f4610295565b60405161010191906112bc565b60405180910390f35b610124600480360381019061011f919061130c565b6102ba565b604051610131919061134f565b60405180910390f35b610154600480360381019061014f919061130c565b6102cf565b6040516101629291906113a2565b60405180910390f35b61017361031a565b60405161018091906113e9565b60405180910390f35b6101a3600480360381019061019e919061142c565b61033f565b005b6101bf60048036038101906101ba919061142c565b610568565b005b6101c9610a39565b6040516101d6919061148a565b60405180910390f35b6101e7610a5e565b005b6101f1610a71565b6040516101fe91906114c3565b60405180910390f35b61020f610a98565b60405161021c91906114fc565b60405180910390f35b61023f600480360381019061023a919061130c565b610abd565b005b61025b6004803603810190610256919061153f565b610ce2565b005b610277600480360381019061027291906115a7565b610ede565b005b610293600480360381019061028e91906115fc565b610f62565b005b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f915090505481565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460ff16905082565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8481526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460ff16151515158152505090508060200151610410576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610407906116a6565b60405180910390fd5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161046e939291906116c4565b6020604051808303815f875af115801561048a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ae919061170d565b6104ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e490611782565b60405180910390fd5b8160025f8581526020019081526020015f205f82825461050d91906117cd565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16837f3b5907c9aaeaeef015f385111975b015225e1001bf659370e62c15e13373bc6d8460405161055b919061134f565b60405180910390a3505050565b5f60015f8481526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460ff16151515158152505090508060200151610639576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610630906116a6565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adfe34f760045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016106b591906114c3565b602060405180830381865afa1580156106d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f49190611814565b90505f8111610738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072f90611889565b60405180910390fd5b5f81670de0b6b3a76400008561074e91906118a7565b6107589190611915565b905060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107b8939291906116c4565b6020604051808303815f875af11580156107d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f8919061170d565b610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e90611782565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016108b4929190611945565b6020604051808303815f875af11580156108d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f4919061170d565b610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a906119b6565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633a96d08682866040518363ffffffff1660e01b815260040161098f9291906119d4565b5f604051808303815f87803b1580156109a6575f80fd5b505af11580156109b8573d5f803e3d5ffd5b505050508360025f8781526020019081526020015f205f8282546109dc91906117cd565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16857f3b5907c9aaeaeef015f385111975b015225e1001bf659370e62c15e13373bc6d86604051610a2a919061134f565b60405180910390a35050505050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a666110f3565b610a6f5f61117a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ac56110f3565b60015f8281526020019081526020015f205f0160149054906101000a900460ff16610b25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c906116a6565b60405180910390fd5b5f60025f8381526020019081526020015f205490505f8111610b7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7390611a45565b60405180910390fd5b5f60025f8481526020019081526020015f20819055505f60015f8481526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401610c24929190611a83565b6020604051808303815f875af1158015610c40573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c64919061170d565b610ca3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9a90611782565b60405180910390fd5b827f195f245622abeb539754a2a6a6deb95e6b222cbf894d10cbffbebac70340e5878383604051610cd5929190611aaa565b60405180910390a2505050565b610cea6110f3565b5f801b8203610d2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2590611b1b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9390611b83565b60405180910390fd5b60015f8381526020019081526020015f205f0160149054906101000a900460ff1615610dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df490611beb565b60405180910390fd5b60405180604001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060015f8481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff021916908315150217905550905050817f1108b573acb7954c6be9806cc3a17ed5864f50fa96ad4cbc9cd82fa63d42b9f782604051610ed29190611c09565b60405180910390a25050565b610ee66110f3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f56575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f4d91906114c3565b60405180910390fd5b610f5f8161117a565b50565b610f6a6110f3565b60015f8481526020019081526020015f205f0160149054906101000a900460ff16610fca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc190611c6c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102f90611b83565b60405180910390fd5b8160015f8581526020019081526020015f205f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f8581526020019081526020015f205f0160146101000a81548160ff021916908315150217905550827f7dac21e92520eaedc798f2261da9eecebda327db2d8dff77c1aab26798dc25e883836040516110e6929190611c8a565b60405180910390a2505050565b6110fb61123b565b73ffffffffffffffffffffffffffffffffffffffff16611119610a71565b73ffffffffffffffffffffffffffffffffffffffff16146111785761113c61123b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161116f91906114c3565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61128461127f61127a84611242565b611261565b611242565b9050919050565b5f6112958261126a565b9050919050565b5f6112a68261128b565b9050919050565b6112b68161129c565b82525050565b5f6020820190506112cf5f8301846112ad565b92915050565b5f80fd5b5f819050919050565b6112eb816112d9565b81146112f5575f80fd5b50565b5f81359050611306816112e2565b92915050565b5f60208284031215611321576113206112d5565b5b5f61132e848285016112f8565b91505092915050565b5f819050919050565b61134981611337565b82525050565b5f6020820190506113625f830184611340565b92915050565b5f61137282611242565b9050919050565b61138281611368565b82525050565b5f8115159050919050565b61139c81611388565b82525050565b5f6040820190506113b55f830185611379565b6113c26020830184611393565b9392505050565b5f6113d38261128b565b9050919050565b6113e3816113c9565b82525050565b5f6020820190506113fc5f8301846113da565b92915050565b61140b81611337565b8114611415575f80fd5b50565b5f8135905061142681611402565b92915050565b5f8060408385031215611442576114416112d5565b5b5f61144f858286016112f8565b925050602061146085828601611418565b9150509250929050565b5f6114748261128b565b9050919050565b6114848161146a565b82525050565b5f60208201905061149d5f83018461147b565b92915050565b5f6114ad82611242565b9050919050565b6114bd816114a3565b82525050565b5f6020820190506114d65f8301846114b4565b92915050565b5f6114e68261128b565b9050919050565b6114f6816114dc565b82525050565b5f60208201905061150f5f8301846114ed565b92915050565b61151e81611368565b8114611528575f80fd5b50565b5f8135905061153981611515565b92915050565b5f8060408385031215611555576115546112d5565b5b5f611562858286016112f8565b92505060206115738582860161152b565b9150509250929050565b611586816114a3565b8114611590575f80fd5b50565b5f813590506115a18161157d565b92915050565b5f602082840312156115bc576115bb6112d5565b5b5f6115c984828501611593565b91505092915050565b6115db81611388565b81146115e5575f80fd5b50565b5f813590506115f6816115d2565b92915050565b5f805f60608486031215611613576116126112d5565b5b5f611620868287016112f8565b93505060206116318682870161152b565b9250506040611642868287016115e8565b9150509250925092565b5f82825260208201905092915050565b7f4d65726368616e74206e6f7420616374697665000000000000000000000000005f82015250565b5f61169060138361164c565b915061169b8261165c565b602082019050919050565b5f6020820190508181035f8301526116bd81611684565b9050919050565b5f6060820190506116d75f8301866114b4565b6116e460208301856114b4565b6116f16040830184611340565b949350505050565b5f81519050611707816115d2565b92915050565b5f60208284031215611722576117216112d5565b5b5f61172f848285016116f9565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f61176c600f8361164c565b915061177782611738565b602082019050919050565b5f6020820190508181035f83015261179981611760565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117d782611337565b91506117e283611337565b92508282019050808211156117fa576117f96117a0565b5b92915050565b5f8151905061180e81611402565b92915050565b5f60208284031215611829576118286112d5565b5b5f61183684828501611800565b91505092915050565b7f496e76616c6964207072696365000000000000000000000000000000000000005f82015250565b5f611873600d8361164c565b915061187e8261183f565b602082019050919050565b5f6020820190508181035f8301526118a081611867565b9050919050565b5f6118b182611337565b91506118bc83611337565b92508282026118ca81611337565b915082820484148315176118e1576118e06117a0565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61191f82611337565b915061192a83611337565b92508261193a576119396118e8565b5b828204905092915050565b5f6040820190506119585f8301856114b4565b6119656020830184611340565b9392505050565b7f6342544320617070726f7665206661696c6564000000000000000000000000005f82015250565b5f6119a060138361164c565b91506119ab8261196c565b602082019050919050565b5f6020820190508181035f8301526119cd81611994565b9050919050565b5f6040820190506119e75f830185611340565b6119f46020830184611340565b9392505050565b7f4e6f2062616c616e636520746f207769746864726177000000000000000000005f82015250565b5f611a2f60168361164c565b9150611a3a826119fb565b602082019050919050565b5f6020820190508181035f830152611a5c81611a23565b9050919050565b5f611a6d8261128b565b9050919050565b611a7d81611a63565b82525050565b5f604082019050611a965f830185611a74565b611aa36020830184611340565b9392505050565b5f604082019050611abd5f830185611340565b611aca6020830184611a74565b9392505050565b7f496e76616c6964206d65726368616e74496400000000000000000000000000005f82015250565b5f611b0560128361164c565b9150611b1082611ad1565b602082019050919050565b5f6020820190508181035f830152611b3281611af9565b9050919050565b7f496e76616c6964207061796f75742061646472657373000000000000000000005f82015250565b5f611b6d60168361164c565b9150611b7882611b39565b602082019050919050565b5f6020820190508181035f830152611b9a81611b61565b9050919050565b7f4d65726368616e7420616c7265616479207265676973746572656400000000005f82015250565b5f611bd5601b8361164c565b9150611be082611ba1565b602082019050919050565b5f6020820190508181035f830152611c0281611bc9565b9050919050565b5f602082019050611c1c5f830184611a74565b92915050565b7f4d65726368616e74206e6f7420726567697374657265640000000000000000005f82015250565b5f611c5660178361164c565b9150611c6182611c22565b602082019050919050565b5f6020820190508181035f830152611c8381611c4a565b9050919050565b5f604082019050611c9d5f830185611a74565b611caa6020830184611393565b939250505056fea26469706673582212207df806cf04ca5ff70c12db778cacc67538042d5114accee73c828b0c7fa873b364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAD487F23 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD487F23 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xE5A5EF4F EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xFF0F7B74 EQ PUSH2 0x279 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x207 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x245A7BFC GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x245A7BFC EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x4793F1D9 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x5143FE12 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x692058C2 EQ PUSH2 0x1C1 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0xAE8C4DC EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x194A7B8E EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x20003022 EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP3 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH2 0xA5E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x130C JUMP JUMPDEST PUSH2 0xABD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0xF62 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x407 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x48A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E4 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x3B5907C9AAEAEEF015F385111975B015225E1001BF659370E62C15E13373BC6D DUP5 PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xADFE34F7 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B4 SWAP3 SWAP2 SWAP1 PUSH2 0x1945 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3A96D086 DUP3 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98F SWAP3 SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH1 0x2 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x3B5907C9AAEAEEF015F385111975B015225E1001BF659370E62C15E13373BC6D DUP7 PUSH1 0x40 MLOAD PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA66 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0xA6F PUSH0 PUSH2 0x117A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC24 SWAP3 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC40 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC64 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9A SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH32 0x195F245622ABEB539754A2A6A6DEB95E6B222CBF894D10CBFFBEBAC70340E587 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCD5 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xCEA PUSH2 0x10F3 JUMP JUMPDEST PUSH0 DUP1 SHL DUP3 SUB PUSH2 0xD2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD25 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD93 SWAP1 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH32 0x1108B573ACB7954C6BE9806CC3A17ED5864F50FA96AD4CBC9CD82FA63D42B9F7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xED2 SWAP2 SWAP1 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xEE6 PUSH2 0x10F3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF56 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5F DUP2 PUSH2 0x117A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF6A PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC1 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP1 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x7DAC21E92520EAEDC798F2261DA9EECEBDA327DB2D8DFF77C1AAB26798DC25E8 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10E6 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x10FB PUSH2 0x123B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1119 PUSH2 0xA71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1178 JUMPI PUSH2 0x113C PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116F SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1284 PUSH2 0x127F PUSH2 0x127A DUP5 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1295 DUP3 PUSH2 0x126A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12A6 DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B6 DUP2 PUSH2 0x129C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12CF PUSH0 DUP4 ADD DUP5 PUSH2 0x12AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12EB DUP2 PUSH2 0x12D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1306 DUP2 PUSH2 0x12E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1321 JUMPI PUSH2 0x1320 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x132E DUP5 DUP3 DUP6 ADD PUSH2 0x12F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1349 DUP2 PUSH2 0x1337 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1362 PUSH0 DUP4 ADD DUP5 PUSH2 0x1340 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1372 DUP3 PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1382 DUP2 PUSH2 0x1368 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x1388 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13B5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x13C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13D3 DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E3 DUP2 PUSH2 0x13C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13FC PUSH0 DUP4 ADD DUP5 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140B DUP2 PUSH2 0x1337 JUMP JUMPDEST DUP2 EQ PUSH2 0x1415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1426 DUP2 PUSH2 0x1402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1442 JUMPI PUSH2 0x1441 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144F DUP6 DUP3 DUP7 ADD PUSH2 0x12F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1460 DUP6 DUP3 DUP7 ADD PUSH2 0x1418 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1474 DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0x146A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x149D PUSH0 DUP4 ADD DUP5 PUSH2 0x147B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14AD DUP3 PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BD DUP2 PUSH2 0x14A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14E6 DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F6 DUP2 PUSH2 0x14DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x150F PUSH0 DUP4 ADD DUP5 PUSH2 0x14ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x151E DUP2 PUSH2 0x1368 JUMP JUMPDEST DUP2 EQ PUSH2 0x1528 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1539 DUP2 PUSH2 0x1515 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1555 JUMPI PUSH2 0x1554 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1562 DUP6 DUP3 DUP7 ADD PUSH2 0x12F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1573 DUP6 DUP3 DUP7 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1586 DUP2 PUSH2 0x14A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1590 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15A1 DUP2 PUSH2 0x157D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BC JUMPI PUSH2 0x15BB PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15C9 DUP5 DUP3 DUP6 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DB DUP2 PUSH2 0x1388 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F6 DUP2 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1613 JUMPI PUSH2 0x1612 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1620 DUP7 DUP3 DUP8 ADD PUSH2 0x12F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1631 DUP7 DUP3 DUP8 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1642 DUP7 DUP3 DUP8 ADD PUSH2 0x15E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D65726368616E74206E6F742061637469766500000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1690 PUSH1 0x13 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x169B DUP3 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16BD DUP2 PUSH2 0x1684 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16D7 PUSH0 DUP4 ADD DUP7 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x16E4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x16F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1340 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1707 DUP2 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1722 JUMPI PUSH2 0x1721 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172F DUP5 DUP3 DUP6 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x176C PUSH1 0xF DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1777 DUP3 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1799 DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17D7 DUP3 PUSH2 0x1337 JUMP JUMPDEST SWAP2 POP PUSH2 0x17E2 DUP4 PUSH2 0x1337 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x180E DUP2 PUSH2 0x1402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1829 JUMPI PUSH2 0x1828 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1836 DUP5 DUP3 DUP6 ADD PUSH2 0x1800 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1873 PUSH1 0xD DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x187E DUP3 PUSH2 0x183F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A0 DUP2 PUSH2 0x1867 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18B1 DUP3 PUSH2 0x1337 JUMP JUMPDEST SWAP2 POP PUSH2 0x18BC DUP4 PUSH2 0x1337 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18CA DUP2 PUSH2 0x1337 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18E1 JUMPI PUSH2 0x18E0 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x191F DUP3 PUSH2 0x1337 JUMP JUMPDEST SWAP2 POP PUSH2 0x192A DUP4 PUSH2 0x1337 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x193A JUMPI PUSH2 0x1939 PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1958 PUSH0 DUP4 ADD DUP6 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x1965 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1340 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6342544320617070726F7665206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19A0 PUSH1 0x13 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x19AB DUP3 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19CD DUP2 PUSH2 0x1994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19E7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x19F4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1340 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F2062616C616E636520746F20776974686472617700000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2F PUSH1 0x16 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3A DUP3 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A5C DUP2 PUSH2 0x1A23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6D DUP3 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7D DUP2 PUSH2 0x1A63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A96 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x1AA3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1340 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1ABD PUSH0 DUP4 ADD DUP6 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x1ACA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A74 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D65726368616E7449640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B05 PUSH1 0x12 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B10 DUP3 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B32 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207061796F7574206164647265737300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6D PUSH1 0x16 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B78 DUP3 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B9A DUP2 PUSH2 0x1B61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D65726368616E7420616C726561647920726567697374657265640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD5 PUSH1 0x1B DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE0 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C02 DUP2 PUSH2 0x1BC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1C PUSH0 DUP4 ADD DUP5 PUSH2 0x1A74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D65726368616E74206E6F742072656769737465726564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C56 PUSH1 0x17 DUP4 PUSH2 0x164C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C61 DUP3 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C83 DUP2 PUSH2 0x1C4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C9D PUSH0 DUP4 ADD DUP6 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x1CAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xF806CF04CA5FF70C12DB778CACC67538042D5114ACCEE73C828B0C7FA873 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "600:6196:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;793:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;742:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;909:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3787:382;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5478:1316;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;950:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;851:29:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4435:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2454:496;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3141:434:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;886:17;;;;;;;;;;;;;:::o;793:51::-;;;;;;;;;;;;;;;;;:::o;742:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;909:35::-;;;;;;;;;;;;;:::o;3787:382::-;3863:17;3883:9;:21;3893:10;3883:21;;;;;;;;;;;3863:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3922:1;:8;;;3914:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;3973:10;;;;;;;;;;;:23;;;3997:10;4017:4;4024:6;3973:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3965:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;4093:6;4061:16;:28;4078:10;4061:28;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;4143:10;4115:47;;4131:10;4115:47;4155:6;4115:47;;;;;;:::i;:::-;;;;;;;;3853:316;3787:382;;:::o;5478:1316::-;5570:17;5590:9;:21;5600:10;5590:21;;;;;;;;;;;5570:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5629:1;:8;;;5621:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;5738:23;5764:10;;;;;;;;;;;:25;;;5798:4;;;;;;;;;;;5764:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5738:66;;5840:1;5822:15;:19;5814:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;5994:18;6043:15;6035:4;6016:16;:23;;;;:::i;:::-;6015:43;;;;:::i;:::-;5994:64;;6112:4;;;;;;;;;;;:17;;;6130:10;6150:4;6157:10;6112:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6104:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;6244:4;;;;;;;;;;;:12;;;6265:3;;;;;;;;;;;6271:10;6244:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6236:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6521:3;;;;;;;;;;;:19;;;6541:10;6553:16;6521:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6698:16;6666;:28;6683:10;6666:28;;;;;;;;;;;;:48;;;;;;;:::i;:::-;;;;;;;;6758:10;6730:57;;6746:10;6730:57;6770:16;6730:57;;;;;;:::i;:::-;;;;;;;;5560:1234;;;5478:1316;;:::o;950:24::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;851:29:6:-;;;;;;;;;;;;;:::o;4435:508::-;1531:13:0;:11;:13::i;:::-;4523:9:6::1;:21;4533:10;4523:21;;;;;;;;;;;:28;;;;;;;;;;;;4515:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4585:15;4603:16;:28;4620:10;4603:28;;;;;;;;;;;;4585:46;;4659:1;4649:7;:11;4641:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;4729:1;4698:16;:28;4715:10;4698:28;;;;;;;;;;;:32;;;;4740:22;4765:9;:21;4775:10;4765:21;;;;;;;;;;;:35;;;;;;;;;;;;4740:60;;4819:10;;;;;;;;;;;:19;;;4839:6;4847:7;4819:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4811:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;4908:10;4890:46;4920:7;4929:6;4890:46;;;;;;;:::i;:::-;;;;;;;;4505:438;;4435:508:::0;:::o;2454:496::-;1531:13:0;:11;:13::i;:::-;2582:3:6::1;2568:17:::0;::::1;:10;:17:::0;2560:48:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2651:1;2626:27;;:13;:27;;::::0;2618:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2699:9;:21;2709:10;2699:21;;;;;;;;;;;:28;;;;;;;;;;;;2698:29;2690:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2794:88;;;;;;;;2832:13;2794:88;;;;;;2867:4;2794:88;;;;::::0;2770:9:::1;:21;2780:10;2770:21;;;;;;;;;;;:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2917:10;2898:45;2929:13;2898:45;;;;;;:::i;:::-;;;;;;;;2454:496:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3141:434:6:-;1531:13:0;:11;:13::i;:::-;3266:9:6::1;:21;3276:10;3266:21;;;;;;;;;;;:28;;;;;;;;;;;;3258:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3365:1;3340:27;;:13;:27;;::::0;3332:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3443:13;3405:9;:21;3415:10;3405:21;;;;;;;;;;;:35;;;:51;;;;;;;;;;;;;;;;;;3497:6;3466:9;:21;3476:10;3466:21;;;;;;;;;;;:28;;;:37;;;;;;;;;;;;;;;;;;3534:10;3518:50;3546:13;3561:6;3518:50;;;;;;;:::i;:::-;;;;;;;;3141:434:::0;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:139::-;548:9;581:37;612:5;581:37;:::i;:::-;568:50;;485:139;;;:::o;630:157::-;730:50;774:5;730:50;:::i;:::-;725:3;718:63;630:157;;:::o;793:248::-;899:4;937:2;926:9;922:18;914:26;;950:84;1031:1;1020:9;1016:17;1007:6;950:84;:::i;:::-;793:248;;;;:::o;1128:117::-;1237:1;1234;1227:12;1374:77;1411:7;1440:5;1429:16;;1374:77;;;:::o;1457:122::-;1530:24;1548:5;1530:24;:::i;:::-;1523:5;1520:35;1510:63;;1569:1;1566;1559:12;1510:63;1457:122;:::o;1585:139::-;1631:5;1669:6;1656:20;1647:29;;1685:33;1712:5;1685:33;:::i;:::-;1585:139;;;;:::o;1730:329::-;1789:6;1838:2;1826:9;1817:7;1813:23;1809:32;1806:119;;;1844:79;;:::i;:::-;1806:119;1964:1;1989:53;2034:7;2025:6;2014:9;2010:22;1989:53;:::i;:::-;1979:63;;1935:117;1730:329;;;;:::o;2065:77::-;2102:7;2131:5;2120:16;;2065:77;;;:::o;2148:118::-;2235:24;2253:5;2235:24;:::i;:::-;2230:3;2223:37;2148:118;;:::o;2272:222::-;2365:4;2403:2;2392:9;2388:18;2380:26;;2416:71;2484:1;2473:9;2469:17;2460:6;2416:71;:::i;:::-;2272:222;;;;:::o;2500:104::-;2545:7;2574:24;2592:5;2574:24;:::i;:::-;2563:35;;2500:104;;;:::o;2610:142::-;2713:32;2739:5;2713:32;:::i;:::-;2708:3;2701:45;2610:142;;:::o;2758:90::-;2792:7;2835:5;2828:13;2821:21;2810:32;;2758:90;;;:::o;2854:109::-;2935:21;2950:5;2935:21;:::i;:::-;2930:3;2923:34;2854:109;;:::o;2969:352::-;3100:4;3138:2;3127:9;3123:18;3115:26;;3151:87;3235:1;3224:9;3220:17;3211:6;3151:87;:::i;:::-;3248:66;3310:2;3299:9;3295:18;3286:6;3248:66;:::i;:::-;2969:352;;;;;:::o;3327:151::-;3402:9;3435:37;3466:5;3435:37;:::i;:::-;3422:50;;3327:151;;;:::o;3484:181::-;3596:62;3652:5;3596:62;:::i;:::-;3591:3;3584:75;3484:181;;:::o;3671:272::-;3789:4;3827:2;3816:9;3812:18;3804:26;;3840:96;3933:1;3922:9;3918:17;3909:6;3840:96;:::i;:::-;3671:272;;;;:::o;3949:122::-;4022:24;4040:5;4022:24;:::i;:::-;4015:5;4012:35;4002:63;;4061:1;4058;4051:12;4002:63;3949:122;:::o;4077:139::-;4123:5;4161:6;4148:20;4139:29;;4177:33;4204:5;4177:33;:::i;:::-;4077:139;;;;:::o;4222:474::-;4290:6;4298;4347:2;4335:9;4326:7;4322:23;4318:32;4315:119;;;4353:79;;:::i;:::-;4315:119;4473:1;4498:53;4543:7;4534:6;4523:9;4519:22;4498:53;:::i;:::-;4488:63;;4444:117;4600:2;4626:53;4671:7;4662:6;4651:9;4647:22;4626:53;:::i;:::-;4616:63;;4571:118;4222:474;;;;;:::o;4702:147::-;4773:9;4806:37;4837:5;4806:37;:::i;:::-;4793:50;;4702:147;;;:::o;4855:173::-;4963:58;5015:5;4963:58;:::i;:::-;4958:3;4951:71;4855:173;;:::o;5034:264::-;5148:4;5186:2;5175:9;5171:18;5163:26;;5199:92;5288:1;5277:9;5273:17;5264:6;5199:92;:::i;:::-;5034:264;;;;:::o;5304:96::-;5341:7;5370:24;5388:5;5370:24;:::i;:::-;5359:35;;5304:96;;;:::o;5406:118::-;5493:24;5511:5;5493:24;:::i;:::-;5488:3;5481:37;5406:118;;:::o;5530:222::-;5623:4;5661:2;5650:9;5646:18;5638:26;;5674:71;5742:1;5731:9;5727:17;5718:6;5674:71;:::i;:::-;5530:222;;;;:::o;5758:145::-;5827:9;5860:37;5891:5;5860:37;:::i;:::-;5847:50;;5758:145;;;:::o;5909:169::-;6015:56;6065:5;6015:56;:::i;:::-;6010:3;6003:69;5909:169;;:::o;6084:260::-;6196:4;6234:2;6223:9;6219:18;6211:26;;6247:90;6334:1;6323:9;6319:17;6310:6;6247:90;:::i;:::-;6084:260;;;;:::o;6350:138::-;6431:32;6457:5;6431:32;:::i;:::-;6424:5;6421:43;6411:71;;6478:1;6475;6468:12;6411:71;6350:138;:::o;6494:155::-;6548:5;6586:6;6573:20;6564:29;;6602:41;6637:5;6602:41;:::i;:::-;6494:155;;;;:::o;6655:490::-;6731:6;6739;6788:2;6776:9;6767:7;6763:23;6759:32;6756:119;;;6794:79;;:::i;:::-;6756:119;6914:1;6939:53;6984:7;6975:6;6964:9;6960:22;6939:53;:::i;:::-;6929:63;;6885:117;7041:2;7067:61;7120:7;7111:6;7100:9;7096:22;7067:61;:::i;:::-;7057:71;;7012:126;6655:490;;;;;:::o;7151:122::-;7224:24;7242:5;7224:24;:::i;:::-;7217:5;7214:35;7204:63;;7263:1;7260;7253:12;7204:63;7151:122;:::o;7279:139::-;7325:5;7363:6;7350:20;7341:29;;7379:33;7406:5;7379:33;:::i;:::-;7279:139;;;;:::o;7424:329::-;7483:6;7532:2;7520:9;7511:7;7507:23;7503:32;7500:119;;;7538:79;;:::i;:::-;7500:119;7658:1;7683:53;7728:7;7719:6;7708:9;7704:22;7683:53;:::i;:::-;7673:63;;7629:117;7424:329;;;;:::o;7759:116::-;7829:21;7844:5;7829:21;:::i;:::-;7822:5;7819:32;7809:60;;7865:1;7862;7855:12;7809:60;7759:116;:::o;7881:133::-;7924:5;7962:6;7949:20;7940:29;;7978:30;8002:5;7978:30;:::i;:::-;7881:133;;;;:::o;8020:629::-;8102:6;8110;8118;8167:2;8155:9;8146:7;8142:23;8138:32;8135:119;;;8173:79;;:::i;:::-;8135:119;8293:1;8318:53;8363:7;8354:6;8343:9;8339:22;8318:53;:::i;:::-;8308:63;;8264:117;8420:2;8446:61;8499:7;8490:6;8479:9;8475:22;8446:61;:::i;:::-;8436:71;;8391:126;8556:2;8582:50;8624:7;8615:6;8604:9;8600:22;8582:50;:::i;:::-;8572:60;;8527:115;8020:629;;;;;:::o;8655:169::-;8739:11;8773:6;8768:3;8761:19;8813:4;8808:3;8804:14;8789:29;;8655:169;;;;:::o;8830:::-;8970:21;8966:1;8958:6;8954:14;8947:45;8830:169;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:442::-;9951:4;9989:2;9978:9;9974:18;9966:26;;10002:71;10070:1;10059:9;10055:17;10046:6;10002:71;:::i;:::-;10083:72;10151:2;10140:9;10136:18;10127:6;10083:72;:::i;:::-;10165;10233:2;10222:9;10218:18;10209:6;10165:72;:::i;:::-;9802:442;;;;;;:::o;10250:137::-;10304:5;10335:6;10329:13;10320:22;;10351:30;10375:5;10351:30;:::i;:::-;10250:137;;;;:::o;10393:345::-;10460:6;10509:2;10497:9;10488:7;10484:23;10480:32;10477:119;;;10515:79;;:::i;:::-;10477:119;10635:1;10660:61;10713:7;10704:6;10693:9;10689:22;10660:61;:::i;:::-;10650:71;;10606:125;10393:345;;;;:::o;10744:165::-;10884:17;10880:1;10872:6;10868:14;10861:41;10744:165;:::o;10915:366::-;11057:3;11078:67;11142:2;11137:3;11078:67;:::i;:::-;11071:74;;11154:93;11243:3;11154:93;:::i;:::-;11272:2;11267:3;11263:12;11256:19;;10915:366;;;:::o;11287:419::-;11453:4;11491:2;11480:9;11476:18;11468:26;;11540:9;11534:4;11530:20;11526:1;11515:9;11511:17;11504:47;11568:131;11694:4;11568:131;:::i;:::-;11560:139;;11287:419;;;:::o;11712:180::-;11760:77;11757:1;11750:88;11857:4;11854:1;11847:15;11881:4;11878:1;11871:15;11898:191;11938:3;11957:20;11975:1;11957:20;:::i;:::-;11952:25;;11991:20;12009:1;11991:20;:::i;:::-;11986:25;;12034:1;12031;12027:9;12020:16;;12055:3;12052:1;12049:10;12046:36;;;12062:18;;:::i;:::-;12046:36;11898:191;;;;:::o;12095:143::-;12152:5;12183:6;12177:13;12168:22;;12199:33;12226:5;12199:33;:::i;:::-;12095:143;;;;:::o;12244:351::-;12314:6;12363:2;12351:9;12342:7;12338:23;12334:32;12331:119;;;12369:79;;:::i;:::-;12331:119;12489:1;12514:64;12570:7;12561:6;12550:9;12546:22;12514:64;:::i;:::-;12504:74;;12460:128;12244:351;;;;:::o;12601:163::-;12741:15;12737:1;12729:6;12725:14;12718:39;12601:163;:::o;12770:366::-;12912:3;12933:67;12997:2;12992:3;12933:67;:::i;:::-;12926:74;;13009:93;13098:3;13009:93;:::i;:::-;13127:2;13122:3;13118:12;13111:19;;12770:366;;;:::o;13142:419::-;13308:4;13346:2;13335:9;13331:18;13323:26;;13395:9;13389:4;13385:20;13381:1;13370:9;13366:17;13359:47;13423:131;13549:4;13423:131;:::i;:::-;13415:139;;13142:419;;;:::o;13567:410::-;13607:7;13630:20;13648:1;13630:20;:::i;:::-;13625:25;;13664:20;13682:1;13664:20;:::i;:::-;13659:25;;13719:1;13716;13712:9;13741:30;13759:11;13741:30;:::i;:::-;13730:41;;13920:1;13911:7;13907:15;13904:1;13901:22;13881:1;13874:9;13854:83;13831:139;;13950:18;;:::i;:::-;13831:139;13615:362;13567:410;;;;:::o;13983:180::-;14031:77;14028:1;14021:88;14128:4;14125:1;14118:15;14152:4;14149:1;14142:15;14169:185;14209:1;14226:20;14244:1;14226:20;:::i;:::-;14221:25;;14260:20;14278:1;14260:20;:::i;:::-;14255:25;;14299:1;14289:35;;14304:18;;:::i;:::-;14289:35;14346:1;14343;14339:9;14334:14;;14169:185;;;;:::o;14360:332::-;14481:4;14519:2;14508:9;14504:18;14496:26;;14532:71;14600:1;14589:9;14585:17;14576:6;14532:71;:::i;:::-;14613:72;14681:2;14670:9;14666:18;14657:6;14613:72;:::i;:::-;14360:332;;;;;:::o;14698:169::-;14838:21;14834:1;14826:6;14822:14;14815:45;14698:169;:::o;14873:366::-;15015:3;15036:67;15100:2;15095:3;15036:67;:::i;:::-;15029:74;;15112:93;15201:3;15112:93;:::i;:::-;15230:2;15225:3;15221:12;15214:19;;14873:366;;;:::o;15245:419::-;15411:4;15449:2;15438:9;15434:18;15426:26;;15498:9;15492:4;15488:20;15484:1;15473:9;15469:17;15462:47;15526:131;15652:4;15526:131;:::i;:::-;15518:139;;15245:419;;;:::o;15670:332::-;15791:4;15829:2;15818:9;15814:18;15806:26;;15842:71;15910:1;15899:9;15895:17;15886:6;15842:71;:::i;:::-;15923:72;15991:2;15980:9;15976:18;15967:6;15923:72;:::i;:::-;15670:332;;;;;:::o;16008:172::-;16148:24;16144:1;16136:6;16132:14;16125:48;16008:172;:::o;16186:366::-;16328:3;16349:67;16413:2;16408:3;16349:67;:::i;:::-;16342:74;;16425:93;16514:3;16425:93;:::i;:::-;16543:2;16538:3;16534:12;16527:19;;16186:366;;;:::o;16558:419::-;16724:4;16762:2;16751:9;16747:18;16739:26;;16811:9;16805:4;16801:20;16797:1;16786:9;16782:17;16775:47;16839:131;16965:4;16839:131;:::i;:::-;16831:139;;16558:419;;;:::o;16983:134::-;17041:9;17074:37;17105:5;17074:37;:::i;:::-;17061:50;;16983:134;;;:::o;17123:147::-;17218:45;17257:5;17218:45;:::i;:::-;17213:3;17206:58;17123:147;;:::o;17276:348::-;17405:4;17443:2;17432:9;17428:18;17420:26;;17456:79;17532:1;17521:9;17517:17;17508:6;17456:79;:::i;:::-;17545:72;17613:2;17602:9;17598:18;17589:6;17545:72;:::i;:::-;17276:348;;;;;:::o;17630:::-;17759:4;17797:2;17786:9;17782:18;17774:26;;17810:71;17878:1;17867:9;17863:17;17854:6;17810:71;:::i;:::-;17891:80;17967:2;17956:9;17952:18;17943:6;17891:80;:::i;:::-;17630:348;;;;;:::o;17984:168::-;18124:20;18120:1;18112:6;18108:14;18101:44;17984:168;:::o;18158:366::-;18300:3;18321:67;18385:2;18380:3;18321:67;:::i;:::-;18314:74;;18397:93;18486:3;18397:93;:::i;:::-;18515:2;18510:3;18506:12;18499:19;;18158:366;;;:::o;18530:419::-;18696:4;18734:2;18723:9;18719:18;18711:26;;18783:9;18777:4;18773:20;18769:1;18758:9;18754:17;18747:47;18811:131;18937:4;18811:131;:::i;:::-;18803:139;;18530:419;;;:::o;18955:172::-;19095:24;19091:1;19083:6;19079:14;19072:48;18955:172;:::o;19133:366::-;19275:3;19296:67;19360:2;19355:3;19296:67;:::i;:::-;19289:74;;19372:93;19461:3;19372:93;:::i;:::-;19490:2;19485:3;19481:12;19474:19;;19133:366;;;:::o;19505:419::-;19671:4;19709:2;19698:9;19694:18;19686:26;;19758:9;19752:4;19748:20;19744:1;19733:9;19729:17;19722:47;19786:131;19912:4;19786:131;:::i;:::-;19778:139;;19505:419;;;:::o;19930:177::-;20070:29;20066:1;20058:6;20054:14;20047:53;19930:177;:::o;20113:366::-;20255:3;20276:67;20340:2;20335:3;20276:67;:::i;:::-;20269:74;;20352:93;20441:3;20352:93;:::i;:::-;20470:2;20465:3;20461:12;20454:19;;20113:366;;;:::o;20485:419::-;20651:4;20689:2;20678:9;20674:18;20666:26;;20738:9;20732:4;20728:20;20724:1;20713:9;20709:17;20702:47;20766:131;20892:4;20766:131;:::i;:::-;20758:139;;20485:419;;;:::o;20910:238::-;21011:4;21049:2;21038:9;21034:18;21026:26;;21062:79;21138:1;21127:9;21123:17;21114:6;21062:79;:::i;:::-;20910:238;;;;:::o;21154:173::-;21294:25;21290:1;21282:6;21278:14;21271:49;21154:173;:::o;21333:366::-;21475:3;21496:67;21560:2;21555:3;21496:67;:::i;:::-;21489:74;;21572:93;21661:3;21572:93;:::i;:::-;21690:2;21685:3;21681:12;21674:19;;21333:366;;;:::o;21705:419::-;21871:4;21909:2;21898:9;21894:18;21886:26;;21958:9;21952:4;21948:20;21944:1;21933:9;21929:17;21922:47;21986:131;22112:4;21986:131;:::i;:::-;21978:139;;21705:419;;;:::o;22130:336::-;22253:4;22291:2;22280:9;22276:18;22268:26;;22304:79;22380:1;22369:9;22365:17;22356:6;22304:79;:::i;:::-;22393:66;22455:2;22444:9;22440:18;22431:6;22393:66;:::i;:::-;22130:336;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1479800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"aggregator()": "infinite",
								"cBTC()": "infinite",
								"dex()": "infinite",
								"merchantBalances(bytes32)": "2800",
								"merchants(bytes32)": "5220",
								"owner()": "2560",
								"payMerchant(bytes32,uint256)": "infinite",
								"payMerchantInCBTC(bytes32,uint256)": "infinite",
								"registerMerchant(bytes32,address)": "infinite",
								"renounceOwnership()": "infinite",
								"stableCoin()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateMerchant(bytes32,address,bool)": "infinite",
								"withdrawMerchantFunds(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 600,
									"end": 6796,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1663,
									"end": 2226,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 635,
									"end": 645,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1802,
									"end": 1827,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1802,
									"end": 1827,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1813,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1827,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1802,
									"end": 1827,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1827,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1794,
									"end": 1858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1794,
									"end": 1858,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1894,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1876,
									"end": 1895,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1876,
									"end": 1895,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1876,
									"end": 1881,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1876,
									"end": 1895,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1876,
									"end": 1895,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1876,
									"end": 1895,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1868,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1868,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1961,
									"end": 1962,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1938,
									"end": 1963,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1938,
									"end": 1963,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1949,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1963,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1938,
									"end": 1963,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1963,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1930,
									"end": 1994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1930,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2028,
									"end": 2029,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2012,
									"end": 2016,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2004,
									"end": 2054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2004,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2090,
									"end": 2101,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2075,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2065,
									"end": 2075,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2130,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2116,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2112,
									"end": 2116,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2131,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2172,
									"end": 2183,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2151,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2141,
									"end": 2151,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2184,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2214,
									"end": 2218,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2197,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2194,
									"end": 2197,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 2226,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 942,
									"end": 948,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 950,
									"end": 956,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 958,
									"end": 964,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1015,
									"end": 1018,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1003,
									"end": 1012,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1001,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 990,
									"end": 1013,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1022,
									"end": 1101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1143,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1223,
									"end": 1230,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1214,
									"end": 1220,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1203,
									"end": 1212,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1221,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1167,
									"end": 1231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1231,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1231,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1241,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1280,
									"end": 1282,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1306,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1501,
									"end": 1508,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1492,
									"end": 1498,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1481,
									"end": 1490,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1499,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1445,
									"end": 1509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1519,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1560,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1640,
									"end": 1647,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1631,
									"end": 1637,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1620,
									"end": 1629,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1616,
									"end": 1638,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1584,
									"end": 1648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1648,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1648,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1665,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1789,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1671,
									"end": 1789,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1776,
									"end": 1781,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1758,
									"end": 1782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1782,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1758,
									"end": 1782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1753,
									"end": 1756,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1783,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 1892,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1928,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1915,
									"end": 1924,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1911,
									"end": 1929,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 1929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 1929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2007,
									"end": 2008,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1996,
									"end": 2005,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2009,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1983,
									"end": 1989,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1939,
									"end": 2010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2010,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1939,
									"end": 2010,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 2017,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2141,
									"end": 2147,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2136,
									"end": 2139,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2129,
									"end": 2148,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2181,
									"end": 2185,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2176,
									"end": 2179,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2172,
									"end": 2186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2157,
									"end": 2186,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2157,
									"end": 2186,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2023,
									"end": 2192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2374,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2198,
									"end": 2374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2338,
									"end": 2366,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C696420737461626C65636F696E2061646472657373000000000000"
								},
								{
									"begin": 2334,
									"end": 2335,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2326,
									"end": 2332,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2322,
									"end": 2336,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2315,
									"end": 2367,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2374,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2374,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2746,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2380,
									"end": 2746,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2522,
									"end": 2525,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2543,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2607,
									"end": 2609,
									"name": "PUSH",
									"source": 7,
									"value": "1A"
								},
								{
									"begin": 2602,
									"end": 2605,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2543,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2543,
									"end": 2610,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2543,
									"end": 2610,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2543,
									"end": 2610,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2536,
									"end": 2610,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2536,
									"end": 2610,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2619,
									"end": 2712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2708,
									"end": 2711,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2619,
									"end": 2712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2619,
									"end": 2712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2619,
									"end": 2712,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2619,
									"end": 2712,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2737,
									"end": 2739,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2732,
									"end": 2735,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2728,
									"end": 2740,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2721,
									"end": 2740,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2721,
									"end": 2740,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2746,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2746,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2746,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2918,
									"end": 2922,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2956,
									"end": 2958,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2945,
									"end": 2954,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2941,
									"end": 2959,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2933,
									"end": 2959,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2933,
									"end": 2959,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3005,
									"end": 3014,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2999,
									"end": 3003,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2995,
									"end": 3015,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2991,
									"end": 2992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2980,
									"end": 2989,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2976,
									"end": 2993,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2969,
									"end": 3016,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3164,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3159,
									"end": 3163,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3164,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 3033,
									"end": 3164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3164,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3033,
									"end": 3164,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3025,
									"end": 3164,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3025,
									"end": 3164,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3177,
									"end": 3347,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 3177,
									"end": 3347,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3317,
									"end": 3339,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C696420634254432061646472657373000000000000000000000000"
								},
								{
									"begin": 3313,
									"end": 3314,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3305,
									"end": 3311,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3301,
									"end": 3315,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3294,
									"end": 3340,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3177,
									"end": 3347,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3177,
									"end": 3347,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3353,
									"end": 3719,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 3353,
									"end": 3719,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3495,
									"end": 3498,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3516,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3580,
									"end": 3582,
									"name": "PUSH",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 3575,
									"end": 3578,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3516,
									"end": 3583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3583,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3516,
									"end": 3583,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3583,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3583,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3681,
									"end": 3684,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 3592,
									"end": 3685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3685,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3592,
									"end": 3685,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3710,
									"end": 3712,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3705,
									"end": 3708,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3713,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3694,
									"end": 3713,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3694,
									"end": 3713,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3353,
									"end": 3719,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3353,
									"end": 3719,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3353,
									"end": 3719,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3353,
									"end": 3719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3725,
									"end": 4144,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 3725,
									"end": 4144,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3891,
									"end": 3895,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3929,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3918,
									"end": 3927,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3914,
									"end": 3932,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 3932,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 3932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 3987,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 3976,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3968,
									"end": 3988,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3964,
									"end": 3965,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3953,
									"end": 3962,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3949,
									"end": 3966,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3942,
									"end": 3989,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4006,
									"end": 4137,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4132,
									"end": 4136,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4006,
									"end": 4137,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 4006,
									"end": 4137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4006,
									"end": 4137,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4006,
									"end": 4137,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4137,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4137,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3725,
									"end": 4144,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3725,
									"end": 4144,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3725,
									"end": 4144,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3725,
									"end": 4144,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4150,
									"end": 4326,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4150,
									"end": 4326,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4290,
									"end": 4318,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C69642061676772656761746F722061646472657373000000000000"
								},
								{
									"begin": 4286,
									"end": 4287,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4278,
									"end": 4284,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4274,
									"end": 4288,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4267,
									"end": 4319,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4150,
									"end": 4326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4150,
									"end": 4326,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4332,
									"end": 4698,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4332,
									"end": 4698,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4474,
									"end": 4477,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4495,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4559,
									"end": 4561,
									"name": "PUSH",
									"source": 7,
									"value": "1A"
								},
								{
									"begin": 4554,
									"end": 4557,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4495,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 4495,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4495,
									"end": 4562,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4495,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4488,
									"end": 4562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4488,
									"end": 4562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4571,
									"end": 4664,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4660,
									"end": 4663,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4571,
									"end": 4664,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4571,
									"end": 4664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4571,
									"end": 4664,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4571,
									"end": 4664,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4689,
									"end": 4691,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4684,
									"end": 4687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4680,
									"end": 4692,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4673,
									"end": 4692,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4673,
									"end": 4692,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4332,
									"end": 4698,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4332,
									"end": 4698,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4332,
									"end": 4698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4332,
									"end": 4698,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4704,
									"end": 5123,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 4704,
									"end": 5123,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4870,
									"end": 4874,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4908,
									"end": 4910,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4897,
									"end": 4906,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4893,
									"end": 4911,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4885,
									"end": 4911,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4885,
									"end": 4911,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4957,
									"end": 4966,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4951,
									"end": 4955,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4947,
									"end": 4967,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4943,
									"end": 4944,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4932,
									"end": 4941,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4928,
									"end": 4945,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 4968,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4985,
									"end": 5116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4985,
									"end": 5116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4985,
									"end": 5116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4985,
									"end": 5116,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4985,
									"end": 5116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4977,
									"end": 5116,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4977,
									"end": 5116,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4704,
									"end": 5123,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4704,
									"end": 5123,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4704,
									"end": 5123,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4704,
									"end": 5123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5129,
									"end": 5298,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 5129,
									"end": 5298,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5269,
									"end": 5290,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C696420444558206164647265737300000000000000000000000000"
								},
								{
									"begin": 5265,
									"end": 5266,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5257,
									"end": 5263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5253,
									"end": 5267,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5246,
									"end": 5291,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5129,
									"end": 5298,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5129,
									"end": 5298,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5304,
									"end": 5670,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 5304,
									"end": 5670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5446,
									"end": 5449,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5467,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 5531,
									"end": 5533,
									"name": "PUSH",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 5526,
									"end": 5529,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5467,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5534,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 5467,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5460,
									"end": 5534,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5460,
									"end": 5534,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5543,
									"end": 5636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 5632,
									"end": 5635,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5543,
									"end": 5636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 5543,
									"end": 5636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5543,
									"end": 5636,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 5543,
									"end": 5636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5661,
									"end": 5663,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5656,
									"end": 5659,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5652,
									"end": 5664,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5645,
									"end": 5664,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5645,
									"end": 5664,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5304,
									"end": 5670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5304,
									"end": 5670,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5304,
									"end": 5670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5304,
									"end": 5670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5676,
									"end": 6095,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5676,
									"end": 6095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5842,
									"end": 5846,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5880,
									"end": 5882,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5869,
									"end": 5878,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5865,
									"end": 5883,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5857,
									"end": 5883,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5857,
									"end": 5883,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5929,
									"end": 5938,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5923,
									"end": 5927,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5919,
									"end": 5939,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 5916,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5904,
									"end": 5913,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5893,
									"end": 5940,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5957,
									"end": 6088,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 6083,
									"end": 6087,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5957,
									"end": 6088,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 5957,
									"end": 6088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5957,
									"end": 6088,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 5957,
									"end": 6088,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5949,
									"end": 6088,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5949,
									"end": 6088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5676,
									"end": 6095,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5676,
									"end": 6095,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5676,
									"end": 6095,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5676,
									"end": 6095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 6796,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207df806cf04ca5ff70c12db778cacc67538042d5114accee73c828b0c7fa873b364736f6c634300081a0033",
									".code": [
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "AD487F23"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "AD487F23"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "E5A5EF4F"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "FF0F7B74"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "992642E5"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "245A7BFC"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "245A7BFC"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "4793F1D9"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "5143FE12"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "692058C2"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "AE8C4DC"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "194A7B8E"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "20003022"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 6796,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 886,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 886,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 793,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 793,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 793,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 742,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 742,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 742,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 909,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 909,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3787,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3787,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5478,
											"end": 6794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5478,
											"end": 6794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 950,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 950,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 851,
											"end": 880,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 851,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 851,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4435,
											"end": 4943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4435,
											"end": 4943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2454,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2454,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3141,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3141,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 903,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 886,
											"end": 903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 793,
											"end": 844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 742,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 909,
											"end": 944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3892,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3903,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3914,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 3997,
											"end": 4007,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4017,
											"end": 4021,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4024,
											"end": 4030,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3973,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3973,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3973,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3965,
											"end": 4051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3965,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4078,
											"end": 4088,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4061,
											"end": 4099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4153,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4131,
											"end": 4141,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "PUSH",
											"source": 6,
											"value": "3B5907C9AAEAEEF015F385111975B015225E1001BF659370E62C15E13373BC6D"
										},
										{
											"begin": 4155,
											"end": 4161,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4115,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4162,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 4169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5611,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5629,
											"end": 5630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5629,
											"end": 5637,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5629,
											"end": 5637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5629,
											"end": 5637,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5621,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5621,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5789,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5764,
											"end": 5789,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5789,
											"name": "PUSH",
											"source": 6,
											"value": "ADFE34F7"
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5764,
											"end": 5804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 5764,
											"end": 5804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 5764,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5840,
											"end": 5841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 5841,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 5814,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 6039,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6016,
											"end": 6032,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 6016,
											"end": 6039,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6039,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6016,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6039,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 6016,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 6015,
											"end": 6058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6015,
											"end": 6058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6058,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 6015,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6129,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6112,
											"end": 6129,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6129,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 6130,
											"end": 6140,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6154,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6167,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6112,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6112,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6112,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6104,
											"end": 6188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6104,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6244,
											"end": 6256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6256,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6268,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 6281,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6244,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6244,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6244,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6236,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6236,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6540,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6521,
											"end": 6540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6540,
											"name": "PUSH",
											"source": 6,
											"value": "3A96D086"
										},
										{
											"begin": 6541,
											"end": 6551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6569,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6521,
											"end": 6570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6714,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6682,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6693,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 6666,
											"end": 6714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6768,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6756,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "PUSH",
											"source": 6,
											"value": "3B5907C9AAEAEEF015F385111975B015225E1001BF659370E62C15E13373BC6D"
										},
										{
											"begin": 6770,
											"end": 6786,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6730,
											"end": 6787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6787,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 6794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 6794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 6794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 6794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 950,
											"end": 974,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 950,
											"end": 974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 851,
											"end": 880,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4523,
											"end": 4532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4543,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4544,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4523,
											"end": 4551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4515,
											"end": 4575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4515,
											"end": 4575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4603,
											"end": 4619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4630,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4631,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4649,
											"end": 4660,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4641,
											"end": 4687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4641,
											"end": 4687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4726,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4730,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4765,
											"end": 4774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4785,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4765,
											"end": 4786,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4765,
											"end": 4800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4819,
											"end": 4838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4839,
											"end": 4845,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4819,
											"end": 4855,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4819,
											"end": 4855,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4819,
											"end": 4855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4811,
											"end": 4875,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4811,
											"end": 4875,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4918,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "195F245622ABEB539754A2A6A6DEB95E6B222CBF894D10CBFFBEBAC70340E587"
										},
										{
											"begin": 4920,
											"end": 4927,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 4935,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4890,
											"end": 4936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4936,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4505,
											"end": 4943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4505,
											"end": 4943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2585,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2578,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2585,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2560,
											"end": 2608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2560,
											"end": 2608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2639,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2653,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2618,
											"end": 2680,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2618,
											"end": 2680,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2720,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2699,
											"end": 2727,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2727,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2690,
											"end": 2759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2690,
											"end": 2759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2790,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2791,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2882,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2927,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1108B573ACB7954C6BE9806CC3A17ED5864F50FA96AD4CBC9CD82FA63D42B9F7"
										},
										{
											"begin": 2929,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2898,
											"end": 2943,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2943,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3286,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3287,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3266,
											"end": 3294,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3258,
											"end": 3322,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3258,
											"end": 3322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3340,
											"end": 3367,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3353,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3340,
											"end": 3367,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3367,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3332,
											"end": 3394,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3332,
											"end": 3394,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3426,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3440,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3486,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3487,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3494,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7DAC21E92520EAEDC798F2261DA9EECEBDA327DB2D8DFF77C1AAB26798DC25E8"
										},
										{
											"begin": 3546,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3518,
											"end": 3568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 485,
											"end": 624,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 485,
											"end": 624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 548,
											"end": 557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 612,
											"end": 617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 581,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 581,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 581,
											"end": 618,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 581,
											"end": 618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 568,
											"end": 618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 485,
											"end": 624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 485,
											"end": 624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 485,
											"end": 624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 485,
											"end": 624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 630,
											"end": 787,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 630,
											"end": 787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 730,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 774,
											"end": 779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 730,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 730,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 730,
											"end": 780,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 730,
											"end": 780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 725,
											"end": 728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 718,
											"end": 781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 630,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 630,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 630,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 899,
											"end": 903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 922,
											"end": 940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 914,
											"end": 940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 914,
											"end": 940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1029,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 950,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1128,
											"end": 1245,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1128,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1451,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1374,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1451,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1451,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1579,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1457,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1530,
											"end": 1554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1554,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1530,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1555,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1510,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1510,
											"end": 1573,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1571,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1510,
											"end": 1573,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1510,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1631,
											"end": 1636,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1712,
											"end": 1717,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1685,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1718,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1685,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1840,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1824,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1841,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1806,
											"end": 1925,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1806,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1806,
											"end": 1925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1844,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1844,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1923,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1844,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1806,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1806,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1964,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2034,
											"end": 2041,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2031,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2023,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1989,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 2042,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1989,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1979,
											"end": 2042,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1979,
											"end": 2042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 2059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 2059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2142,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2065,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2266,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2148,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2253,
											"end": 2258,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2235,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2235,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2223,
											"end": 2260,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2416,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2272,
											"end": 2494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2272,
											"end": 2494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2604,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2500,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2592,
											"end": 2597,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2574,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2574,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2752,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2610,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2713,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2745,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2713,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2746,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2848,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2758,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2821,
											"end": 2842,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2848,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2963,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2854,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2935,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2956,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2935,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 2957,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3321,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2969,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3100,
											"end": 3104,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3235,
											"end": 3236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3211,
											"end": 3217,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3151,
											"end": 3238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3238,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3151,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3248,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3310,
											"end": 3312,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3299,
											"end": 3308,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3292,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3248,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3248,
											"end": 3314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3248,
											"end": 3314,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3248,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3321,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3321,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3478,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3327,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3435,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3435,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3435,
											"end": 3472,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3435,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3484,
											"end": 3665,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3484,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3596,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3658,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3596,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3591,
											"end": 3594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3584,
											"end": 3659,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3484,
											"end": 3665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3484,
											"end": 3665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3484,
											"end": 3665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3943,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3671,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3816,
											"end": 3825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3830,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3915,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3840,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3936,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3840,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3943,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3943,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 4071,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3949,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 4040,
											"end": 4045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4022,
											"end": 4046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4047,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 4002,
											"end": 4065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4051,
											"end": 4063,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4065,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 4002,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 4071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 4071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4216,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4077,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4123,
											"end": 4128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4167,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4168,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4168,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4177,
											"end": 4210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4210,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 4177,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4216,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4216,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4696,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4222,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4344,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4333,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4345,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4350,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4315,
											"end": 4434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4353,
											"end": 4432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4434,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4315,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4543,
											"end": 4550,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4498,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4498,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4498,
											"end": 4551,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4498,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4551,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4626,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4671,
											"end": 4678,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4662,
											"end": 4668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4660,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4647,
											"end": 4669,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4626,
											"end": 4679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4679,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4626,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 4679,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 4679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4571,
											"end": 4689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4696,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4696,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4702,
											"end": 4849,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4702,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4806,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4843,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4806,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4702,
											"end": 4849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4702,
											"end": 4849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4702,
											"end": 4849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4702,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5028,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4855,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5015,
											"end": 5020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4963,
											"end": 5021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 5021,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4963,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4958,
											"end": 4961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5022,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5298,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5034,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5175,
											"end": 5184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 5288,
											"end": 5289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5273,
											"end": 5290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5199,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5291,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 5199,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5298,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5400,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5304,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5388,
											"end": 5393,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 5370,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5524,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5406,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5493,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5511,
											"end": 5516,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5493,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5493,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5493,
											"end": 5517,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5493,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5491,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5481,
											"end": 5518,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 5530,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5650,
											"end": 5659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 5742,
											"end": 5743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5740,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5727,
											"end": 5744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5724,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5674,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5745,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 5674,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5752,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5903,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5758,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5860,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5860,
											"end": 5897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5897,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 5860,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5903,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5903,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 6078,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5909,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 6065,
											"end": 6070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6015,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6071,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 6015,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6072,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 6078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 6078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 6078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6344,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 6084,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6196,
											"end": 6200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6223,
											"end": 6232,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6211,
											"end": 6237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6323,
											"end": 6332,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6310,
											"end": 6316,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 6247,
											"end": 6337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6337,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6247,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6344,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6350,
											"end": 6488,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 6350,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 6457,
											"end": 6462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6431,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6463,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 6431,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6429,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6464,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6411,
											"end": 6482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6478,
											"end": 6479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6476,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6480,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6482,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6411,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6350,
											"end": 6488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6350,
											"end": 6488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6649,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 6494,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6548,
											"end": 6553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6593,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 6637,
											"end": 6642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 6602,
											"end": 6643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 6602,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6649,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 7145,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 6655,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6737,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6745,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6790,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6776,
											"end": 6785,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6774,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6763,
											"end": 6786,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6791,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6875,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6756,
											"end": 6875,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6794,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 6794,
											"end": 6873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6873,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6794,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6875,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6756,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 6915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6984,
											"end": 6991,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6964,
											"end": 6973,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6960,
											"end": 6982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 6939,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6992,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6939,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6929,
											"end": 6992,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6929,
											"end": 6992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6885,
											"end": 7002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7041,
											"end": 7043,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7067,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7120,
											"end": 7127,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7100,
											"end": 7109,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7096,
											"end": 7118,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7067,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 7067,
											"end": 7128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7067,
											"end": 7128,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7067,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7012,
											"end": 7138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 7145,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 7145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 7145,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 7145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 7145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 7145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7273,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 7151,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 7224,
											"end": 7248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7248,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7224,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7249,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7204,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7204,
											"end": 7267,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7265,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7204,
											"end": 7267,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7204,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7418,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 7279,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7350,
											"end": 7370,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 7406,
											"end": 7411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 7379,
											"end": 7412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7412,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 7379,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7418,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7418,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7753,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 7424,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7534,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7520,
											"end": 7529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7511,
											"end": 7518,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7507,
											"end": 7530,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7500,
											"end": 7619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7500,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 7500,
											"end": 7619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7538,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 7538,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7538,
											"end": 7617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7538,
											"end": 7617,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 7538,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7500,
											"end": 7619,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 7500,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7658,
											"end": 7659,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7728,
											"end": 7735,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7725,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7717,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7704,
											"end": 7726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 7683,
											"end": 7736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7736,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7683,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7753,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7875,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 7759,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7844,
											"end": 7849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7829,
											"end": 7850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7850,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7829,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 7827,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7819,
											"end": 7851,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7809,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7809,
											"end": 7869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7865,
											"end": 7866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7862,
											"end": 7863,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7855,
											"end": 7867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7809,
											"end": 7869,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7809,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8014,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 7881,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7929,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7940,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7940,
											"end": 7969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7978,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8002,
											"end": 8007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7978,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 7978,
											"end": 8008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7978,
											"end": 8008,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 7978,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8014,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8649,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 8020,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8102,
											"end": 8108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8110,
											"end": 8116,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8167,
											"end": 8169,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8155,
											"end": 8164,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8146,
											"end": 8153,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8165,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8170,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8254,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8135,
											"end": 8254,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8173,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 8173,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8252,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8173,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8254,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8135,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8293,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8318,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 8363,
											"end": 8370,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8354,
											"end": 8360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8352,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8339,
											"end": 8361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 8318,
											"end": 8371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8371,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 8318,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8371,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8420,
											"end": 8422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8446,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 8499,
											"end": 8506,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8488,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8475,
											"end": 8497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8446,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 8446,
											"end": 8507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8446,
											"end": 8507,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 8446,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8507,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8391,
											"end": 8517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8556,
											"end": 8558,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8582,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8624,
											"end": 8631,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8621,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 8613,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 8582,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8632,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8582,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8527,
											"end": 8642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8649,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8649,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8649,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8824,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 8655,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8739,
											"end": 8750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8768,
											"end": 8771,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8761,
											"end": 8780,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8808,
											"end": 8811,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8804,
											"end": 8818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8789,
											"end": 8818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8789,
											"end": 8818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8824,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8824,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8830,
											"end": 8999,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8830,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8970,
											"end": 8991,
											"name": "PUSH",
											"source": 7,
											"value": "4D65726368616E74206E6F742061637469766500000000000000000000000000"
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8958,
											"end": 8964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 8968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 8992,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8830,
											"end": 8999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8830,
											"end": 8999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9147,
											"end": 9150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9232,
											"end": 9234,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 9227,
											"end": 9230,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 9168,
											"end": 9235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9161,
											"end": 9235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9161,
											"end": 9235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 9333,
											"end": 9336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 9244,
											"end": 9337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9362,
											"end": 9364,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9357,
											"end": 9360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9353,
											"end": 9365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9005,
											"end": 9371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9583,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9630,
											"end": 9639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9620,
											"end": 9640,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9614,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9601,
											"end": 9618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 9641,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 9784,
											"end": 9788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 9658,
											"end": 9789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9802,
											"end": 10244,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9802,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9951,
											"end": 9955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9989,
											"end": 9991,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9978,
											"end": 9987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9966,
											"end": 9992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9966,
											"end": 9992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10002,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 10070,
											"end": 10071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10068,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10055,
											"end": 10072,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10046,
											"end": 10052,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10002,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 10002,
											"end": 10073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10002,
											"end": 10073,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 10002,
											"end": 10073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10083,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 10151,
											"end": 10153,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10140,
											"end": 10149,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10136,
											"end": 10154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10127,
											"end": 10133,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10083,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 10083,
											"end": 10155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10083,
											"end": 10155,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 10083,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10165,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 10233,
											"end": 10235,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10222,
											"end": 10231,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10218,
											"end": 10236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10215,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10165,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 10165,
											"end": 10237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10165,
											"end": 10237,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 10165,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9802,
											"end": 10244,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9802,
											"end": 10244,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9802,
											"end": 10244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9802,
											"end": 10244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9802,
											"end": 10244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9802,
											"end": 10244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9802,
											"end": 10244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10387,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 10250,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10304,
											"end": 10309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10335,
											"end": 10341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10329,
											"end": 10342,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10351,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 10375,
											"end": 10380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10351,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 10351,
											"end": 10381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10351,
											"end": 10381,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 10351,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10387,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10738,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10393,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10497,
											"end": 10506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10488,
											"end": 10495,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10484,
											"end": 10507,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10480,
											"end": 10512,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10596,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 10477,
											"end": 10596,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10515,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 10515,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 10515,
											"end": 10594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10515,
											"end": 10594,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 10515,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10596,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 10477,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10635,
											"end": 10636,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10660,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10702,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10689,
											"end": 10711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10660,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 10660,
											"end": 10721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10660,
											"end": 10721,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 10660,
											"end": 10721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10650,
											"end": 10721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10650,
											"end": 10721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10606,
											"end": 10731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10738,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10909,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10744,
											"end": 10909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10884,
											"end": 10901,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 10880,
											"end": 10881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10872,
											"end": 10878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10868,
											"end": 10882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10861,
											"end": 10902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10915,
											"end": 11281,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 10915,
											"end": 11281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11057,
											"end": 11060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11078,
											"end": 11145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 11142,
											"end": 11144,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 11137,
											"end": 11140,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11078,
											"end": 11145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 11078,
											"end": 11145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11078,
											"end": 11145,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 11078,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11071,
											"end": 11145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11071,
											"end": 11145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11154,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11154,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 11154,
											"end": 11247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11154,
											"end": 11247,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 11154,
											"end": 11247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11272,
											"end": 11274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11267,
											"end": 11270,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11263,
											"end": 11275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10915,
											"end": 11281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10915,
											"end": 11281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10915,
											"end": 11281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10915,
											"end": 11281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11287,
											"end": 11706,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 11287,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11491,
											"end": 11493,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11468,
											"end": 11494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11468,
											"end": 11494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11540,
											"end": 11549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11534,
											"end": 11538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11530,
											"end": 11550,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11526,
											"end": 11527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11515,
											"end": 11524,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11511,
											"end": 11528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11504,
											"end": 11551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11568,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 11694,
											"end": 11698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11568,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 11568,
											"end": 11699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11568,
											"end": 11699,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 11568,
											"end": 11699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11560,
											"end": 11699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11560,
											"end": 11699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11287,
											"end": 11706,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11287,
											"end": 11706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11287,
											"end": 11706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11287,
											"end": 11706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11712,
											"end": 11892,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 11712,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11760,
											"end": 11837,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11757,
											"end": 11758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11750,
											"end": 11838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11857,
											"end": 11861,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11854,
											"end": 11855,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11847,
											"end": 11862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11881,
											"end": 11885,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11878,
											"end": 11879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11886,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12089,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 11898,
											"end": 12089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11957,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 11975,
											"end": 11976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11957,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 11957,
											"end": 11977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11957,
											"end": 11977,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 11957,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 11977,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 11977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11991,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 12009,
											"end": 12010,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11991,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 11991,
											"end": 12011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11991,
											"end": 12011,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11991,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11986,
											"end": 12011,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11986,
											"end": 12011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12034,
											"end": 12035,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12031,
											"end": 12032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12020,
											"end": 12036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12020,
											"end": 12036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12055,
											"end": 12058,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12052,
											"end": 12053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12049,
											"end": 12059,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 12062,
											"end": 12080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12089,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12089,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12095,
											"end": 12238,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 12095,
											"end": 12238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12152,
											"end": 12157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12183,
											"end": 12189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12177,
											"end": 12190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12168,
											"end": 12190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12168,
											"end": 12190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12199,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 12226,
											"end": 12231,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12199,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 12199,
											"end": 12232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12199,
											"end": 12232,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 12199,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12095,
											"end": 12238,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12095,
											"end": 12238,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12095,
											"end": 12238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12095,
											"end": 12238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12095,
											"end": 12238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12595,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 12244,
											"end": 12595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12314,
											"end": 12320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12363,
											"end": 12365,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12351,
											"end": 12360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12342,
											"end": 12349,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12338,
											"end": 12361,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12334,
											"end": 12366,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12331,
											"end": 12450,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12331,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 12331,
											"end": 12450,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12369,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 12369,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 12369,
											"end": 12448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12369,
											"end": 12448,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 12369,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12331,
											"end": 12450,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 12331,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12489,
											"end": 12490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12514,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 12570,
											"end": 12577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12561,
											"end": 12567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12550,
											"end": 12559,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12546,
											"end": 12568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12514,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 12514,
											"end": 12578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12514,
											"end": 12578,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 12514,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12578,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12460,
											"end": 12588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12595,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12601,
											"end": 12764,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 12601,
											"end": 12764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12741,
											"end": 12756,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420707269636500000000000000000000000000000000000000"
										},
										{
											"begin": 12737,
											"end": 12738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12729,
											"end": 12735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12725,
											"end": 12739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12718,
											"end": 12757,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12601,
											"end": 12764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12601,
											"end": 12764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12770,
											"end": 13136,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 12770,
											"end": 13136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12912,
											"end": 12915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12933,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 12997,
											"end": 12999,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 12992,
											"end": 12995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12933,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 12933,
											"end": 13000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12933,
											"end": 13000,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 12933,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12926,
											"end": 13000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12926,
											"end": 13000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13009,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 13098,
											"end": 13101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13009,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 13009,
											"end": 13102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13009,
											"end": 13102,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 13009,
											"end": 13102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13127,
											"end": 13129,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13122,
											"end": 13125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13118,
											"end": 13130,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13111,
											"end": 13130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13111,
											"end": 13130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12770,
											"end": 13136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12770,
											"end": 13136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12770,
											"end": 13136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12770,
											"end": 13136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13142,
											"end": 13561,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 13142,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13308,
											"end": 13312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13346,
											"end": 13348,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13335,
											"end": 13344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13331,
											"end": 13349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13395,
											"end": 13404,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13389,
											"end": 13393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13385,
											"end": 13405,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 13382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13370,
											"end": 13379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13359,
											"end": 13406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13423,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 13549,
											"end": 13553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13423,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 13423,
											"end": 13554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13423,
											"end": 13554,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 13423,
											"end": 13554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13415,
											"end": 13554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13415,
											"end": 13554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13142,
											"end": 13561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13142,
											"end": 13561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13142,
											"end": 13561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13142,
											"end": 13561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13567,
											"end": 13977,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 13567,
											"end": 13977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13607,
											"end": 13614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13630,
											"end": 13650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 13648,
											"end": 13649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13630,
											"end": 13650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 13630,
											"end": 13650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13630,
											"end": 13650,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 13630,
											"end": 13650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13625,
											"end": 13650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13625,
											"end": 13650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13664,
											"end": 13684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 13682,
											"end": 13683,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13664,
											"end": 13684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 13664,
											"end": 13684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13664,
											"end": 13684,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 13664,
											"end": 13684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13659,
											"end": 13684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13659,
											"end": 13684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13719,
											"end": 13720,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13716,
											"end": 13717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13712,
											"end": 13721,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 13759,
											"end": 13770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 13741,
											"end": 13771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13771,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 13741,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13730,
											"end": 13771,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13730,
											"end": 13771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13920,
											"end": 13921,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13911,
											"end": 13918,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13907,
											"end": 13922,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13904,
											"end": 13905,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13901,
											"end": 13923,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13881,
											"end": 13882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13874,
											"end": 13883,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13854,
											"end": 13937,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 13831,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 13831,
											"end": 13970,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13950,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 13950,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 13950,
											"end": 13968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13950,
											"end": 13968,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 13950,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13831,
											"end": 13970,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 13831,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13615,
											"end": 13977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13567,
											"end": 13977,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13567,
											"end": 13977,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13567,
											"end": 13977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13567,
											"end": 13977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13567,
											"end": 13977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13983,
											"end": 14163,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 13983,
											"end": 14163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14031,
											"end": 14108,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14028,
											"end": 14029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14021,
											"end": 14109,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14128,
											"end": 14132,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 14125,
											"end": 14126,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14118,
											"end": 14133,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14152,
											"end": 14156,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14149,
											"end": 14150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14142,
											"end": 14157,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14169,
											"end": 14354,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 14169,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14209,
											"end": 14210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14226,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 14244,
											"end": 14245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14226,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 14226,
											"end": 14246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14226,
											"end": 14246,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 14226,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14260,
											"end": 14280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 14278,
											"end": 14279,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14260,
											"end": 14280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 14260,
											"end": 14280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14260,
											"end": 14280,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 14260,
											"end": 14280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14255,
											"end": 14280,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14255,
											"end": 14280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14299,
											"end": 14300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14289,
											"end": 14324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 14289,
											"end": 14324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14304,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 14304,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 14304,
											"end": 14322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14304,
											"end": 14322,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 14304,
											"end": 14322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14289,
											"end": 14324,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 14289,
											"end": 14324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14346,
											"end": 14347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14343,
											"end": 14344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14339,
											"end": 14348,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14334,
											"end": 14348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14334,
											"end": 14348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14169,
											"end": 14354,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14169,
											"end": 14354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14169,
											"end": 14354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14169,
											"end": 14354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14169,
											"end": 14354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14692,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 14360,
											"end": 14692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14519,
											"end": 14521,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14508,
											"end": 14517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14504,
											"end": 14522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14496,
											"end": 14522,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14496,
											"end": 14522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14532,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 14600,
											"end": 14601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14589,
											"end": 14598,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14585,
											"end": 14602,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14576,
											"end": 14582,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14532,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 14532,
											"end": 14603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14532,
											"end": 14603,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 14532,
											"end": 14603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14613,
											"end": 14685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 14681,
											"end": 14683,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14670,
											"end": 14679,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14613,
											"end": 14685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 14613,
											"end": 14685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14613,
											"end": 14685,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 14613,
											"end": 14685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14692,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14692,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14698,
											"end": 14867,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 14698,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14838,
											"end": 14859,
											"name": "PUSH",
											"source": 7,
											"value": "6342544320617070726F7665206661696C656400000000000000000000000000"
										},
										{
											"begin": 14834,
											"end": 14835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14826,
											"end": 14832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14822,
											"end": 14836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14815,
											"end": 14860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14698,
											"end": 14867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14698,
											"end": 14867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14873,
											"end": 15239,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 14873,
											"end": 15239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15018,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15036,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 15100,
											"end": 15102,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 15095,
											"end": 15098,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15036,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 15036,
											"end": 15103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15036,
											"end": 15103,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 15036,
											"end": 15103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15103,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15112,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 15201,
											"end": 15204,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15112,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 15112,
											"end": 15205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15112,
											"end": 15205,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 15112,
											"end": 15205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15232,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15221,
											"end": 15233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14873,
											"end": 15239,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14873,
											"end": 15239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14873,
											"end": 15239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14873,
											"end": 15239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15245,
											"end": 15664,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 15245,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15411,
											"end": 15415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15449,
											"end": 15451,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15438,
											"end": 15447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15434,
											"end": 15452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15426,
											"end": 15452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15426,
											"end": 15452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15498,
											"end": 15507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15492,
											"end": 15496,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15488,
											"end": 15508,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15484,
											"end": 15485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15473,
											"end": 15482,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15469,
											"end": 15486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15462,
											"end": 15509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15526,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 15652,
											"end": 15656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15526,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 15526,
											"end": 15657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15526,
											"end": 15657,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 15526,
											"end": 15657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15518,
											"end": 15657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15518,
											"end": 15657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15245,
											"end": 15664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15245,
											"end": 15664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15245,
											"end": 15664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15245,
											"end": 15664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15670,
											"end": 16002,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 15670,
											"end": 16002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15791,
											"end": 15795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15829,
											"end": 15831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15818,
											"end": 15827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15806,
											"end": 15832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15806,
											"end": 15832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15842,
											"end": 15913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 15910,
											"end": 15911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15899,
											"end": 15908,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15895,
											"end": 15912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15842,
											"end": 15913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 15842,
											"end": 15913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15842,
											"end": 15913,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 15842,
											"end": 15913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15923,
											"end": 15995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 15991,
											"end": 15993,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15980,
											"end": 15989,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15976,
											"end": 15994,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15967,
											"end": 15973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15923,
											"end": 15995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 15923,
											"end": 15995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15923,
											"end": 15995,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 15923,
											"end": 15995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15670,
											"end": 16002,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15670,
											"end": 16002,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15670,
											"end": 16002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15670,
											"end": 16002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15670,
											"end": 16002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15670,
											"end": 16002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16008,
											"end": 16180,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 16008,
											"end": 16180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16148,
											"end": 16172,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F2062616C616E636520746F20776974686472617700000000000000000000"
										},
										{
											"begin": 16144,
											"end": 16145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16136,
											"end": 16142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16125,
											"end": 16173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16008,
											"end": 16180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16008,
											"end": 16180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16186,
											"end": 16552,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 16186,
											"end": 16552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16328,
											"end": 16331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16349,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 16413,
											"end": 16415,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 16408,
											"end": 16411,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16349,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 16349,
											"end": 16416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16349,
											"end": 16416,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 16349,
											"end": 16416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16342,
											"end": 16416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16342,
											"end": 16416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16425,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 16514,
											"end": 16517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16425,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 16425,
											"end": 16518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16425,
											"end": 16518,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 16425,
											"end": 16518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16543,
											"end": 16545,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16538,
											"end": 16541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16534,
											"end": 16546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16527,
											"end": 16546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16527,
											"end": 16546,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16186,
											"end": 16552,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16186,
											"end": 16552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16186,
											"end": 16552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16186,
											"end": 16552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16558,
											"end": 16977,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 16558,
											"end": 16977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16724,
											"end": 16728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16762,
											"end": 16764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16751,
											"end": 16760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16747,
											"end": 16765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16739,
											"end": 16765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16739,
											"end": 16765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16811,
											"end": 16820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16805,
											"end": 16809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16801,
											"end": 16821,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16797,
											"end": 16798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16786,
											"end": 16795,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16782,
											"end": 16799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16775,
											"end": 16822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16839,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 16965,
											"end": 16969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16839,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 16839,
											"end": 16970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16839,
											"end": 16970,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 16839,
											"end": 16970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16831,
											"end": 16970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16831,
											"end": 16970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16558,
											"end": 16977,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16558,
											"end": 16977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16558,
											"end": 16977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16558,
											"end": 16977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16983,
											"end": 17117,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 16983,
											"end": 17117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17041,
											"end": 17050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17074,
											"end": 17111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 17105,
											"end": 17110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17074,
											"end": 17111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 17074,
											"end": 17111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17074,
											"end": 17111,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 17074,
											"end": 17111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17061,
											"end": 17111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17061,
											"end": 17111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16983,
											"end": 17117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16983,
											"end": 17117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16983,
											"end": 17117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16983,
											"end": 17117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17123,
											"end": 17270,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 17123,
											"end": 17270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17218,
											"end": 17263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 17257,
											"end": 17262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17218,
											"end": 17263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 17218,
											"end": 17263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17218,
											"end": 17263,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 17218,
											"end": 17263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17213,
											"end": 17216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17206,
											"end": 17264,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17123,
											"end": 17270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17123,
											"end": 17270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17123,
											"end": 17270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17624,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 17276,
											"end": 17624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17405,
											"end": 17409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17443,
											"end": 17445,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17432,
											"end": 17441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17428,
											"end": 17446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17456,
											"end": 17535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 17532,
											"end": 17533,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17521,
											"end": 17530,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17517,
											"end": 17534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17508,
											"end": 17514,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17456,
											"end": 17535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 17456,
											"end": 17535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17456,
											"end": 17535,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 17456,
											"end": 17535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17545,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 17613,
											"end": 17615,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17602,
											"end": 17611,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17598,
											"end": 17616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17589,
											"end": 17595,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17545,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 17545,
											"end": 17617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17545,
											"end": 17617,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 17545,
											"end": 17617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17624,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17624,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17630,
											"end": 17978,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 17630,
											"end": 17978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17759,
											"end": 17763,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17797,
											"end": 17799,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17786,
											"end": 17795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17782,
											"end": 17800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17774,
											"end": 17800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17774,
											"end": 17800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 17878,
											"end": 17879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17867,
											"end": 17876,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17863,
											"end": 17880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17854,
											"end": 17860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 17810,
											"end": 17881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17881,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 17810,
											"end": 17881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17891,
											"end": 17971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 17967,
											"end": 17969,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17956,
											"end": 17965,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17952,
											"end": 17970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17943,
											"end": 17949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17891,
											"end": 17971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 17891,
											"end": 17971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17891,
											"end": 17971,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 17891,
											"end": 17971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17630,
											"end": 17978,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17630,
											"end": 17978,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17630,
											"end": 17978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17630,
											"end": 17978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17630,
											"end": 17978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17630,
											"end": 17978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17984,
											"end": 18152,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 17984,
											"end": 18152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C6964206D65726368616E7449640000000000000000000000000000"
										},
										{
											"begin": 18120,
											"end": 18121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18112,
											"end": 18118,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18108,
											"end": 18122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18101,
											"end": 18145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17984,
											"end": 18152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17984,
											"end": 18152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18158,
											"end": 18524,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 18158,
											"end": 18524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18300,
											"end": 18303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18321,
											"end": 18388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 18385,
											"end": 18387,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 18380,
											"end": 18383,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18321,
											"end": 18388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 18321,
											"end": 18388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18321,
											"end": 18388,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 18321,
											"end": 18388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18314,
											"end": 18388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18314,
											"end": 18388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 18486,
											"end": 18489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 18397,
											"end": 18490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18490,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 18397,
											"end": 18490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18515,
											"end": 18517,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18510,
											"end": 18513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18506,
											"end": 18518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18499,
											"end": 18518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18499,
											"end": 18518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18158,
											"end": 18524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18158,
											"end": 18524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18158,
											"end": 18524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18158,
											"end": 18524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18530,
											"end": 18949,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 18530,
											"end": 18949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18696,
											"end": 18700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18734,
											"end": 18736,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18723,
											"end": 18732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18719,
											"end": 18737,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18711,
											"end": 18737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18711,
											"end": 18737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18783,
											"end": 18792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18777,
											"end": 18781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18773,
											"end": 18793,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18769,
											"end": 18770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18758,
											"end": 18767,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18754,
											"end": 18771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18747,
											"end": 18794,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 18942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 18937,
											"end": 18941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 18942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 18811,
											"end": 18942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18811,
											"end": 18942,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 18811,
											"end": 18942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18803,
											"end": 18942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18803,
											"end": 18942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18530,
											"end": 18949,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18530,
											"end": 18949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18530,
											"end": 18949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18530,
											"end": 18949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18955,
											"end": 19127,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 18955,
											"end": 19127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19095,
											"end": 19119,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C6964207061796F7574206164647265737300000000000000000000"
										},
										{
											"begin": 19091,
											"end": 19092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19083,
											"end": 19089,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19079,
											"end": 19093,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19072,
											"end": 19120,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18955,
											"end": 19127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18955,
											"end": 19127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19133,
											"end": 19499,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 19133,
											"end": 19499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19275,
											"end": 19278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19296,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 19360,
											"end": 19362,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 19355,
											"end": 19358,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19296,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 19296,
											"end": 19363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19296,
											"end": 19363,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 19296,
											"end": 19363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19289,
											"end": 19363,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19289,
											"end": 19363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19372,
											"end": 19465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 19461,
											"end": 19464,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19372,
											"end": 19465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 19372,
											"end": 19465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19372,
											"end": 19465,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 19372,
											"end": 19465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19490,
											"end": 19492,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19485,
											"end": 19488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19481,
											"end": 19493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19474,
											"end": 19493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19474,
											"end": 19493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19133,
											"end": 19499,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19133,
											"end": 19499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19133,
											"end": 19499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19133,
											"end": 19499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19505,
											"end": 19924,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 19505,
											"end": 19924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19671,
											"end": 19675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19709,
											"end": 19711,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19698,
											"end": 19707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19694,
											"end": 19712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19686,
											"end": 19712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19686,
											"end": 19712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19758,
											"end": 19767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19752,
											"end": 19756,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19748,
											"end": 19768,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19744,
											"end": 19745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19733,
											"end": 19742,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19729,
											"end": 19746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19722,
											"end": 19769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19786,
											"end": 19917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 19912,
											"end": 19916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19786,
											"end": 19917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 19786,
											"end": 19917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19786,
											"end": 19917,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 19786,
											"end": 19917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19778,
											"end": 19917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19778,
											"end": 19917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19505,
											"end": 19924,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19505,
											"end": 19924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19505,
											"end": 19924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19505,
											"end": 19924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19930,
											"end": 20107,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 19930,
											"end": 20107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20070,
											"end": 20099,
											"name": "PUSH",
											"source": 7,
											"value": "4D65726368616E7420616C726561647920726567697374657265640000000000"
										},
										{
											"begin": 20066,
											"end": 20067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20058,
											"end": 20064,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20054,
											"end": 20068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20047,
											"end": 20100,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19930,
											"end": 20107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19930,
											"end": 20107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20113,
											"end": 20479,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 20113,
											"end": 20479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20255,
											"end": 20258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20276,
											"end": 20343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 20340,
											"end": 20342,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 20335,
											"end": 20338,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20276,
											"end": 20343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 20276,
											"end": 20343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20276,
											"end": 20343,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 20276,
											"end": 20343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20269,
											"end": 20343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20269,
											"end": 20343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20352,
											"end": 20445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 20441,
											"end": 20444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20352,
											"end": 20445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 20352,
											"end": 20445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20352,
											"end": 20445,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 20352,
											"end": 20445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20470,
											"end": 20472,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20465,
											"end": 20468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20461,
											"end": 20473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20454,
											"end": 20473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20454,
											"end": 20473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20113,
											"end": 20479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20113,
											"end": 20479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20113,
											"end": 20479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20113,
											"end": 20479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20485,
											"end": 20904,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 20485,
											"end": 20904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20651,
											"end": 20655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20689,
											"end": 20691,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20678,
											"end": 20687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20674,
											"end": 20692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20666,
											"end": 20692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20666,
											"end": 20692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20738,
											"end": 20747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20732,
											"end": 20736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20728,
											"end": 20748,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20724,
											"end": 20725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20713,
											"end": 20722,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20709,
											"end": 20726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20702,
											"end": 20749,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20766,
											"end": 20897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 20892,
											"end": 20896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20766,
											"end": 20897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 20766,
											"end": 20897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20766,
											"end": 20897,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 20766,
											"end": 20897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20758,
											"end": 20897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20758,
											"end": 20897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20485,
											"end": 20904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20485,
											"end": 20904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20485,
											"end": 20904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20485,
											"end": 20904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20910,
											"end": 21148,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 20910,
											"end": 21148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21011,
											"end": 21015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21049,
											"end": 21051,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21038,
											"end": 21047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21034,
											"end": 21052,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21026,
											"end": 21052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21026,
											"end": 21052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21062,
											"end": 21141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 21138,
											"end": 21139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21127,
											"end": 21136,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21123,
											"end": 21140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21114,
											"end": 21120,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21062,
											"end": 21141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 21062,
											"end": 21141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21062,
											"end": 21141,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 21062,
											"end": 21141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20910,
											"end": 21148,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20910,
											"end": 21148,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20910,
											"end": 21148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20910,
											"end": 21148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20910,
											"end": 21148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21154,
											"end": 21327,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 21154,
											"end": 21327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21294,
											"end": 21319,
											"name": "PUSH",
											"source": 7,
											"value": "4D65726368616E74206E6F742072656769737465726564000000000000000000"
										},
										{
											"begin": 21290,
											"end": 21291,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21282,
											"end": 21288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21278,
											"end": 21292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21271,
											"end": 21320,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21154,
											"end": 21327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21154,
											"end": 21327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21333,
											"end": 21699,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 21333,
											"end": 21699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21475,
											"end": 21478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21496,
											"end": 21563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 21560,
											"end": 21562,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 21555,
											"end": 21558,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21496,
											"end": 21563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 21496,
											"end": 21563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21496,
											"end": 21563,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 21496,
											"end": 21563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21489,
											"end": 21563,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21489,
											"end": 21563,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21572,
											"end": 21665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 21661,
											"end": 21664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21572,
											"end": 21665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 21572,
											"end": 21665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21572,
											"end": 21665,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 21572,
											"end": 21665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21690,
											"end": 21692,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21685,
											"end": 21688,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21681,
											"end": 21693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21674,
											"end": 21693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21674,
											"end": 21693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21333,
											"end": 21699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21333,
											"end": 21699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21333,
											"end": 21699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21333,
											"end": 21699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21705,
											"end": 22124,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 21705,
											"end": 22124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21871,
											"end": 21875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21909,
											"end": 21911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21898,
											"end": 21907,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21894,
											"end": 21912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21886,
											"end": 21912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21886,
											"end": 21912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21958,
											"end": 21967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21952,
											"end": 21956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21948,
											"end": 21968,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 21944,
											"end": 21945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21933,
											"end": 21942,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21929,
											"end": 21946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21922,
											"end": 21969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21986,
											"end": 22117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 22112,
											"end": 22116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21986,
											"end": 22117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 21986,
											"end": 22117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21986,
											"end": 22117,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 21986,
											"end": 22117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21978,
											"end": 22117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21978,
											"end": 22117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21705,
											"end": 22124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21705,
											"end": 22124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21705,
											"end": 22124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21705,
											"end": 22124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22130,
											"end": 22466,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 22130,
											"end": 22466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22253,
											"end": 22257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22291,
											"end": 22293,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22280,
											"end": 22289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22276,
											"end": 22294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22268,
											"end": 22294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22268,
											"end": 22294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22304,
											"end": 22383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 22380,
											"end": 22381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22369,
											"end": 22378,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22365,
											"end": 22382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22356,
											"end": 22362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22304,
											"end": 22383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 22304,
											"end": 22383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22304,
											"end": 22383,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 22304,
											"end": 22383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22393,
											"end": 22459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 22455,
											"end": 22457,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22444,
											"end": 22453,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22440,
											"end": 22458,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22431,
											"end": 22437,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22393,
											"end": 22459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 22393,
											"end": 22459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22393,
											"end": 22459,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 22393,
											"end": 22459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22130,
											"end": 22466,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 22130,
											"end": 22466,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22130,
											"end": 22466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22130,
											"end": 22466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22130,
											"end": 22466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22130,
											"end": 22466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/PaymentGateway.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"aggregator()": "245a7bfc",
							"cBTC()": "0ae8c4dc",
							"dex()": "692058c2",
							"merchantBalances(bytes32)": "194a7b8e",
							"merchants(bytes32)": "20003022",
							"owner()": "8da5cb5b",
							"payMerchant(bytes32,uint256)": "4793f1d9",
							"payMerchantInCBTC(bytes32,uint256)": "5143fe12",
							"registerMerchant(bytes32,address)": "e5a5ef4f",
							"renounceOwnership()": "715018a6",
							"stableCoin()": "992642e5",
							"transferOwnership(address)": "f2fde38b",
							"updateMerchant(bytes32,address,bool)": "ff0f7b74",
							"withdrawMerchantFunds(bytes32)": "ad487f23"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stableCoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cBTC\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payoutAddress\",\"type\":\"address\"}],\"name\":\"MerchantRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payoutAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"MerchantUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payoutAddress\",\"type\":\"address\"}],\"name\":\"MerchantWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"contract IAggregatorOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cBTC\",\"outputs\":[{\"internalType\":\"contract ICBTC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dex\",\"outputs\":[{\"internalType\":\"contract IDexInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merchantBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merchants\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"payoutAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"payMerchant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"cUSDTargetAmount\",\"type\":\"uint256\"}],\"name\":\"payMerchantInCBTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"payoutAddress\",\"type\":\"address\"}],\"name\":\"registerMerchant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"contract IStableCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"payoutAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"updateMerchant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merchantId\",\"type\":\"bytes32\"}],\"name\":\"withdrawMerchantFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor setting the addresses of stablecoin, aggregator, cBTC, and dex\",\"params\":{\"_aggregator\":\"The address of the aggregator oracle\",\"_cBTC\":\"The address of the cBTC token\",\"_dex\":\"The address of the AMM DEX\",\"_stableCoin\":\"The address of cUSD stablecoin\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"payMerchant(bytes32,uint256)\":{\"details\":\"Pay a merchant directly in cUSD. User must have approved this contract to spend cUSD.\",\"params\":{\"amount\":\"The amount of cUSD to pay\",\"merchantId\":\"The merchant to pay\"}},\"payMerchantInCBTC(bytes32,uint256)\":{\"details\":\"Pay a merchant using cBTC. This function: 1. Calculates how much cBTC is needed for the target cUSD amount using aggregator prices. 2. Transfers cBTC from the user. 3. Approves the DEX to spend cBTC. 4. Calls the DEX to swap cBTC into cUSD. 5. Credits the merchant in cUSD. User must have approved this contract to spend cBTC.\",\"params\":{\"cUSDTargetAmount\":\"How many cUSD the merchant should receive\",\"merchantId\":\"The merchant to pay\"}},\"registerMerchant(bytes32,address)\":{\"details\":\"Register a merchant.\",\"params\":{\"merchantId\":\"A unique identifier for the merchant (e.g. keccak256(\\\"merchantName\\\"))\",\"payoutAddress\":\"The address where merchant wants to receive funds\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateMerchant(bytes32,address,bool)\":{\"details\":\"Update merchant info.\",\"params\":{\"active\":\"New active status\",\"merchantId\":\"The merchant identifier\",\"payoutAddress\":\"New payout address\"}},\"withdrawMerchantFunds(bytes32)\":{\"details\":\"Merchant withdraws their accumulated cUSD funds. Only owner can trigger this withdrawal in the current example. A real scenario would allow the merchant themselves to withdraw.\",\"params\":{\"merchantId\":\"The merchant ID\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PaymentGateway.sol\":\"PaymentGateway\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/PaymentGateway.sol\":{\"keccak256\":\"0xeed4f6a87e740a05a04ac9c603047a879131eb3884e9083464aa89b3a5854658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://303de87d6eb65619051946e79784c3d5e2ed57c19d4d9e34b2ca3506ad958977\",\"dweb:/ipfs/QmNcWr9EHiDtCJ1VxVXHaEND1Xs8gkud7zS8f6b7gF8BmB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/PaymentGateway.sol:PaymentGateway",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 973,
								"contract": "contracts/PaymentGateway.sol:PaymentGateway",
								"label": "merchants",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(Merchant)968_storage)"
							},
							{
								"astId": 977,
								"contract": "contracts/PaymentGateway.sol:PaymentGateway",
								"label": "merchantBalances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_uint256)"
							},
							{
								"astId": 980,
								"contract": "contracts/PaymentGateway.sol:PaymentGateway",
								"label": "stableCoin",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IStableCoin)940"
							},
							{
								"astId": 983,
								"contract": "contracts/PaymentGateway.sol:PaymentGateway",
								"label": "cBTC",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ICBTC)959"
							},
							{
								"astId": 986,
								"contract": "contracts/PaymentGateway.sol:PaymentGateway",
								"label": "aggregator",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IAggregatorOracle)948"
							},
							{
								"astId": 989,
								"contract": "contracts/PaymentGateway.sol:PaymentGateway",
								"label": "dex",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IDexInterface)956"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IAggregatorOracle)948": {
								"encoding": "inplace",
								"label": "contract IAggregatorOracle",
								"numberOfBytes": "20"
							},
							"t_contract(ICBTC)959": {
								"encoding": "inplace",
								"label": "contract ICBTC",
								"numberOfBytes": "20"
							},
							"t_contract(IDexInterface)956": {
								"encoding": "inplace",
								"label": "contract IDexInterface",
								"numberOfBytes": "20"
							},
							"t_contract(IStableCoin)940": {
								"encoding": "inplace",
								"label": "contract IStableCoin",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_struct(Merchant)968_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct PaymentGateway.Merchant)",
								"numberOfBytes": "32",
								"value": "t_struct(Merchant)968_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Merchant)968_storage": {
								"encoding": "inplace",
								"label": "struct PaymentGateway.Merchant",
								"members": [
									{
										"astId": 965,
										"contract": "contracts/PaymentGateway.sol:PaymentGateway",
										"label": "payoutAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 967,
										"contract": "contracts/PaymentGateway.sol:PaymentGateway",
										"label": "active",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/PaymentGateway.sol": {
				"ast": {
					"absolutePath": "contracts/PaymentGateway.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IAggregatorOracle": [
							948
						],
						"ICBTC": [
							959
						],
						"IDexInterface": [
							956
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IStableCoin": [
							940
						],
						"Ownable": [
							147
						],
						"PaymentGateway": [
							1400
						]
					},
					"id": 1401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1401,
							"sourceUnit": 148,
							"src": "58:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1401,
							"sourceUnit": 800,
							"src": "111:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "IERC20",
										"nameLocations": [
											"193:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "193:6:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "193:6:6"
								}
							],
							"canonicalName": "IStableCoin",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 940,
							"linearizedBaseContracts": [
								940,
								877
							],
							"name": "IStableCoin",
							"nameLocation": "178:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1401,
							"src": "168:118:6",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAggregatorOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 948,
							"linearizedBaseContracts": [
								948
							],
							"name": "IAggregatorOracle",
							"nameLocation": "298:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "adfe34f7",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMedianPrice",
									"nameLocation": "331:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "354:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "346:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:6"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "384:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "384:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:9:6"
									},
									"scope": 948,
									"src": "322:71:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1401,
							"src": "288:107:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDexInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 956,
							"linearizedBaseContracts": [
								956
							],
							"name": "IDexInterface",
							"nameLocation": "407:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3a96d086",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapCBTCForCUSD",
									"nameLocation": "436:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "cBTCAmtIn",
												"nameLocation": "460:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "452:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "minCUSDOut",
												"nameLocation": "479:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "471:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:39:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:0:6"
									},
									"scope": 956,
									"src": "427:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1401,
							"src": "397:105:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 957,
										"name": "IERC20",
										"nameLocations": [
											"523:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "523:6:6"
									},
									"id": 958,
									"nodeType": "InheritanceSpecifier",
									"src": "523:6:6"
								}
							],
							"canonicalName": "ICBTC",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 959,
							"linearizedBaseContracts": [
								959,
								877
							],
							"name": "ICBTC",
							"nameLocation": "514:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1401,
							"src": "504:94:6",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 961,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "635:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 962,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "639:6:6",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "635:10:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 960,
										"name": "Ownable",
										"nameLocations": [
											"627:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "627:7:6"
									},
									"id": 963,
									"nodeType": "InheritanceSpecifier",
									"src": "627:19:6"
								}
							],
							"canonicalName": "PaymentGateway",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1400,
							"linearizedBaseContracts": [
								1400,
								147,
								933
							],
							"name": "PaymentGateway",
							"nameLocation": "609:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PaymentGateway.Merchant",
									"id": 968,
									"members": [
										{
											"constant": false,
											"id": 965,
											"mutability": "mutable",
											"name": "payoutAddress",
											"nameLocation": "695:13:6",
											"nodeType": "VariableDeclaration",
											"scope": 968,
											"src": "679:29:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 964,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "679:15:6",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 967,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "723:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 968,
											"src": "718:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 966,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "718:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Merchant",
									"nameLocation": "660:8:6",
									"nodeType": "StructDefinition",
									"scope": 1400,
									"src": "653:83:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "20003022",
									"id": 973,
									"mutability": "mutable",
									"name": "merchants",
									"nameLocation": "778:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "742:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
										"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant)"
									},
									"typeName": {
										"id": 972,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 969,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "750:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "742:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
											"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 971,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 970,
												"name": "Merchant",
												"nameLocations": [
													"761:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 968,
												"src": "761:8:6"
											},
											"referencedDeclaration": 968,
											"src": "761:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Merchant_$968_storage_ptr",
												"typeString": "struct PaymentGateway.Merchant"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "194a7b8e",
									"id": 977,
									"mutability": "mutable",
									"name": "merchantBalances",
									"nameLocation": "828:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "793:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
										"typeString": "mapping(bytes32 => uint256)"
									},
									"typeName": {
										"id": 976,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 974,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "801:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "793:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
											"typeString": "mapping(bytes32 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 975,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "812:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "992642e5",
									"id": 980,
									"mutability": "mutable",
									"name": "stableCoin",
									"nameLocation": "870:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "851:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IStableCoin_$940",
										"typeString": "contract IStableCoin"
									},
									"typeName": {
										"id": 979,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 978,
											"name": "IStableCoin",
											"nameLocations": [
												"851:11:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 940,
											"src": "851:11:6"
										},
										"referencedDeclaration": 940,
										"src": "851:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IStableCoin_$940",
											"typeString": "contract IStableCoin"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0ae8c4dc",
									"id": 983,
									"mutability": "mutable",
									"name": "cBTC",
									"nameLocation": "899:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "886:17:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICBTC_$959",
										"typeString": "contract ICBTC"
									},
									"typeName": {
										"id": 982,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 981,
											"name": "ICBTC",
											"nameLocations": [
												"886:5:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 959,
											"src": "886:5:6"
										},
										"referencedDeclaration": 959,
										"src": "886:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICBTC_$959",
											"typeString": "contract ICBTC"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "245a7bfc",
									"id": 986,
									"mutability": "mutable",
									"name": "aggregator",
									"nameLocation": "934:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "909:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAggregatorOracle_$948",
										"typeString": "contract IAggregatorOracle"
									},
									"typeName": {
										"id": 985,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 984,
											"name": "IAggregatorOracle",
											"nameLocations": [
												"909:17:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 948,
											"src": "909:17:6"
										},
										"referencedDeclaration": 948,
										"src": "909:17:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAggregatorOracle_$948",
											"typeString": "contract IAggregatorOracle"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "692058c2",
									"id": 989,
									"mutability": "mutable",
									"name": "dex",
									"nameLocation": "971:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "950:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDexInterface_$956",
										"typeString": "contract IDexInterface"
									},
									"typeName": {
										"id": 988,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 987,
											"name": "IDexInterface",
											"nameLocations": [
												"950:13:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 956,
											"src": "950:13:6"
										},
										"referencedDeclaration": 956,
										"src": "950:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDexInterface_$956",
											"typeString": "contract IDexInterface"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1108b573acb7954c6be9806cc3a17ed5864f50fa96ad4cbc9cd82fa63d42b9f7",
									"id": 995,
									"name": "MerchantRegistered",
									"nameLocation": "987:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"indexed": true,
												"mutability": "mutable",
												"name": "merchantId",
												"nameLocation": "1022:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1006:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 990,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"indexed": false,
												"mutability": "mutable",
												"name": "payoutAddress",
												"nameLocation": "1042:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1034:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:51:6"
									},
									"src": "981:76:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7dac21e92520eaedc798f2261da9eecebda327db2d8dff77c1aab26798dc25e8",
									"id": 1003,
									"name": "MerchantUpdated",
									"nameLocation": "1068:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"indexed": true,
												"mutability": "mutable",
												"name": "merchantId",
												"nameLocation": "1100:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1084:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 996,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"mutability": "mutable",
												"name": "payoutAddress",
												"nameLocation": "1120:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1112:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "1140:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1135:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1135:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:64:6"
									},
									"src": "1062:86:6"
								},
								{
									"anonymous": false,
									"eventSelector": "3b5907c9aaeaeef015f385111975b015225e1001bf659370e62c15e13373bc6d",
									"id": 1011,
									"name": "PaymentReceived",
									"nameLocation": "1159:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"indexed": true,
												"mutability": "mutable",
												"name": "merchantId",
												"nameLocation": "1191:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1175:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1004,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1219:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1203:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1234:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1226:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:67:6"
									},
									"src": "1153:89:6"
								},
								{
									"anonymous": false,
									"eventSelector": "195f245622abeb539754a2a6a6deb95e6b222cbf894d10cbffbebac70340e587",
									"id": 1019,
									"name": "MerchantWithdrawn",
									"nameLocation": "1253:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"indexed": true,
												"mutability": "mutable",
												"name": "merchantId",
												"nameLocation": "1287:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1271:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1299:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"indexed": false,
												"mutability": "mutable",
												"name": "payoutAddress",
												"nameLocation": "1323:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1315:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:67:6"
									},
									"src": "1247:91:6"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "1784:442:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1032,
																"name": "_stableCoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "1802:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1825:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1817:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1033,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1817:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1817:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1802:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420737461626c65636f696e2061646472657373",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1829:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015",
																"typeString": "literal_string \"Invalid stablecoin address\""
															},
															"value": "Invalid stablecoin address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eeaa35c02fc5f0c1048a01211e22db0fa0335de2f1add7371b1882911f322015",
																"typeString": "literal_string \"Invalid stablecoin address\""
															}
														],
														"id": 1031,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1794:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1794:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "1794:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1042,
																"name": "_cBTC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "1876:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1893:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1885:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1043,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1885:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1885:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1876:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420634254432061646472657373",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1897:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e",
																"typeString": "literal_string \"Invalid cBTC address\""
															},
															"value": "Invalid cBTC address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e",
																"typeString": "literal_string \"Invalid cBTC address\""
															}
														],
														"id": 1041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1868:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1868:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "1868:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1052,
																"name": "_aggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "1938:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1961:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1953:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1053,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1953:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1953:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1938:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061676772656761746f722061646472657373",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1965:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
																"typeString": "literal_string \"Invalid aggregator address\""
															},
															"value": "Invalid aggregator address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
																"typeString": "literal_string \"Invalid aggregator address\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1930:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "1930:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1062,
																"name": "_dex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "2012:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2020:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1063,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2020:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2020:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2012:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204445582061646472657373",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2032:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde",
																"typeString": "literal_string \"Invalid DEX address\""
															},
															"value": "Invalid DEX address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1361148b66382ccae09f509786be0a10fe02b478bfd5a70b66902b1b7733abde",
																"typeString": "literal_string \"Invalid DEX address\""
															}
														],
														"id": 1061,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2004:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2004:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "2004:50:6"
											},
											{
												"expression": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1071,
														"name": "stableCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "2065:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStableCoin_$940",
															"typeString": "contract IStableCoin"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1073,
																"name": "_stableCoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "2090:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1072,
															"name": "IStableCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "2078:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IStableCoin_$940_$",
																"typeString": "type(contract IStableCoin)"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2078:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStableCoin_$940",
															"typeString": "contract IStableCoin"
														}
													},
													"src": "2065:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStableCoin_$940",
														"typeString": "contract IStableCoin"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "2065:37:6"
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1077,
														"name": "cBTC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "2112:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICBTC_$959",
															"typeString": "contract ICBTC"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1079,
																"name": "_cBTC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "2125:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1078,
															"name": "ICBTC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICBTC_$959_$",
																"typeString": "type(contract ICBTC)"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2119:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICBTC_$959",
															"typeString": "contract ICBTC"
														}
													},
													"src": "2112:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICBTC_$959",
														"typeString": "contract ICBTC"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "2112:19:6"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1083,
														"name": "aggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2141:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAggregatorOracle_$948",
															"typeString": "contract IAggregatorOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1085,
																"name": "_aggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "2172:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1084,
															"name": "IAggregatorOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "2154:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAggregatorOracle_$948_$",
																"typeString": "type(contract IAggregatorOracle)"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2154:30:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAggregatorOracle_$948",
															"typeString": "contract IAggregatorOracle"
														}
													},
													"src": "2141:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAggregatorOracle_$948",
														"typeString": "contract IAggregatorOracle"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "2141:43:6"
											},
											{
												"expression": {
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1089,
														"name": "dex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "2194:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDexInterface_$956",
															"typeString": "contract IDexInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1091,
																"name": "_dex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "2214:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1090,
															"name": "IDexInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "2200:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDexInterface_$956_$",
																"typeString": "type(contract IDexInterface)"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2200:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDexInterface_$956",
															"typeString": "contract IDexInterface"
														}
													},
													"src": "2194:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDexInterface_$956",
														"typeString": "contract IDexInterface"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "2194:25:6"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "1344:314:6",
										"text": " @dev Constructor setting the addresses of stablecoin, aggregator, cBTC, and dex\n @param _stableCoin The address of cUSD stablecoin\n @param _cBTC The address of the cBTC token\n @param _aggregator The address of the aggregator oracle\n @param _dex The address of the AMM DEX"
									},
									"id": 1096,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "_stableCoin",
												"nameLocation": "1692:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1684:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "_cBTC",
												"nameLocation": "1721:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1713:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "_aggregator",
												"nameLocation": "1744:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1736:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "_dex",
												"nameLocation": "1773:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1765:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:109:6"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1784:0:6"
									},
									"scope": 1400,
									"src": "1663:563:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2550:400:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1107,
																"name": "merchantId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "2568:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "307830",
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2582:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															},
															"src": "2568:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d65726368616e744964",
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2587:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428",
																"typeString": "literal_string \"Invalid merchantId\""
															},
															"value": "Invalid merchantId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa3650ac9c37dadf00f45dae75ff8fe48cb1e65dae250ca8a60c70f91de7c428",
																"typeString": "literal_string \"Invalid merchantId\""
															}
														],
														"id": 1106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2560:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "2560:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1114,
																"name": "payoutAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2626:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2651:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2643:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1115,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2643:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2643:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2626:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207061796f75742061646472657373",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2655:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084",
																"typeString": "literal_string \"Invalid payout address\""
															},
															"value": "Invalid payout address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084",
																"typeString": "literal_string \"Invalid payout address\""
															}
														],
														"id": 1113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2618:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2618:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "2618:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2698:29:6",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1124,
																		"name": "merchants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "2699:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
																			"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant storage ref)"
																		}
																	},
																	"id": 1126,
																	"indexExpression": {
																		"id": 1125,
																		"name": "merchantId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "2709:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2699:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Merchant_$968_storage",
																		"typeString": "struct PaymentGateway.Merchant storage ref"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2721:6:6",
																"memberName": "active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "2699:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d65726368616e7420616c72656164792072656769737465726564",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2729:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2",
																"typeString": "literal_string \"Merchant already registered\""
															},
															"value": "Merchant already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dee17f4db42edcb0841b61c9c04adb525cc97e27b4a06dec39b87ce8db6596f2",
																"typeString": "literal_string \"Merchant already registered\""
															}
														],
														"id": 1123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2690:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2690:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "2690:69:6"
											},
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1132,
															"name": "merchants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "2770:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
																"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant storage ref)"
															}
														},
														"id": 1134,
														"indexExpression": {
															"id": 1133,
															"name": "merchantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "2780:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2770:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Merchant_$968_storage",
															"typeString": "struct PaymentGateway.Merchant storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1136,
																"name": "payoutAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2832:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2867:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1135,
															"name": "Merchant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "2794:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Merchant_$968_storage_ptr_$",
																"typeString": "type(struct PaymentGateway.Merchant storage pointer)"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2817:13:6",
															"2859:6:6"
														],
														"names": [
															"payoutAddress",
															"active"
														],
														"nodeType": "FunctionCall",
														"src": "2794:88:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Merchant_$968_memory_ptr",
															"typeString": "struct PaymentGateway.Merchant memory"
														}
													},
													"src": "2770:112:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Merchant_$968_storage",
														"typeString": "struct PaymentGateway.Merchant storage ref"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "2770:112:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1142,
															"name": "merchantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "2917:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1143,
															"name": "payoutAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "2929:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1141,
														"name": "MerchantRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "2898:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "EmitStatement",
												"src": "2893:50:6"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "2232:217:6",
										"text": " @dev Register a merchant.\n @param merchantId A unique identifier for the merchant (e.g. keccak256(\"merchantName\"))\n @param payoutAddress The address where merchant wants to receive funds"
									},
									"functionSelector": "e5a5ef4f",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1103,
												"name": "onlyOwner",
												"nameLocations": [
													"2540:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2540:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2540:9:6"
										}
									],
									"name": "registerMerchant",
									"nameLocation": "2463:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "merchantId",
												"nameLocation": "2488:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2480:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "payoutAddress",
												"nameLocation": "2516:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2500:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2500:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:51:6"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:0:6"
									},
									"scope": 1400,
									"src": "2454:496:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "3248:327:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1160,
																	"name": "merchants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "3266:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
																		"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant storage ref)"
																	}
																},
																"id": 1162,
																"indexExpression": {
																	"id": 1161,
																	"name": "merchantId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "3276:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3266:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Merchant_$968_storage",
																	"typeString": "struct PaymentGateway.Merchant storage ref"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3288:6:6",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 967,
															"src": "3266:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d65726368616e74206e6f742072656769737465726564",
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3296:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551",
																"typeString": "literal_string \"Merchant not registered\""
															},
															"value": "Merchant not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cdf57cfac20d4aed5ba7dc92cfbb828a933cd6923edd3c5c7d1acc2f643ea551",
																"typeString": "literal_string \"Merchant not registered\""
															}
														],
														"id": 1159,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3258:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3258:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "3258:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1168,
																"name": "payoutAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "3340:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3365:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3357:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1169,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3357:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3357:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3340:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207061796f75742061646472657373",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3369:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084",
																"typeString": "literal_string \"Invalid payout address\""
															},
															"value": "Invalid payout address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61585b2e44fa91ce8e15bb2af1d0f99c23faf1763e9f10cdd60e6ba67b080084",
																"typeString": "literal_string \"Invalid payout address\""
															}
														],
														"id": 1167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3332:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "3332:62:6"
											},
											{
												"expression": {
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1177,
																"name": "merchants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "3405:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
																	"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant storage ref)"
																}
															},
															"id": 1179,
															"indexExpression": {
																"id": 1178,
																"name": "merchantId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "3415:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3405:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Merchant_$968_storage",
																"typeString": "struct PaymentGateway.Merchant storage ref"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3427:13:6",
														"memberName": "payoutAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 965,
														"src": "3405:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1181,
														"name": "payoutAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "3443:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3405:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "3405:51:6"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1184,
																"name": "merchants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "3466:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
																	"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant storage ref)"
																}
															},
															"id": 1186,
															"indexExpression": {
																"id": 1185,
																"name": "merchantId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "3476:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3466:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Merchant_$968_storage",
																"typeString": "struct PaymentGateway.Merchant storage ref"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3488:6:6",
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 967,
														"src": "3466:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1188,
														"name": "active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "3497:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3466:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "3466:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1192,
															"name": "merchantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "3534:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1193,
															"name": "payoutAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "3546:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1194,
															"name": "active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "3561:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1191,
														"name": "MerchantUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "3518:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (bytes32,address,bool)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3518:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "EmitStatement",
												"src": "3513:55:6"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "2956:180:6",
										"text": " @dev Update merchant info.\n @param merchantId The merchant identifier\n @param payoutAddress New payout address\n @param active New active status"
									},
									"functionSelector": "ff0f7b74",
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1156,
												"name": "onlyOwner",
												"nameLocations": [
													"3238:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3238:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3238:9:6"
										}
									],
									"name": "updateMerchant",
									"nameLocation": "3150:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "merchantId",
												"nameLocation": "3173:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "3165:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "payoutAddress",
												"nameLocation": "3201:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "3185:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3185:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "3221:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "3216:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3216:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:64:6"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3248:0:6"
									},
									"scope": 1400,
									"src": "3141:434:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "3853:316:6",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "3879:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1246,
														"src": "3863:17:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Merchant_$968_memory_ptr",
															"typeString": "struct PaymentGateway.Merchant"
														},
														"typeName": {
															"id": 1207,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1206,
																"name": "Merchant",
																"nameLocations": [
																	"3863:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 968,
																"src": "3863:8:6"
															},
															"referencedDeclaration": 968,
															"src": "3863:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Merchant_$968_storage_ptr",
																"typeString": "struct PaymentGateway.Merchant"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"baseExpression": {
														"id": 1209,
														"name": "merchants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "3883:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
															"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant storage ref)"
														}
													},
													"id": 1211,
													"indexExpression": {
														"id": 1210,
														"name": "merchantId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "3893:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3883:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Merchant_$968_storage",
														"typeString": "struct PaymentGateway.Merchant storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3863:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1214,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "3922:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Merchant_$968_memory_ptr",
																	"typeString": "struct PaymentGateway.Merchant memory"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3924:6:6",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 967,
															"src": "3922:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d65726368616e74206e6f7420616374697665",
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3932:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc",
																"typeString": "literal_string \"Merchant not active\""
															},
															"value": "Merchant not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc",
																"typeString": "literal_string \"Merchant not active\""
															}
														],
														"id": 1213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3914:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3914:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "3914:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1222,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3997:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4001:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3997:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1226,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PaymentGateway_$1400",
																				"typeString": "contract PaymentGateway"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PaymentGateway_$1400",
																				"typeString": "contract PaymentGateway"
																			}
																		],
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1224,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1228,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1203,
																	"src": "4024:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1220,
																	"name": "stableCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "3973:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IStableCoin_$940",
																		"typeString": "contract IStableCoin"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3984:12:6",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 876,
																"src": "3973:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3973:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4033:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3965:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3965:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "3965:86:6"
											},
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1233,
															"name": "merchantBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "4061:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1235,
														"indexExpression": {
															"id": 1234,
															"name": "merchantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4078:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4061:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1236,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "4093:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4061:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "4061:38:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1240,
															"name": "merchantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4131:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1241,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4143:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4147:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4143:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "4155:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1239,
														"name": "PaymentReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "4115:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4115:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "EmitStatement",
												"src": "4110:52:6"
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "3581:201:6",
										"text": " @dev Pay a merchant directly in cUSD. User must have approved this contract to spend cUSD.\n @param merchantId The merchant to pay\n @param amount The amount of cUSD to pay"
									},
									"functionSelector": "4793f1d9",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payMerchant",
									"nameLocation": "3796:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "merchantId",
												"nameLocation": "3816:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "3808:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1200,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3836:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "3828:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3828:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:36:6"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3853:0:6"
									},
									"scope": 1400,
									"src": "3787:382:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "4505:438:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1256,
																	"name": "merchants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "4523:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
																		"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant storage ref)"
																	}
																},
																"id": 1258,
																"indexExpression": {
																	"id": 1257,
																	"name": "merchantId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "4533:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4523:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Merchant_$968_storage",
																	"typeString": "struct PaymentGateway.Merchant storage ref"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4545:6:6",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 967,
															"src": "4523:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d65726368616e74206e6f7420616374697665",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4553:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc",
																"typeString": "literal_string \"Merchant not active\""
															},
															"value": "Merchant not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc",
																"typeString": "literal_string \"Merchant not active\""
															}
														],
														"id": 1255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4515:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "4515:60:6"
											},
											{
												"assignments": [
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "4593:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1304,
														"src": "4585:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4585:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1268,
												"initialValue": {
													"baseExpression": {
														"id": 1265,
														"name": "merchantBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "4603:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1267,
													"indexExpression": {
														"id": 1266,
														"name": "merchantId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "4620:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4603:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4585:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1270,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "4649:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4659:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4649:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2062616c616e636520746f207769746864726177",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4662:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5",
																"typeString": "literal_string \"No balance to withdraw\""
															},
															"value": "No balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5",
																"typeString": "literal_string \"No balance to withdraw\""
															}
														],
														"id": 1269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4641:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4641:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "4641:46:6"
											},
											{
												"expression": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1276,
															"name": "merchantBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "4698:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1278,
														"indexExpression": {
															"id": 1277,
															"name": "merchantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "4715:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4698:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4729:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4698:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "4698:32:6"
											},
											{
												"assignments": [
													1283
												],
												"declarations": [
													{
														"constant": false,
														"id": 1283,
														"mutability": "mutable",
														"name": "payout",
														"nameLocation": "4756:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1304,
														"src": "4740:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 1282,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4740:15:6",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1288,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1284,
															"name": "merchants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "4765:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
																"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant storage ref)"
															}
														},
														"id": 1286,
														"indexExpression": {
															"id": 1285,
															"name": "merchantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "4775:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4765:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Merchant_$968_storage",
															"typeString": "struct PaymentGateway.Merchant storage ref"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4787:13:6",
													"memberName": "payoutAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 965,
													"src": "4765:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4740:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1292,
																	"name": "payout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "4839:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 1293,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1264,
																	"src": "4847:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1290,
																	"name": "stableCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "4819:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IStableCoin_$940",
																		"typeString": "contract IStableCoin"
																	}
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4830:8:6",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 844,
																"src": "4819:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4819:36:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4857:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4811:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4811:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "4811:64:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1299,
															"name": "merchantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "4908:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1300,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "4920:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1301,
															"name": "payout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "4929:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1298,
														"name": "MerchantWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "4890:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (bytes32,uint256,address)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4890:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "EmitStatement",
												"src": "4885:51:6"
											}
										]
									},
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "4175:255:6",
										"text": " @dev Merchant withdraws their accumulated cUSD funds.\n Only owner can trigger this withdrawal in the current example.\n A real scenario would allow the merchant themselves to withdraw.\n @param merchantId The merchant ID"
									},
									"functionSelector": "ad487f23",
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1253,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1252,
												"name": "onlyOwner",
												"nameLocations": [
													"4495:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4495:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4495:9:6"
										}
									],
									"name": "withdrawMerchantFunds",
									"nameLocation": "4444:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "merchantId",
												"nameLocation": "4474:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4466:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:20:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4505:0:6"
									},
									"scope": 1400,
									"src": "4435:508:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "5560:1234:6",
										"statements": [
											{
												"assignments": [
													1315
												],
												"declarations": [
													{
														"constant": false,
														"id": 1315,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "5586:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1398,
														"src": "5570:17:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Merchant_$968_memory_ptr",
															"typeString": "struct PaymentGateway.Merchant"
														},
														"typeName": {
															"id": 1314,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1313,
																"name": "Merchant",
																"nameLocations": [
																	"5570:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 968,
																"src": "5570:8:6"
															},
															"referencedDeclaration": 968,
															"src": "5570:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Merchant_$968_storage_ptr",
																"typeString": "struct PaymentGateway.Merchant"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1319,
												"initialValue": {
													"baseExpression": {
														"id": 1316,
														"name": "merchants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "5590:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Merchant_$968_storage_$",
															"typeString": "mapping(bytes32 => struct PaymentGateway.Merchant storage ref)"
														}
													},
													"id": 1318,
													"indexExpression": {
														"id": 1317,
														"name": "merchantId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "5600:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5590:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Merchant_$968_storage",
														"typeString": "struct PaymentGateway.Merchant storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5570:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1321,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "5629:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Merchant_$968_memory_ptr",
																	"typeString": "struct PaymentGateway.Merchant memory"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5631:6:6",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 967,
															"src": "5629:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d65726368616e74206e6f7420616374697665",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5639:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc",
																"typeString": "literal_string \"Merchant not active\""
															},
															"value": "Merchant not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb090703fc41bc36e0ca2a8836f3769027014ea923a1a838ce42cf4a4aba9dfc",
																"typeString": "literal_string \"Merchant not active\""
															}
														],
														"id": 1320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5621:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5621:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "5621:40:6"
											},
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "cBTCPriceInCUSD",
														"nameLocation": "5746:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1398,
														"src": "5738:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5738:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1335,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1332,
																	"name": "cBTC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "5798:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICBTC_$959",
																		"typeString": "contract ICBTC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICBTC_$959",
																		"typeString": "contract ICBTC"
																	}
																],
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5790:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1330,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5790:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1328,
															"name": "aggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "5764:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAggregatorOracle_$948",
																"typeString": "contract IAggregatorOracle"
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5775:14:6",
														"memberName": "getMedianPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "5764:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5764:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5738:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1337,
																"name": "cBTCPriceInCUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "5822:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5840:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5822:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207072696365",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5843:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															},
															"value": "Invalid price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															}
														],
														"id": 1336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5814:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5814:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "5814:45:6"
											},
											{
												"assignments": [
													1344
												],
												"declarations": [
													{
														"constant": false,
														"id": 1344,
														"mutability": "mutable",
														"name": "cBTCAmount",
														"nameLocation": "6002:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1398,
														"src": "5994:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1343,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5994:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1351,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1345,
																	"name": "cUSDTargetAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "6016:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6035:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "6016:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1348,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6015:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1349,
														"name": "cBTCPriceInCUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "6043:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6015:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5994:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1355,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6130:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6134:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6130:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1359,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6150:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PaymentGateway_$1400",
																				"typeString": "contract PaymentGateway"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PaymentGateway_$1400",
																				"typeString": "contract PaymentGateway"
																			}
																		],
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6142:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1357,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6142:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6142:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1361,
																	"name": "cBTCAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "6157:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1353,
																	"name": "cBTC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "6112:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICBTC_$959",
																		"typeString": "contract ICBTC"
																	}
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6117:12:6",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 876,
																"src": "6112:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6112:56:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6170:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6104:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:84:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "6104:84:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1371,
																			"name": "dex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "6265:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDexInterface_$956",
																				"typeString": "contract IDexInterface"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IDexInterface_$956",
																				"typeString": "contract IDexInterface"
																			}
																		],
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6257:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1369,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6257:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6257:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1373,
																	"name": "cBTCAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "6271:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1367,
																	"name": "cBTC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "6244:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICBTC_$959",
																		"typeString": "contract ICBTC"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6249:7:6",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 864,
																"src": "6244:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6244:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6342544320617070726f7665206661696c6564",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6284:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375",
																"typeString": "literal_string \"cBTC approve failed\""
															},
															"value": "cBTC approve failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed73ab20576c9d85ce74ed0a4f02999b60dad28851ea1a8445c7e9b986133375",
																"typeString": "literal_string \"cBTC approve failed\""
															}
														],
														"id": 1366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6236:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6236:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "6236:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1381,
															"name": "cBTCAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "6541:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1382,
															"name": "cUSDTargetAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "6553:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1378,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "6521:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDexInterface_$956",
																"typeString": "contract IDexInterface"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6525:15:6",
														"memberName": "swapCBTCForCUSD",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "6521:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) external"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6521:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "6521:49:6"
											},
											{
												"expression": {
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1385,
															"name": "merchantBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "6666:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1387,
														"indexExpression": {
															"id": 1386,
															"name": "merchantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "6683:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6666:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1388,
														"name": "cUSDTargetAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "6698:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6666:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "6666:48:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1392,
															"name": "merchantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "6746:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1393,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6758:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6762:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6758:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1395,
															"name": "cUSDTargetAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "6770:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1391,
														"name": "PaymentReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "6730:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6730:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "EmitStatement",
												"src": "6725:62:6"
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "4949:524:6",
										"text": " @dev Pay a merchant using cBTC. This function:\n 1. Calculates how much cBTC is needed for the target cUSD amount using aggregator prices.\n 2. Transfers cBTC from the user.\n 3. Approves the DEX to spend cBTC.\n 4. Calls the DEX to swap cBTC into cUSD.\n 5. Credits the merchant in cUSD.\n User must have approved this contract to spend cBTC.\n @param merchantId The merchant to pay\n @param cUSDTargetAmount How many cUSD the merchant should receive"
									},
									"functionSelector": "5143fe12",
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payMerchantInCBTC",
									"nameLocation": "5487:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "merchantId",
												"nameLocation": "5513:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5505:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1307,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "cUSDTargetAmount",
												"nameLocation": "5533:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5525:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5525:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5504:46:6"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5560:0:6"
									},
									"scope": 1400,
									"src": "5478:1316:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1401,
							"src": "600:6196:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								995,
								1003,
								1011,
								1019
							]
						}
					],
					"src": "32:6765:6"
				},
				"id": 6
			}
		}
	}
}