{
	"id": "30dd94eb32b8c1328f0784ec46d5285b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CollateralManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/IPriceOracle.sol\";\nimport \"./interfaces/IAggregatorOracle.sol\";\nimport \"./interfaces/ICollateralManager.sol\";\n\ncontract CollateralManager is Ownable, ICollateralManager {\n    struct CollateralInfo {\n        bool isActive;\n        uint256 collateralFactor; \n        uint256 liquidationPenalty;\n    }\n\n    mapping(address => CollateralInfo) public collaterals;\n    IAggregatorOracle public aggregator;\n\n    constructor(address initialOwner, address _aggregator) Ownable(initialOwner) {\n        aggregator = IAggregatorOracle(_aggregator);\n    }\n\n    function addCollateral(address token, uint256 factor, uint256 penalty) external onlyOwner {\n        collaterals[token] = CollateralInfo({\n            isActive: true,\n            collateralFactor: factor,\n            liquidationPenalty: penalty\n        });\n    }\n\n    function removeCollateral(address token) external onlyOwner {\n        collaterals[token].isActive = false;\n    }\n\n    function getCollateralFactor(address token) external view returns (uint256) {\n        return collaterals[token].collateralFactor;\n    }\n\n    function getLiquidationPenalty(address token) external view returns (uint256) {\n        return collaterals[token].liquidationPenalty;\n    }\n\n    function isCollateralActive(address token) external view returns (bool) {\n        return collaterals[token].isActive;\n    }\n\n    function getPrice(address token) external view returns (uint256) {\n        return aggregator.getMedianPrice(token);\n    }\n}\n"
			},
			"contracts/interfaces/ICollateralManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ninterface ICollateralManager {\n    function getCollateralFactor(address token) external view returns (uint256);\n    function getLiquidationPenalty(address token) external view returns (uint256);\n    function isCollateralActive(address token) external view returns (bool);\n    function getPrice(address token) external view returns (uint256);\n}\n"
			},
			"contracts/interfaces/IAggregatorOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ninterface IAggregatorOracle {\n    function getMedianPrice(address token) external view returns (uint256);\n    function addOracle(address token, address oracle) external;\n    function removeOracle(address token, address oracle) external;\n}\n"
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ninterface IPriceOracle {\n    function getPrice(address token) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CollateralManager.sol": {
				"CollateralManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_aggregator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "factor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "penalty",
									"type": "uint256"
								}
							],
							"name": "addCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "aggregator",
							"outputs": [
								{
									"internalType": "contract IAggregatorOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "collaterals",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "collateralFactor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidationPenalty",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getCollateralFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getLiquidationPenalty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isCollateralActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "removeCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CollateralManager.sol\":243:1603  contract CollateralManager is Ownable, ICollateralManager {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CollateralManager.sol\":537:674  constructor(address initialOwner, address _aggregator) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CollateralManager.sol\":600:612  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CollateralManager.sol\":655:666  _aggregator */\n  dup1\n    /* \"contracts/CollateralManager.sol\":624:634  aggregator */\n  0x02\n  0x00\n    /* \"contracts/CollateralManager.sol\":624:667  aggregator = IAggregatorOracle(_aggregator) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CollateralManager.sol\":537:674  constructor(address initialOwner, address _aggregator) Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/CollateralManager.sol\":243:1603  contract CollateralManager is Ownable, ICollateralManager {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":949:1068   */\ntag_36:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_38\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_39\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_22:\n    /* \"#utility.yul\":1445:1469   */\n  tag_41\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_43\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CollateralManager.sol\":243:1603  contract CollateralManager is Ownable, ICollateralManager {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CollateralManager.sol\":243:1603  contract CollateralManager is Ownable, ICollateralManager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xac26a912\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc75cf245\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc99d3a06\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xeeb97d3b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x23617585\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x245a7bfc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x41976e09\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x857f180a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CollateralManager.sol\":1065:1200  function getCollateralFactor(address token) external view returns (uint256) {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollateralManager.sol\":495:530  IAggregatorOracle public aggregator */\n    tag_4:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollateralManager.sol\":1480:1601  function getPrice(address token) external view returns (uint256) {... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/CollateralManager.sol\":1351:1474  function isCollateralActive(address token) external view returns (bool) {... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollateralManager.sol\":1206:1345  function getLiquidationPenalty(address token) external view returns (uint256) {... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CollateralManager.sol\":680:941  function addCollateral(address token, uint256 factor, uint256 penalty) external onlyOwner {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/CollateralManager.sol\":947:1059  function removeCollateral(address token) external onlyOwner {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/CollateralManager.sol\":436:489  mapping(address => CollateralInfo) public collaterals */\n    tag_12:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/CollateralManager.sol\":1065:1200  function getCollateralFactor(address token) external view returns (uint256) {... */\n    tag_18:\n        /* \"contracts/CollateralManager.sol\":1132:1139  uint256 */\n      0x00\n        /* \"contracts/CollateralManager.sol\":1158:1169  collaterals */\n      0x01\n        /* \"contracts/CollateralManager.sol\":1158:1176  collaterals[token] */\n      0x00\n        /* \"contracts/CollateralManager.sol\":1170:1175  token */\n      dup4\n        /* \"contracts/CollateralManager.sol\":1158:1176  collaterals[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CollateralManager.sol\":1158:1193  collaterals[token].collateralFactor */\n      0x01\n      add\n      sload\n        /* \"contracts/CollateralManager.sol\":1151:1193  return collaterals[token].collateralFactor */\n      swap1\n      pop\n        /* \"contracts/CollateralManager.sol\":1065:1200  function getCollateralFactor(address token) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CollateralManager.sol\":495:530  IAggregatorOracle public aggregator */\n    tag_22:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CollateralManager.sol\":1480:1601  function getPrice(address token) external view returns (uint256) {... */\n    tag_27:\n        /* \"contracts/CollateralManager.sol\":1536:1543  uint256 */\n      0x00\n        /* \"contracts/CollateralManager.sol\":1562:1572  aggregator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CollateralManager.sol\":1562:1587  aggregator.getMedianPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadfe34f7\n        /* \"contracts/CollateralManager.sol\":1588:1593  token */\n      dup4\n        /* \"contracts/CollateralManager.sol\":1562:1594  aggregator.getMedianPrice(token) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/CollateralManager.sol\":1555:1594  return aggregator.getMedianPrice(token) */\n      swap1\n      pop\n        /* \"contracts/CollateralManager.sol\":1480:1601  function getPrice(address token) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CollateralManager.sol\":1351:1474  function isCollateralActive(address token) external view returns (bool) {... */\n    tag_33:\n        /* \"contracts/CollateralManager.sol\":1417:1421  bool */\n      0x00\n        /* \"contracts/CollateralManager.sol\":1440:1451  collaterals */\n      0x01\n        /* \"contracts/CollateralManager.sol\":1440:1458  collaterals[token] */\n      0x00\n        /* \"contracts/CollateralManager.sol\":1452:1457  token */\n      dup4\n        /* \"contracts/CollateralManager.sol\":1440:1458  collaterals[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CollateralManager.sol\":1440:1467  collaterals[token].isActive */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CollateralManager.sol\":1433:1467  return collaterals[token].isActive */\n      swap1\n      pop\n        /* \"contracts/CollateralManager.sol\":1351:1474  function isCollateralActive(address token) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CollateralManager.sol\":1206:1345  function getLiquidationPenalty(address token) external view returns (uint256) {... */\n    tag_42:\n        /* \"contracts/CollateralManager.sol\":1275:1282  uint256 */\n      0x00\n        /* \"contracts/CollateralManager.sol\":1301:1312  collaterals */\n      0x01\n        /* \"contracts/CollateralManager.sol\":1301:1319  collaterals[token] */\n      0x00\n        /* \"contracts/CollateralManager.sol\":1313:1318  token */\n      dup4\n        /* \"contracts/CollateralManager.sol\":1301:1319  collaterals[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CollateralManager.sol\":1301:1338  collaterals[token].liquidationPenalty */\n      0x02\n      add\n      sload\n        /* \"contracts/CollateralManager.sol\":1294:1338  return collaterals[token].liquidationPenalty */\n      swap1\n      pop\n        /* \"contracts/CollateralManager.sol\":1206:1345  function getLiquidationPenalty(address token) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CollateralManager.sol\":680:941  function addCollateral(address token, uint256 factor, uint256 penalty) external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/CollateralManager.sol\":801:934  CollateralInfo({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/CollateralManager.sol\":840:844  true */\n      0x01\n        /* \"contracts/CollateralManager.sol\":801:934  CollateralInfo({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CollateralManager.sol\":876:882  factor */\n      dup4\n        /* \"contracts/CollateralManager.sol\":801:934  CollateralInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CollateralManager.sol\":916:923  penalty */\n      dup3\n        /* \"contracts/CollateralManager.sol\":801:934  CollateralInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/CollateralManager.sol\":780:791  collaterals */\n      0x01\n        /* \"contracts/CollateralManager.sol\":780:798  collaterals[token] */\n      0x00\n        /* \"contracts/CollateralManager.sol\":792:797  token */\n      dup6\n        /* \"contracts/CollateralManager.sol\":780:798  collaterals[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CollateralManager.sol\":780:934  collaterals[token] = CollateralInfo({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/CollateralManager.sol\":680:941  function addCollateral(address token, uint256 factor, uint256 penalty) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CollateralManager.sol\":947:1059  function removeCollateral(address token) external onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_79:\n        /* \"contracts/CollateralManager.sol\":1047:1052  false */\n      0x00\n        /* \"contracts/CollateralManager.sol\":1017:1028  collaterals */\n      0x01\n        /* \"contracts/CollateralManager.sol\":1017:1035  collaterals[token] */\n      0x00\n        /* \"contracts/CollateralManager.sol\":1029:1034  token */\n      dup4\n        /* \"contracts/CollateralManager.sol\":1017:1035  collaterals[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CollateralManager.sol\":1017:1044  collaterals[token].isActive */\n      0x00\n      add\n      0x00\n        /* \"contracts/CollateralManager.sol\":1017:1052  collaterals[token].isActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CollateralManager.sol\":947:1059  function removeCollateral(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CollateralManager.sol\":436:489  mapping(address => CollateralInfo) public collaterals */\n    tag_53:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_97:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_99:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_100:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_122\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_99\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_101:\n        /* \"#utility.yul\":641:665   */\n      tag_124\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_100\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_125:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_102:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_127\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_101\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_17:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_130\n      tag_97\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":917:1036   */\n    tag_129:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_131\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_102\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_103:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_104:\n        /* \"#utility.yul\":1346:1370   */\n      tag_134\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_103\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_20:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_136\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_104\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1671   */\n    tag_105:\n        /* \"#utility.yul\":1639:1642   */\n      0x00\n        /* \"#utility.yul\":1660:1665   */\n      dup2\n        /* \"#utility.yul\":1653:1665   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1819   */\n    tag_106:\n        /* \"#utility.yul\":1727:1736   */\n      0x00\n        /* \"#utility.yul\":1760:1813   */\n      tag_139\n        /* \"#utility.yul\":1778:1812   */\n      tag_140\n        /* \"#utility.yul\":1787:1811   */\n      tag_141\n        /* \"#utility.yul\":1805:1810   */\n      dup5\n        /* \"#utility.yul\":1787:1811   */\n      tag_99\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1778:1812   */\n      tag_105\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1760:1813   */\n      tag_99\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1747:1813   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1825:1951   */\n    tag_107:\n        /* \"#utility.yul\":1875:1884   */\n      0x00\n        /* \"#utility.yul\":1908:1945   */\n      tag_143\n        /* \"#utility.yul\":1939:1944   */\n      dup3\n        /* \"#utility.yul\":1908:1945   */\n      tag_106\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1895:1945   */\n      swap1\n      pop\n        /* \"#utility.yul\":1825:1951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2108   */\n    tag_108:\n        /* \"#utility.yul\":2032:2041   */\n      0x00\n        /* \"#utility.yul\":2065:2102   */\n      tag_145\n        /* \"#utility.yul\":2096:2101   */\n      dup3\n        /* \"#utility.yul\":2065:2102   */\n      tag_107\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2052:2102   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:2108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2114:2295   */\n    tag_109:\n        /* \"#utility.yul\":2226:2288   */\n      tag_147\n        /* \"#utility.yul\":2282:2287   */\n      dup2\n        /* \"#utility.yul\":2226:2288   */\n      tag_108\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2221:2224   */\n      dup3\n        /* \"#utility.yul\":2214:2289   */\n      mstore\n        /* \"#utility.yul\":2114:2295   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2573   */\n    tag_24:\n        /* \"#utility.yul\":2419:2423   */\n      0x00\n        /* \"#utility.yul\":2457:2459   */\n      0x20\n        /* \"#utility.yul\":2446:2455   */\n      dup3\n        /* \"#utility.yul\":2442:2460   */\n      add\n        /* \"#utility.yul\":2434:2460   */\n      swap1\n      pop\n        /* \"#utility.yul\":2470:2566   */\n      tag_149\n        /* \"#utility.yul\":2563:2564   */\n      0x00\n        /* \"#utility.yul\":2552:2561   */\n      dup4\n        /* \"#utility.yul\":2548:2565   */\n      add\n        /* \"#utility.yul\":2539:2545   */\n      dup5\n        /* \"#utility.yul\":2470:2566   */\n      tag_109\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2301:2573   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2579:2669   */\n    tag_110:\n        /* \"#utility.yul\":2613:2620   */\n      0x00\n        /* \"#utility.yul\":2656:2661   */\n      dup2\n        /* \"#utility.yul\":2649:2662   */\n      iszero\n        /* \"#utility.yul\":2642:2663   */\n      iszero\n        /* \"#utility.yul\":2631:2663   */\n      swap1\n      pop\n        /* \"#utility.yul\":2579:2669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2675:2784   */\n    tag_111:\n        /* \"#utility.yul\":2756:2777   */\n      tag_152\n        /* \"#utility.yul\":2771:2776   */\n      dup2\n        /* \"#utility.yul\":2756:2777   */\n      tag_110\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2751:2754   */\n      dup3\n        /* \"#utility.yul\":2744:2778   */\n      mstore\n        /* \"#utility.yul\":2675:2784   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3000   */\n    tag_35:\n        /* \"#utility.yul\":2877:2881   */\n      0x00\n        /* \"#utility.yul\":2915:2917   */\n      0x20\n        /* \"#utility.yul\":2904:2913   */\n      dup3\n        /* \"#utility.yul\":2900:2918   */\n      add\n        /* \"#utility.yul\":2892:2918   */\n      swap1\n      pop\n        /* \"#utility.yul\":2928:2993   */\n      tag_154\n        /* \"#utility.yul\":2990:2991   */\n      0x00\n        /* \"#utility.yul\":2979:2988   */\n      dup4\n        /* \"#utility.yul\":2975:2992   */\n      add\n        /* \"#utility.yul\":2966:2972   */\n      dup5\n        /* \"#utility.yul\":2928:2993   */\n      tag_111\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2790:3000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3006:3124   */\n    tag_112:\n        /* \"#utility.yul\":3093:3117   */\n      tag_156\n        /* \"#utility.yul\":3111:3116   */\n      dup2\n        /* \"#utility.yul\":3093:3117   */\n      tag_100\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3088:3091   */\n      dup3\n        /* \"#utility.yul\":3081:3118   */\n      mstore\n        /* \"#utility.yul\":3006:3124   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3130:3352   */\n    tag_39:\n        /* \"#utility.yul\":3223:3227   */\n      0x00\n        /* \"#utility.yul\":3261:3263   */\n      0x20\n        /* \"#utility.yul\":3250:3259   */\n      dup3\n        /* \"#utility.yul\":3246:3264   */\n      add\n        /* \"#utility.yul\":3238:3264   */\n      swap1\n      pop\n        /* \"#utility.yul\":3274:3345   */\n      tag_158\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3331:3340   */\n      dup4\n        /* \"#utility.yul\":3327:3344   */\n      add\n        /* \"#utility.yul\":3318:3324   */\n      dup5\n        /* \"#utility.yul\":3274:3345   */\n      tag_112\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3130:3352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3358:3480   */\n    tag_113:\n        /* \"#utility.yul\":3431:3455   */\n      tag_160\n        /* \"#utility.yul\":3449:3454   */\n      dup2\n        /* \"#utility.yul\":3431:3455   */\n      tag_103\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3424:3429   */\n      dup2\n        /* \"#utility.yul\":3421:3456   */\n      eq\n        /* \"#utility.yul\":3411:3474   */\n      tag_161\n      jumpi\n        /* \"#utility.yul\":3470:3471   */\n      0x00\n        /* \"#utility.yul\":3467:3468   */\n      dup1\n        /* \"#utility.yul\":3460:3472   */\n      revert\n        /* \"#utility.yul\":3411:3474   */\n    tag_161:\n        /* \"#utility.yul\":3358:3480   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3625   */\n    tag_114:\n        /* \"#utility.yul\":3532:3537   */\n      0x00\n        /* \"#utility.yul\":3570:3576   */\n      dup2\n        /* \"#utility.yul\":3557:3577   */\n      calldataload\n        /* \"#utility.yul\":3548:3577   */\n      swap1\n      pop\n        /* \"#utility.yul\":3586:3619   */\n      tag_163\n        /* \"#utility.yul\":3613:3618   */\n      dup2\n        /* \"#utility.yul\":3586:3619   */\n      tag_113\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3486:3625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3631:4250   */\n    tag_46:\n        /* \"#utility.yul\":3708:3714   */\n      0x00\n        /* \"#utility.yul\":3716:3722   */\n      dup1\n        /* \"#utility.yul\":3724:3730   */\n      0x00\n        /* \"#utility.yul\":3773:3775   */\n      0x60\n        /* \"#utility.yul\":3761:3770   */\n      dup5\n        /* \"#utility.yul\":3752:3759   */\n      dup7\n        /* \"#utility.yul\":3748:3771   */\n      sub\n        /* \"#utility.yul\":3744:3776   */\n      slt\n        /* \"#utility.yul\":3741:3860   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":3779:3858   */\n      tag_166\n      tag_97\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3741:3860   */\n    tag_165:\n        /* \"#utility.yul\":3899:3900   */\n      0x00\n        /* \"#utility.yul\":3924:3977   */\n      tag_167\n        /* \"#utility.yul\":3969:3976   */\n      dup7\n        /* \"#utility.yul\":3960:3966   */\n      dup3\n        /* \"#utility.yul\":3949:3958   */\n      dup8\n        /* \"#utility.yul\":3945:3967   */\n      add\n        /* \"#utility.yul\":3924:3977   */\n      tag_102\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3914:3977   */\n      swap4\n      pop\n        /* \"#utility.yul\":3870:3987   */\n      pop\n        /* \"#utility.yul\":4026:4028   */\n      0x20\n        /* \"#utility.yul\":4052:4105   */\n      tag_168\n        /* \"#utility.yul\":4097:4104   */\n      dup7\n        /* \"#utility.yul\":4088:4094   */\n      dup3\n        /* \"#utility.yul\":4077:4086   */\n      dup8\n        /* \"#utility.yul\":4073:4095   */\n      add\n        /* \"#utility.yul\":4052:4105   */\n      tag_114\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4042:4105   */\n      swap3\n      pop\n        /* \"#utility.yul\":3997:4115   */\n      pop\n        /* \"#utility.yul\":4154:4156   */\n      0x40\n        /* \"#utility.yul\":4180:4233   */\n      tag_169\n        /* \"#utility.yul\":4225:4232   */\n      dup7\n        /* \"#utility.yul\":4216:4222   */\n      dup3\n        /* \"#utility.yul\":4205:4214   */\n      dup8\n        /* \"#utility.yul\":4201:4223   */\n      add\n        /* \"#utility.yul\":4180:4233   */\n      tag_114\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4170:4233   */\n      swap2\n      pop\n        /* \"#utility.yul\":4125:4243   */\n      pop\n        /* \"#utility.yul\":3631:4250   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4256:4686   */\n    tag_55:\n        /* \"#utility.yul\":4399:4403   */\n      0x00\n        /* \"#utility.yul\":4437:4439   */\n      0x60\n        /* \"#utility.yul\":4426:4435   */\n      dup3\n        /* \"#utility.yul\":4422:4440   */\n      add\n        /* \"#utility.yul\":4414:4440   */\n      swap1\n      pop\n        /* \"#utility.yul\":4450:4515   */\n      tag_171\n        /* \"#utility.yul\":4512:4513   */\n      0x00\n        /* \"#utility.yul\":4501:4510   */\n      dup4\n        /* \"#utility.yul\":4497:4514   */\n      add\n        /* \"#utility.yul\":4488:4494   */\n      dup7\n        /* \"#utility.yul\":4450:4515   */\n      tag_111\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4525:4597   */\n      tag_172\n        /* \"#utility.yul\":4593:4595   */\n      0x20\n        /* \"#utility.yul\":4582:4591   */\n      dup4\n        /* \"#utility.yul\":4578:4596   */\n      add\n        /* \"#utility.yul\":4569:4575   */\n      dup6\n        /* \"#utility.yul\":4525:4597   */\n      tag_104\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4607:4679   */\n      tag_173\n        /* \"#utility.yul\":4675:4677   */\n      0x40\n        /* \"#utility.yul\":4664:4673   */\n      dup4\n        /* \"#utility.yul\":4660:4678   */\n      add\n        /* \"#utility.yul\":4651:4657   */\n      dup5\n        /* \"#utility.yul\":4607:4679   */\n      tag_104\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4256:4686   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4692:4835   */\n    tag_115:\n        /* \"#utility.yul\":4749:4754   */\n      0x00\n        /* \"#utility.yul\":4780:4786   */\n      dup2\n        /* \"#utility.yul\":4774:4787   */\n      mload\n        /* \"#utility.yul\":4765:4787   */\n      swap1\n      pop\n        /* \"#utility.yul\":4796:4829   */\n      tag_175\n        /* \"#utility.yul\":4823:4828   */\n      dup2\n        /* \"#utility.yul\":4796:4829   */\n      tag_113\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4692:4835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4841:5192   */\n    tag_65:\n        /* \"#utility.yul\":4911:4917   */\n      0x00\n        /* \"#utility.yul\":4960:4962   */\n      0x20\n        /* \"#utility.yul\":4948:4957   */\n      dup3\n        /* \"#utility.yul\":4939:4946   */\n      dup5\n        /* \"#utility.yul\":4935:4958   */\n      sub\n        /* \"#utility.yul\":4931:4963   */\n      slt\n        /* \"#utility.yul\":4928:5047   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":4966:5045   */\n      tag_178\n      tag_97\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4928:5047   */\n    tag_177:\n        /* \"#utility.yul\":5086:5087   */\n      0x00\n        /* \"#utility.yul\":5111:5175   */\n      tag_179\n        /* \"#utility.yul\":5167:5174   */\n      dup5\n        /* \"#utility.yul\":5158:5164   */\n      dup3\n        /* \"#utility.yul\":5147:5156   */\n      dup6\n        /* \"#utility.yul\":5143:5165   */\n      add\n        /* \"#utility.yul\":5111:5175   */\n      tag_115\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5101:5175   */\n      swap2\n      pop\n        /* \"#utility.yul\":5057:5185   */\n      pop\n        /* \"#utility.yul\":4841:5192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122013f4671ce6774c1bc5521e0cbc962e82b9cc6eaa767077313955fb2ea999ef7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_219": {
									"entryPoint": null,
									"id": 219,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 249,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:6",
										"nodeType": "YulBlock",
										"src": "0:1707:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "939:413:6",
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:6",
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nativeSrc": "987:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nativeSrc": "987:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nativeSrc": "952:32:6",
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nativeSrc": "949:119:6",
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nativeSrc": "1078:128:6",
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nativeSrc": "1093:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nativeSrc": "1164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nativeSrc": "1132:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:6",
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nativeSrc": "1231:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nativeSrc": "1303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nativeSrc": "1271:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:6",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:6",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:6",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											},
											{
												"body": {
													"nativeSrc": "1423:53:6",
													"nodeType": "YulBlock",
													"src": "1423:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:6"
																		},
																		"nativeSrc": "1445:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:6"
																},
																"nativeSrc": "1433:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:6"
															},
															"nativeSrc": "1433:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:6",
														"nodeType": "YulTypedName",
														"src": "1411:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:6",
														"nodeType": "YulTypedName",
														"src": "1418:3:6",
														"type": ""
													}
												],
												"src": "1358:118:6"
											},
											{
												"body": {
													"nativeSrc": "1580:124:6",
													"nodeType": "YulBlock",
													"src": "1580:124:6",
													"statements": [
														{
															"nativeSrc": "1590:26:6",
															"nodeType": "YulAssignment",
															"src": "1590:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:6"
																},
																"nativeSrc": "1598:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:6"
																		},
																		"nativeSrc": "1679:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:6"
																},
																"nativeSrc": "1626:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:6"
															},
															"nativeSrc": "1626:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:6",
														"nodeType": "YulTypedName",
														"src": "1552:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:6",
														"nodeType": "YulTypedName",
														"src": "1564:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:6",
														"nodeType": "YulTypedName",
														"src": "1575:4:6",
														"type": ""
													}
												],
												"src": "1482:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610c57380380610c5783398181016040528101906100319190610218565b815f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610265565b60405180910390fd5b6100b1816100f960201b60201c565b508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061027e565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e7826101be565b9050919050565b6101f7816101dd565b8114610201575f80fd5b50565b5f81519050610212816101ee565b92915050565b5f806040838503121561022e5761022d6101ba565b5b5f61023b85828601610204565b925050602061024c85828601610204565b9150509250929050565b61025f816101dd565b82525050565b5f6020820190506102785f830184610256565b92915050565b6109cc8061028b5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80638da5cb5b1161006f5780638da5cb5b14610163578063ac26a91214610181578063c75cf245146101b1578063c99d3a06146101cd578063eeb97d3b146101e9578063f2fde38b1461021b576100a7565b806323617585146100ab578063245a7bfc146100db57806341976e09146100f9578063715018a614610129578063857f180a14610133575b5f80fd5b6100c560048036038101906100c0919061077d565b610237565b6040516100d291906107c0565b60405180910390f35b6100e3610280565b6040516100f09190610834565b60405180910390f35b610113600480360381019061010e919061077d565b6102a5565b60405161012091906107c0565b60405180910390f35b610131610346565b005b61014d6004803603810190610148919061077d565b610359565b60405161015a9190610867565b60405180910390f35b61016b6103ad565b604051610178919061088f565b60405180910390f35b61019b6004803603810190610196919061077d565b6103d4565b6040516101a891906107c0565b60405180910390f35b6101cb60048036038101906101c691906108d2565b61041d565b005b6101e760048036038101906101e2919061077d565b6104b9565b005b61020360048036038101906101fe919061077d565b61051a565b60405161021293929190610922565b60405180910390f35b6102356004803603810190610230919061077d565b61054c565b005b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101549050919050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adfe34f7836040518263ffffffff1660e01b8152600401610300919061088f565b602060405180830381865afa15801561031b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061033f919061096b565b9050919050565b61034e6105d0565b6103575f610657565b565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff169050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201549050919050565b6104256105d0565b60405180606001604052806001151581526020018381526020018281525060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151816001015560408201518160020155905050505050565b6104c16105d0565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff02191690831515021790555050565b6001602052805f5260405f205f91509050805f015f9054906101000a900460ff16908060010154908060020154905083565b6105546105d0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105c4575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105bb919061088f565b60405180910390fd5b6105cd81610657565b50565b6105d8610718565b73ffffffffffffffffffffffffffffffffffffffff166105f66103ad565b73ffffffffffffffffffffffffffffffffffffffff161461065557610619610718565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161064c919061088f565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61074c82610723565b9050919050565b61075c81610742565b8114610766575f80fd5b50565b5f8135905061077781610753565b92915050565b5f602082840312156107925761079161071f565b5b5f61079f84828501610769565b91505092915050565b5f819050919050565b6107ba816107a8565b82525050565b5f6020820190506107d35f8301846107b1565b92915050565b5f819050919050565b5f6107fc6107f76107f284610723565b6107d9565b610723565b9050919050565b5f61080d826107e2565b9050919050565b5f61081e82610803565b9050919050565b61082e81610814565b82525050565b5f6020820190506108475f830184610825565b92915050565b5f8115159050919050565b6108618161084d565b82525050565b5f60208201905061087a5f830184610858565b92915050565b61088981610742565b82525050565b5f6020820190506108a25f830184610880565b92915050565b6108b1816107a8565b81146108bb575f80fd5b50565b5f813590506108cc816108a8565b92915050565b5f805f606084860312156108e9576108e861071f565b5b5f6108f686828701610769565b9350506020610907868287016108be565b9250506040610918868287016108be565b9150509250925092565b5f6060820190506109355f830186610858565b61094260208301856107b1565b61094f60408301846107b1565b949350505050565b5f81519050610965816108a8565b92915050565b5f602082840312156109805761097f61071f565b5b5f61098d84828501610957565b9150509291505056fea264697066735822122013f4671ce6774c1bc5521e0cbc962e82b9cc6eaa767077313955fb2ea999ef7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC57 CODESIZE SUB DUP1 PUSH2 0xC57 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x218 JUMP JUMPDEST DUP2 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xF9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x27E JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7 DUP3 PUSH2 0x1BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7 DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP2 EQ PUSH2 0x201 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x212 DUP2 PUSH2 0x1EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x1BA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B DUP6 DUP3 DUP7 ADD PUSH2 0x204 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24C DUP6 DUP3 DUP7 ADD PUSH2 0x204 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x278 PUSH0 DUP4 ADD DUP5 PUSH2 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9CC DUP1 PUSH2 0x28B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xAC26A912 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xC75CF245 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xC99D3A06 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xEEB97D3B EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21B JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x23617585 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x245A7BFC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x857F180A EQ PUSH2 0x133 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x346 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xADFE34F7 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x357 PUSH0 PUSH2 0x657 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x425 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0x5D0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x554 PUSH2 0x5D0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5CD DUP2 PUSH2 0x657 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5D8 PUSH2 0x718 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5F6 PUSH2 0x3AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x655 JUMPI PUSH2 0x619 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x74C DUP3 PUSH2 0x723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75C DUP2 PUSH2 0x742 JUMP JUMPDEST DUP2 EQ PUSH2 0x766 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x777 DUP2 PUSH2 0x753 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH2 0x791 PUSH2 0x71F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x79F DUP5 DUP3 DUP6 ADD PUSH2 0x769 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7BA DUP2 PUSH2 0x7A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x7B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FC PUSH2 0x7F7 PUSH2 0x7F2 DUP5 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x80D DUP3 PUSH2 0x7E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x81E DUP3 PUSH2 0x803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82E DUP2 PUSH2 0x814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x847 PUSH0 DUP4 ADD DUP5 PUSH2 0x825 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x861 DUP2 PUSH2 0x84D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x87A PUSH0 DUP4 ADD DUP5 PUSH2 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x889 DUP2 PUSH2 0x742 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x880 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B1 DUP2 PUSH2 0x7A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x8BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8CC DUP2 PUSH2 0x8A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E9 JUMPI PUSH2 0x8E8 PUSH2 0x71F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8F6 DUP7 DUP3 DUP8 ADD PUSH2 0x769 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x907 DUP7 DUP3 DUP8 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x918 DUP7 DUP3 DUP8 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x935 PUSH0 DUP4 ADD DUP7 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x942 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x94F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x965 DUP2 PUSH2 0x8A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x980 JUMPI PUSH2 0x97F PUSH2 0x71F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x98D DUP5 DUP3 DUP6 ADD PUSH2 0x957 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT DELEGATECALL PUSH8 0x1CE6774C1BC5521E 0xC 0xBC SWAP7 0x2E DUP3 0xB9 0xCC PUSH15 0xAA767077313955FB2EA999EF786473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "243:1360:2:-:0;;;537:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;600:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;655:11:2::1;624:10;;:43;;;;;;;;;;;;;;;;;;537:137:::0;;243:1360;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;243:1360:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1488,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1816,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1623,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addCollateral_241": {
									"entryPoint": 1053,
									"id": 241,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@aggregator_202": {
									"entryPoint": 640,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collaterals_199": {
									"entryPoint": 1306,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCollateralFactor_269": {
									"entryPoint": 567,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLiquidationPenalty_282": {
									"entryPoint": 980,
									"id": 282,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPrice_308": {
									"entryPoint": 677,
									"id": 308,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isCollateralActive_295": {
									"entryPoint": 857,
									"id": 295,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 941,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeCollateral_256": {
									"entryPoint": 1209,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 838,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1356,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IAggregatorOracle_$333_to_t_address_fromStack": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2338,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IAggregatorOracle_$333__to_t_address__fromStack_reversed": {
									"entryPoint": 2100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IAggregatorOracle_$333_to_t_address": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1823,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5195:6",
										"nodeType": "YulBlock",
										"src": "0:5195:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "907:263:6",
													"nodeType": "YulBlock",
													"src": "907:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:6",
																"nodeType": "YulBlock",
																"src": "953:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:6"
																			},
																			"nativeSrc": "955:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:6"
																		},
																		"nativeSrc": "955:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:6"
																		},
																		"nativeSrc": "924:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:6",
																		"nodeType": "YulLiteral",
																		"src": "949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:6"
																},
																"nativeSrc": "920:32:6",
																"nodeType": "YulFunctionCall",
																"src": "920:32:6"
															},
															"nativeSrc": "917:119:6",
															"nodeType": "YulIf",
															"src": "917:119:6"
														},
														{
															"nativeSrc": "1046:117:6",
															"nodeType": "YulBlock",
															"src": "1046:117:6",
															"statements": [
																{
																	"nativeSrc": "1061:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:6"
																				},
																				"nativeSrc": "1121:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:6"
																		},
																		"nativeSrc": "1100:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:6",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:6",
														"nodeType": "YulTypedName",
														"src": "888:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:6",
														"nodeType": "YulTypedName",
														"src": "900:6:6",
														"type": ""
													}
												],
												"src": "841:329:6"
											},
											{
												"body": {
													"nativeSrc": "1221:32:6",
													"nodeType": "YulBlock",
													"src": "1221:32:6",
													"statements": [
														{
															"nativeSrc": "1231:16:6",
															"nodeType": "YulAssignment",
															"src": "1231:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:6",
																"nodeType": "YulIdentifier",
																"src": "1242:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:6",
														"nodeType": "YulTypedName",
														"src": "1203:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:6",
														"nodeType": "YulTypedName",
														"src": "1213:7:6",
														"type": ""
													}
												],
												"src": "1176:77:6"
											},
											{
												"body": {
													"nativeSrc": "1324:53:6",
													"nodeType": "YulBlock",
													"src": "1324:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:6"
																		},
																		"nativeSrc": "1346:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:6"
																},
																"nativeSrc": "1334:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:6"
															},
															"nativeSrc": "1334:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:6",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:6",
														"nodeType": "YulTypedName",
														"src": "1319:3:6",
														"type": ""
													}
												],
												"src": "1259:118:6"
											},
											{
												"body": {
													"nativeSrc": "1481:124:6",
													"nodeType": "YulBlock",
													"src": "1481:124:6",
													"statements": [
														{
															"nativeSrc": "1491:26:6",
															"nodeType": "YulAssignment",
															"src": "1491:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:6"
																},
																"nativeSrc": "1499:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:6"
																		},
																		"nativeSrc": "1580:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:6"
																},
																"nativeSrc": "1527:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:6"
															},
															"nativeSrc": "1527:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:6",
														"nodeType": "YulTypedName",
														"src": "1453:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:6",
														"nodeType": "YulTypedName",
														"src": "1465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:6",
														"nodeType": "YulTypedName",
														"src": "1476:4:6",
														"type": ""
													}
												],
												"src": "1383:222:6"
											},
											{
												"body": {
													"nativeSrc": "1643:28:6",
													"nodeType": "YulBlock",
													"src": "1643:28:6",
													"statements": [
														{
															"nativeSrc": "1653:12:6",
															"nodeType": "YulAssignment",
															"src": "1653:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1660:5:6",
																"nodeType": "YulIdentifier",
																"src": "1660:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1653:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1653:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1611:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1629:5:6",
														"nodeType": "YulTypedName",
														"src": "1629:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1639:3:6",
														"nodeType": "YulTypedName",
														"src": "1639:3:6",
														"type": ""
													}
												],
												"src": "1611:60:6"
											},
											{
												"body": {
													"nativeSrc": "1737:82:6",
													"nodeType": "YulBlock",
													"src": "1737:82:6",
													"statements": [
														{
															"nativeSrc": "1747:66:6",
															"nodeType": "YulAssignment",
															"src": "1747:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1805:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1805:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1787:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1787:17:6"
																				},
																				"nativeSrc": "1787:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1787:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1778:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "1778:8:6"
																		},
																		"nativeSrc": "1778:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1778:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1760:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1760:17:6"
																},
																"nativeSrc": "1760:53:6",
																"nodeType": "YulFunctionCall",
																"src": "1760:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1747:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1677:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1717:5:6",
														"nodeType": "YulTypedName",
														"src": "1717:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1727:9:6",
														"nodeType": "YulTypedName",
														"src": "1727:9:6",
														"type": ""
													}
												],
												"src": "1677:142:6"
											},
											{
												"body": {
													"nativeSrc": "1885:66:6",
													"nodeType": "YulBlock",
													"src": "1885:66:6",
													"statements": [
														{
															"nativeSrc": "1895:50:6",
															"nodeType": "YulAssignment",
															"src": "1895:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1939:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1939:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1908:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "1908:30:6"
																},
																"nativeSrc": "1908:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1908:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1895:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1895:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1825:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1865:5:6",
														"nodeType": "YulTypedName",
														"src": "1865:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1875:9:6",
														"nodeType": "YulTypedName",
														"src": "1875:9:6",
														"type": ""
													}
												],
												"src": "1825:126:6"
											},
											{
												"body": {
													"nativeSrc": "2042:66:6",
													"nodeType": "YulBlock",
													"src": "2042:66:6",
													"statements": [
														{
															"nativeSrc": "2052:50:6",
															"nodeType": "YulAssignment",
															"src": "2052:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2096:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2065:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2065:30:6"
																},
																"nativeSrc": "2065:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2065:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2052:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2052:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IAggregatorOracle_$333_to_t_address",
												"nativeSrc": "1957:151:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2022:5:6",
														"nodeType": "YulTypedName",
														"src": "2022:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2032:9:6",
														"nodeType": "YulTypedName",
														"src": "2032:9:6",
														"type": ""
													}
												],
												"src": "1957:151:6"
											},
											{
												"body": {
													"nativeSrc": "2204:91:6",
													"nodeType": "YulBlock",
													"src": "2204:91:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2221:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2221:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2282:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2282:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IAggregatorOracle_$333_to_t_address",
																			"nativeSrc": "2226:55:6",
																			"nodeType": "YulIdentifier",
																			"src": "2226:55:6"
																		},
																		"nativeSrc": "2226:62:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2226:62:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2214:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2214:6:6"
																},
																"nativeSrc": "2214:75:6",
																"nodeType": "YulFunctionCall",
																"src": "2214:75:6"
															},
															"nativeSrc": "2214:75:6",
															"nodeType": "YulExpressionStatement",
															"src": "2214:75:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IAggregatorOracle_$333_to_t_address_fromStack",
												"nativeSrc": "2114:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2192:5:6",
														"nodeType": "YulTypedName",
														"src": "2192:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2199:3:6",
														"nodeType": "YulTypedName",
														"src": "2199:3:6",
														"type": ""
													}
												],
												"src": "2114:181:6"
											},
											{
												"body": {
													"nativeSrc": "2424:149:6",
													"nodeType": "YulBlock",
													"src": "2424:149:6",
													"statements": [
														{
															"nativeSrc": "2434:26:6",
															"nodeType": "YulAssignment",
															"src": "2434:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2446:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2446:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2457:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2457:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2442:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2442:3:6"
																},
																"nativeSrc": "2442:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2442:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2434:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2434:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2539:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2539:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2552:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2563:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2563:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2548:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:6"
																		},
																		"nativeSrc": "2548:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2548:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IAggregatorOracle_$333_to_t_address_fromStack",
																	"nativeSrc": "2470:68:6",
																	"nodeType": "YulIdentifier",
																	"src": "2470:68:6"
																},
																"nativeSrc": "2470:96:6",
																"nodeType": "YulFunctionCall",
																"src": "2470:96:6"
															},
															"nativeSrc": "2470:96:6",
															"nodeType": "YulExpressionStatement",
															"src": "2470:96:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IAggregatorOracle_$333__to_t_address__fromStack_reversed",
												"nativeSrc": "2301:272:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2396:9:6",
														"nodeType": "YulTypedName",
														"src": "2396:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2408:6:6",
														"nodeType": "YulTypedName",
														"src": "2408:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2419:4:6",
														"nodeType": "YulTypedName",
														"src": "2419:4:6",
														"type": ""
													}
												],
												"src": "2301:272:6"
											},
											{
												"body": {
													"nativeSrc": "2621:48:6",
													"nodeType": "YulBlock",
													"src": "2621:48:6",
													"statements": [
														{
															"nativeSrc": "2631:32:6",
															"nodeType": "YulAssignment",
															"src": "2631:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2656:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2649:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2649:6:6"
																		},
																		"nativeSrc": "2649:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2649:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2642:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:6"
																},
																"nativeSrc": "2642:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2642:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2631:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2631:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2579:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2603:5:6",
														"nodeType": "YulTypedName",
														"src": "2603:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2613:7:6",
														"nodeType": "YulTypedName",
														"src": "2613:7:6",
														"type": ""
													}
												],
												"src": "2579:90:6"
											},
											{
												"body": {
													"nativeSrc": "2734:50:6",
													"nodeType": "YulBlock",
													"src": "2734:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2751:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2751:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2771:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2771:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2756:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "2756:14:6"
																		},
																		"nativeSrc": "2756:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2756:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2744:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:6"
																},
																"nativeSrc": "2744:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2744:34:6"
															},
															"nativeSrc": "2744:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2744:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2675:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2722:5:6",
														"nodeType": "YulTypedName",
														"src": "2722:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2729:3:6",
														"nodeType": "YulTypedName",
														"src": "2729:3:6",
														"type": ""
													}
												],
												"src": "2675:109:6"
											},
											{
												"body": {
													"nativeSrc": "2882:118:6",
													"nodeType": "YulBlock",
													"src": "2882:118:6",
													"statements": [
														{
															"nativeSrc": "2892:26:6",
															"nodeType": "YulAssignment",
															"src": "2892:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2904:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2904:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2915:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2915:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2900:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2900:3:6"
																},
																"nativeSrc": "2900:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2900:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2892:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2892:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2966:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2966:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2979:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2979:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2990:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2990:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2975:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2975:3:6"
																		},
																		"nativeSrc": "2975:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2928:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "2928:37:6"
																},
																"nativeSrc": "2928:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2928:65:6"
															},
															"nativeSrc": "2928:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2928:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2790:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2854:9:6",
														"nodeType": "YulTypedName",
														"src": "2854:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2866:6:6",
														"nodeType": "YulTypedName",
														"src": "2866:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2877:4:6",
														"nodeType": "YulTypedName",
														"src": "2877:4:6",
														"type": ""
													}
												],
												"src": "2790:210:6"
											},
											{
												"body": {
													"nativeSrc": "3071:53:6",
													"nodeType": "YulBlock",
													"src": "3071:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3088:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3088:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3111:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3111:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3093:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3093:17:6"
																		},
																		"nativeSrc": "3093:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3093:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3081:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3081:6:6"
																},
																"nativeSrc": "3081:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3081:37:6"
															},
															"nativeSrc": "3081:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3081:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3006:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3059:5:6",
														"nodeType": "YulTypedName",
														"src": "3059:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3066:3:6",
														"nodeType": "YulTypedName",
														"src": "3066:3:6",
														"type": ""
													}
												],
												"src": "3006:118:6"
											},
											{
												"body": {
													"nativeSrc": "3228:124:6",
													"nodeType": "YulBlock",
													"src": "3228:124:6",
													"statements": [
														{
															"nativeSrc": "3238:26:6",
															"nodeType": "YulAssignment",
															"src": "3238:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3250:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3250:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3261:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3246:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3246:3:6"
																},
																"nativeSrc": "3246:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3246:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3238:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3238:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3318:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3318:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3331:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3331:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3342:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3342:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3327:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3327:3:6"
																		},
																		"nativeSrc": "3327:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3327:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3274:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3274:43:6"
																},
																"nativeSrc": "3274:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3274:71:6"
															},
															"nativeSrc": "3274:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3274:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3130:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3200:9:6",
														"nodeType": "YulTypedName",
														"src": "3200:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3212:6:6",
														"nodeType": "YulTypedName",
														"src": "3212:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3223:4:6",
														"nodeType": "YulTypedName",
														"src": "3223:4:6",
														"type": ""
													}
												],
												"src": "3130:222:6"
											},
											{
												"body": {
													"nativeSrc": "3401:79:6",
													"nodeType": "YulBlock",
													"src": "3401:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3458:16:6",
																"nodeType": "YulBlock",
																"src": "3458:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3467:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3467:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3470:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3470:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3460:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:6"
																			},
																			"nativeSrc": "3460:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3460:12:6"
																		},
																		"nativeSrc": "3460:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3460:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3424:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3424:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3449:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3449:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3431:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3431:17:6"
																				},
																				"nativeSrc": "3431:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3431:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3421:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3421:2:6"
																		},
																		"nativeSrc": "3421:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3421:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:43:6"
															},
															"nativeSrc": "3411:63:6",
															"nodeType": "YulIf",
															"src": "3411:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3358:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3394:5:6",
														"nodeType": "YulTypedName",
														"src": "3394:5:6",
														"type": ""
													}
												],
												"src": "3358:122:6"
											},
											{
												"body": {
													"nativeSrc": "3538:87:6",
													"nodeType": "YulBlock",
													"src": "3538:87:6",
													"statements": [
														{
															"nativeSrc": "3548:29:6",
															"nodeType": "YulAssignment",
															"src": "3548:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3570:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3570:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3557:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3557:12:6"
																},
																"nativeSrc": "3557:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3557:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3548:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3548:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3613:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3613:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3586:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3586:26:6"
																},
																"nativeSrc": "3586:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3586:33:6"
															},
															"nativeSrc": "3586:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3586:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3486:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3516:6:6",
														"nodeType": "YulTypedName",
														"src": "3516:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3524:3:6",
														"nodeType": "YulTypedName",
														"src": "3524:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3532:5:6",
														"nodeType": "YulTypedName",
														"src": "3532:5:6",
														"type": ""
													}
												],
												"src": "3486:139:6"
											},
											{
												"body": {
													"nativeSrc": "3731:519:6",
													"nodeType": "YulBlock",
													"src": "3731:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3777:83:6",
																"nodeType": "YulBlock",
																"src": "3777:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3779:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3779:77:6"
																			},
																			"nativeSrc": "3779:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3779:79:6"
																		},
																		"nativeSrc": "3779:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3779:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3752:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3752:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3761:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3748:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3748:3:6"
																		},
																		"nativeSrc": "3748:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3748:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3773:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3773:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3744:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3744:3:6"
																},
																"nativeSrc": "3744:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3744:32:6"
															},
															"nativeSrc": "3741:119:6",
															"nodeType": "YulIf",
															"src": "3741:119:6"
														},
														{
															"nativeSrc": "3870:117:6",
															"nodeType": "YulBlock",
															"src": "3870:117:6",
															"statements": [
																{
																	"nativeSrc": "3885:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3885:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3899:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3899:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3889:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3889:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3914:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3914:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3949:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3949:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3960:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3960:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3945:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3945:3:6"
																				},
																				"nativeSrc": "3945:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3945:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3969:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3969:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3924:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3924:20:6"
																		},
																		"nativeSrc": "3924:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3914:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3914:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3997:118:6",
															"nodeType": "YulBlock",
															"src": "3997:118:6",
															"statements": [
																{
																	"nativeSrc": "4012:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4012:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4026:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4026:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4016:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4016:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4042:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4042:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4077:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4077:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4088:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4088:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4073:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4073:3:6"
																				},
																				"nativeSrc": "4073:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4073:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4097:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4097:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4052:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4052:20:6"
																		},
																		"nativeSrc": "4052:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4052:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4042:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4042:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4125:118:6",
															"nodeType": "YulBlock",
															"src": "4125:118:6",
															"statements": [
																{
																	"nativeSrc": "4140:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4140:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4154:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4154:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4144:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4144:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4170:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4170:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4205:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4205:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4216:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4216:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4201:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4201:3:6"
																				},
																				"nativeSrc": "4201:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4201:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4225:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4225:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4180:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4180:20:6"
																		},
																		"nativeSrc": "4180:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4180:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4170:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4170:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "3631:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3685:9:6",
														"nodeType": "YulTypedName",
														"src": "3685:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3696:7:6",
														"nodeType": "YulTypedName",
														"src": "3696:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3708:6:6",
														"nodeType": "YulTypedName",
														"src": "3708:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3716:6:6",
														"nodeType": "YulTypedName",
														"src": "3716:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3724:6:6",
														"nodeType": "YulTypedName",
														"src": "3724:6:6",
														"type": ""
													}
												],
												"src": "3631:619:6"
											},
											{
												"body": {
													"nativeSrc": "4404:282:6",
													"nodeType": "YulBlock",
													"src": "4404:282:6",
													"statements": [
														{
															"nativeSrc": "4414:26:6",
															"nodeType": "YulAssignment",
															"src": "4414:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4426:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4426:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4437:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4437:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4422:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4422:3:6"
																},
																"nativeSrc": "4422:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4422:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4414:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4414:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4488:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4488:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4501:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4501:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4512:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4512:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4497:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4497:3:6"
																		},
																		"nativeSrc": "4497:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4497:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4450:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "4450:37:6"
																},
																"nativeSrc": "4450:65:6",
																"nodeType": "YulFunctionCall",
																"src": "4450:65:6"
															},
															"nativeSrc": "4450:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "4450:65:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4569:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4569:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4582:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4582:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4593:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4593:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4578:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:6"
																		},
																		"nativeSrc": "4578:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4578:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4525:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4525:43:6"
																},
																"nativeSrc": "4525:72:6",
																"nodeType": "YulFunctionCall",
																"src": "4525:72:6"
															},
															"nativeSrc": "4525:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "4525:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4675:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4675:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4660:3:6"
																		},
																		"nativeSrc": "4660:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4660:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4607:43:6"
																},
																"nativeSrc": "4607:72:6",
																"nodeType": "YulFunctionCall",
																"src": "4607:72:6"
															},
															"nativeSrc": "4607:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "4607:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4256:430:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4360:9:6",
														"nodeType": "YulTypedName",
														"src": "4360:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4372:6:6",
														"nodeType": "YulTypedName",
														"src": "4372:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4380:6:6",
														"nodeType": "YulTypedName",
														"src": "4380:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4388:6:6",
														"nodeType": "YulTypedName",
														"src": "4388:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4399:4:6",
														"nodeType": "YulTypedName",
														"src": "4399:4:6",
														"type": ""
													}
												],
												"src": "4256:430:6"
											},
											{
												"body": {
													"nativeSrc": "4755:80:6",
													"nodeType": "YulBlock",
													"src": "4755:80:6",
													"statements": [
														{
															"nativeSrc": "4765:22:6",
															"nodeType": "YulAssignment",
															"src": "4765:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4780:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4774:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4774:5:6"
																},
																"nativeSrc": "4774:13:6",
																"nodeType": "YulFunctionCall",
																"src": "4774:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4765:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4765:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "4796:26:6"
																},
																"nativeSrc": "4796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "4796:33:6"
															},
															"nativeSrc": "4796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "4796:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4692:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4733:6:6",
														"nodeType": "YulTypedName",
														"src": "4733:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4741:3:6",
														"nodeType": "YulTypedName",
														"src": "4741:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4749:5:6",
														"nodeType": "YulTypedName",
														"src": "4749:5:6",
														"type": ""
													}
												],
												"src": "4692:143:6"
											},
											{
												"body": {
													"nativeSrc": "4918:274:6",
													"nodeType": "YulBlock",
													"src": "4918:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4964:83:6",
																"nodeType": "YulBlock",
																"src": "4964:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4966:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4966:77:6"
																			},
																			"nativeSrc": "4966:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4966:79:6"
																		},
																		"nativeSrc": "4966:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4966:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4939:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4939:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4948:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4948:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4935:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4935:3:6"
																		},
																		"nativeSrc": "4935:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4935:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4960:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4960:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4931:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4931:3:6"
																},
																"nativeSrc": "4931:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4931:32:6"
															},
															"nativeSrc": "4928:119:6",
															"nodeType": "YulIf",
															"src": "4928:119:6"
														},
														{
															"nativeSrc": "5057:128:6",
															"nodeType": "YulBlock",
															"src": "5057:128:6",
															"statements": [
																{
																	"nativeSrc": "5072:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5072:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5086:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5086:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5101:74:6",
																	"nodeType": "YulAssignment",
																	"src": "5101:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5147:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5147:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5158:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5158:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5143:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5143:3:6"
																				},
																				"nativeSrc": "5143:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5143:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5167:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5167:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5111:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "5111:31:6"
																		},
																		"nativeSrc": "5111:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5111:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5101:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5101:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4841:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4888:9:6",
														"nodeType": "YulTypedName",
														"src": "4888:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4899:7:6",
														"nodeType": "YulTypedName",
														"src": "4899:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4911:6:6",
														"nodeType": "YulTypedName",
														"src": "4911:6:6",
														"type": ""
													}
												],
												"src": "4841:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IAggregatorOracle_$333_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IAggregatorOracle_$333_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IAggregatorOracle_$333_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IAggregatorOracle_$333__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IAggregatorOracle_$333_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80638da5cb5b1161006f5780638da5cb5b14610163578063ac26a91214610181578063c75cf245146101b1578063c99d3a06146101cd578063eeb97d3b146101e9578063f2fde38b1461021b576100a7565b806323617585146100ab578063245a7bfc146100db57806341976e09146100f9578063715018a614610129578063857f180a14610133575b5f80fd5b6100c560048036038101906100c0919061077d565b610237565b6040516100d291906107c0565b60405180910390f35b6100e3610280565b6040516100f09190610834565b60405180910390f35b610113600480360381019061010e919061077d565b6102a5565b60405161012091906107c0565b60405180910390f35b610131610346565b005b61014d6004803603810190610148919061077d565b610359565b60405161015a9190610867565b60405180910390f35b61016b6103ad565b604051610178919061088f565b60405180910390f35b61019b6004803603810190610196919061077d565b6103d4565b6040516101a891906107c0565b60405180910390f35b6101cb60048036038101906101c691906108d2565b61041d565b005b6101e760048036038101906101e2919061077d565b6104b9565b005b61020360048036038101906101fe919061077d565b61051a565b60405161021293929190610922565b60405180910390f35b6102356004803603810190610230919061077d565b61054c565b005b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101549050919050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adfe34f7836040518263ffffffff1660e01b8152600401610300919061088f565b602060405180830381865afa15801561031b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061033f919061096b565b9050919050565b61034e6105d0565b6103575f610657565b565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff169050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201549050919050565b6104256105d0565b60405180606001604052806001151581526020018381526020018281525060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151816001015560408201518160020155905050505050565b6104c16105d0565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff02191690831515021790555050565b6001602052805f5260405f205f91509050805f015f9054906101000a900460ff16908060010154908060020154905083565b6105546105d0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105c4575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105bb919061088f565b60405180910390fd5b6105cd81610657565b50565b6105d8610718565b73ffffffffffffffffffffffffffffffffffffffff166105f66103ad565b73ffffffffffffffffffffffffffffffffffffffff161461065557610619610718565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161064c919061088f565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61074c82610723565b9050919050565b61075c81610742565b8114610766575f80fd5b50565b5f8135905061077781610753565b92915050565b5f602082840312156107925761079161071f565b5b5f61079f84828501610769565b91505092915050565b5f819050919050565b6107ba816107a8565b82525050565b5f6020820190506107d35f8301846107b1565b92915050565b5f819050919050565b5f6107fc6107f76107f284610723565b6107d9565b610723565b9050919050565b5f61080d826107e2565b9050919050565b5f61081e82610803565b9050919050565b61082e81610814565b82525050565b5f6020820190506108475f830184610825565b92915050565b5f8115159050919050565b6108618161084d565b82525050565b5f60208201905061087a5f830184610858565b92915050565b61088981610742565b82525050565b5f6020820190506108a25f830184610880565b92915050565b6108b1816107a8565b81146108bb575f80fd5b50565b5f813590506108cc816108a8565b92915050565b5f805f606084860312156108e9576108e861071f565b5b5f6108f686828701610769565b9350506020610907868287016108be565b9250506040610918868287016108be565b9150509250925092565b5f6060820190506109355f830186610858565b61094260208301856107b1565b61094f60408301846107b1565b949350505050565b5f81519050610965816108a8565b92915050565b5f602082840312156109805761097f61071f565b5b5f61098d84828501610957565b9150509291505056fea264697066735822122013f4671ce6774c1bc5521e0cbc962e82b9cc6eaa767077313955fb2ea999ef7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xAC26A912 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xC75CF245 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xC99D3A06 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xEEB97D3B EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21B JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x23617585 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x245A7BFC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x857F180A EQ PUSH2 0x133 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x346 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xADFE34F7 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x357 PUSH0 PUSH2 0x657 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x425 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0x5D0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x554 PUSH2 0x5D0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5CD DUP2 PUSH2 0x657 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5D8 PUSH2 0x718 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5F6 PUSH2 0x3AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x655 JUMPI PUSH2 0x619 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x74C DUP3 PUSH2 0x723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75C DUP2 PUSH2 0x742 JUMP JUMPDEST DUP2 EQ PUSH2 0x766 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x777 DUP2 PUSH2 0x753 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH2 0x791 PUSH2 0x71F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x79F DUP5 DUP3 DUP6 ADD PUSH2 0x769 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7BA DUP2 PUSH2 0x7A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x7B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FC PUSH2 0x7F7 PUSH2 0x7F2 DUP5 PUSH2 0x723 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x80D DUP3 PUSH2 0x7E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x81E DUP3 PUSH2 0x803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82E DUP2 PUSH2 0x814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x847 PUSH0 DUP4 ADD DUP5 PUSH2 0x825 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x861 DUP2 PUSH2 0x84D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x87A PUSH0 DUP4 ADD DUP5 PUSH2 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x889 DUP2 PUSH2 0x742 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x880 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B1 DUP2 PUSH2 0x7A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x8BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8CC DUP2 PUSH2 0x8A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E9 JUMPI PUSH2 0x8E8 PUSH2 0x71F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8F6 DUP7 DUP3 DUP8 ADD PUSH2 0x769 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x907 DUP7 DUP3 DUP8 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x918 DUP7 DUP3 DUP8 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x935 PUSH0 DUP4 ADD DUP7 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x942 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x94F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x965 DUP2 PUSH2 0x8A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x980 JUMPI PUSH2 0x97F PUSH2 0x71F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x98D DUP5 DUP3 DUP6 ADD PUSH2 0x957 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT DELEGATECALL PUSH8 0x1CE6774C1BC5521E 0xC 0xBC SWAP7 0x2E DUP3 0xB9 0xCC PUSH15 0xAA767077313955FB2EA999EF786473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "243:1360:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1065:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;495:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1480:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1351:123:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1206:139:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;680:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;947:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;436:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1065:135:2;1132:7;1158:11;:18;1170:5;1158:18;;;;;;;;;;;;;;;:35;;;1151:42;;1065:135;;;:::o;495:35::-;;;;;;;;;;;;;:::o;1480:121::-;1536:7;1562:10;;;;;;;;;;;:25;;;1588:5;1562:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1555:39;;1480:121;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1351:123:2:-;1417:4;1440:11;:18;1452:5;1440:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1433:34;;1351:123;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1206:139:2:-;1275:7;1301:11;:18;1313:5;1301:18;;;;;;;;;;;;;;;:37;;;1294:44;;1206:139;;;:::o;680:261::-;1531:13:0;:11;:13::i;:::-;801:133:2::1;;;;;;;;840:4;801:133;;;;;;876:6;801:133;;;;916:7;801:133;;::::0;780:11:::1;:18;792:5;780:18;;;;;;;;;;;;;;;:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:261:::0;;;:::o;947:112::-;1531:13:0;:11;:13::i;:::-;1047:5:2::1;1017:11;:18;1029:5;1017:18;;;;;;;;;;;;;;;:27;;;:35;;;;;;;;;;;;;;;;;;947:112:::0;:::o;436:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:60::-;1639:3;1660:5;1653:12;;1611:60;;;:::o;1677:142::-;1727:9;1760:53;1778:34;1787:24;1805:5;1787:24;:::i;:::-;1778:34;:::i;:::-;1760:53;:::i;:::-;1747:66;;1677:142;;;:::o;1825:126::-;1875:9;1908:37;1939:5;1908:37;:::i;:::-;1895:50;;1825:126;;;:::o;1957:151::-;2032:9;2065:37;2096:5;2065:37;:::i;:::-;2052:50;;1957:151;;;:::o;2114:181::-;2226:62;2282:5;2226:62;:::i;:::-;2221:3;2214:75;2114:181;;:::o;2301:272::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2470:96;2563:1;2552:9;2548:17;2539:6;2470:96;:::i;:::-;2301:272;;;;:::o;2579:90::-;2613:7;2656:5;2649:13;2642:21;2631:32;;2579:90;;;:::o;2675:109::-;2756:21;2771:5;2756:21;:::i;:::-;2751:3;2744:34;2675:109;;:::o;2790:210::-;2877:4;2915:2;2904:9;2900:18;2892:26;;2928:65;2990:1;2979:9;2975:17;2966:6;2928:65;:::i;:::-;2790:210;;;;:::o;3006:118::-;3093:24;3111:5;3093:24;:::i;:::-;3088:3;3081:37;3006:118;;:::o;3130:222::-;3223:4;3261:2;3250:9;3246:18;3238:26;;3274:71;3342:1;3331:9;3327:17;3318:6;3274:71;:::i;:::-;3130:222;;;;:::o;3358:122::-;3431:24;3449:5;3431:24;:::i;:::-;3424:5;3421:35;3411:63;;3470:1;3467;3460:12;3411:63;3358:122;:::o;3486:139::-;3532:5;3570:6;3557:20;3548:29;;3586:33;3613:5;3586:33;:::i;:::-;3486:139;;;;:::o;3631:619::-;3708:6;3716;3724;3773:2;3761:9;3752:7;3748:23;3744:32;3741:119;;;3779:79;;:::i;:::-;3741:119;3899:1;3924:53;3969:7;3960:6;3949:9;3945:22;3924:53;:::i;:::-;3914:63;;3870:117;4026:2;4052:53;4097:7;4088:6;4077:9;4073:22;4052:53;:::i;:::-;4042:63;;3997:118;4154:2;4180:53;4225:7;4216:6;4205:9;4201:22;4180:53;:::i;:::-;4170:63;;4125:118;3631:619;;;;;:::o;4256:430::-;4399:4;4437:2;4426:9;4422:18;4414:26;;4450:65;4512:1;4501:9;4497:17;4488:6;4450:65;:::i;:::-;4525:72;4593:2;4582:9;4578:18;4569:6;4525:72;:::i;:::-;4607;4675:2;4664:9;4660:18;4651:6;4607:72;:::i;:::-;4256:430;;;;;;:::o;4692:143::-;4749:5;4780:6;4774:13;4765:22;;4796:33;4823:5;4796:33;:::i;:::-;4692:143;;;;:::o;4841:351::-;4911:6;4960:2;4948:9;4939:7;4935:23;4931:32;4928:119;;;4966:79;;:::i;:::-;4928:119;5086:1;5111:64;5167:7;5158:6;5147:9;5143:22;5111:64;:::i;:::-;5101:74;;5057:128;4841:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "501600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addCollateral(address,uint256,uint256)": "infinite",
								"aggregator()": "infinite",
								"collaterals(address)": "infinite",
								"getCollateralFactor(address)": "2836",
								"getLiquidationPenalty(address)": "2857",
								"getPrice(address)": "infinite",
								"isCollateralActive(address)": "2964",
								"owner()": "2515",
								"removeCollateral(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 1603,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 537,
									"end": 674,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 674,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 537,
									"end": 674,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 537,
									"end": 674,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 537,
									"end": 674,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 537,
									"end": 674,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 537,
									"end": 674,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 537,
									"end": 674,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 600,
									"end": 612,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 655,
									"end": 666,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 624,
									"end": 634,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 624,
									"end": 634,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 674,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1603,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013f4671ce6774c1bc5521e0cbc962e82b9cc6eaa767077313955fb2ea999ef7864736f6c634300081a0033",
									".code": [
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "AC26A912"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "C75CF245"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "C99D3A06"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "EEB97D3B"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "23617585"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "245A7BFC"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "41976E09"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "857F180A"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 1603,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1065,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1065,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 495,
											"end": 530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 495,
											"end": 530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1480,
											"end": 1601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1480,
											"end": 1601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1351,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1351,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1351,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1206,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1206,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 680,
											"end": 941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 680,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 680,
											"end": 941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 680,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 680,
											"end": 941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 947,
											"end": 1059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 947,
											"end": 1059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 436,
											"end": 489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 436,
											"end": 489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 436,
											"end": 489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1175,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1193,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 1193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1193,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 495,
											"end": 530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 495,
											"end": 530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1562,
											"end": 1587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1587,
											"name": "PUSH",
											"source": 2,
											"value": "ADFE34F7"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1562,
											"end": 1594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1562,
											"end": 1594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1562,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1451,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1318,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1301,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 680,
											"end": 941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 876,
											"end": 882,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 916,
											"end": 923,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 801,
											"end": 934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 780,
											"end": 791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 798,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 780,
											"end": 934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1035,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1044,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1052,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 947,
											"end": 1059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 436,
											"end": 489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 436,
											"end": 489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1787,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1778,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1760,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1908,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2108,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1957,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2096,
											"end": 2101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2065,
											"end": 2102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2102,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2065,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2295,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2114,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2226,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2288,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2226,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2289,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2563,
											"end": 2564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2545,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2470,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2566,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2470,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2662,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2663,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2784,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2675,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2771,
											"end": 2776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2756,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2777,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2756,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2754,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2778,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3000,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2790,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2917,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2904,
											"end": 2913,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2928,
											"end": 2993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2993,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2928,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3000,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3124,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3006,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3111,
											"end": 3116,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3093,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3093,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3091,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3118,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3352,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3130,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3274,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3345,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3274,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3352,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3352,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3480,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3358,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3449,
											"end": 3454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3431,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3455,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3431,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3456,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3411,
											"end": 3474,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3472,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3474,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3411,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3625,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3486,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3613,
											"end": 3618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3586,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3619,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3586,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3625,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3625,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 4250,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3631,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3722,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3730,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3775,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3761,
											"end": 3770,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3759,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3771,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3776,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3741,
											"end": 3860,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3741,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3741,
											"end": 3860,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3779,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3779,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3858,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3779,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3741,
											"end": 3860,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3741,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3969,
											"end": 3976,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3958,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3924,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3924,
											"end": 3977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3924,
											"end": 3977,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3924,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3977,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4052,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4097,
											"end": 4104,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4052,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4052,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4052,
											"end": 4105,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4052,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4105,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4154,
											"end": 4156,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4225,
											"end": 4232,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4222,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4180,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4233,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4180,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4233,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 4250,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 4250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 4250,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 4250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 4250,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 4250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4686,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4256,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4439,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4426,
											"end": 4435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4510,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4494,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4450,
											"end": 4515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4515,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4450,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4569,
											"end": 4575,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4525,
											"end": 4597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4607,
											"end": 4679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4686,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4686,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4835,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4692,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4787,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4823,
											"end": 4828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4796,
											"end": 4829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4829,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4796,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 5192,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4841,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4962,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4939,
											"end": 4946,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4958,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4963,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5047,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4928,
											"end": 5047,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4966,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4966,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4966,
											"end": 5045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4966,
											"end": 5045,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4966,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5047,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4928,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5086,
											"end": 5087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5167,
											"end": 5174,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5164,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5156,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5111,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5175,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5111,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5175,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 5192,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 5192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 5192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 5192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 5192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CollateralManager.sol",
								"contracts/interfaces/IAggregatorOracle.sol",
								"contracts/interfaces/ICollateralManager.sol",
								"contracts/interfaces/IPriceOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addCollateral(address,uint256,uint256)": "c75cf245",
							"aggregator()": "245a7bfc",
							"collaterals(address)": "eeb97d3b",
							"getCollateralFactor(address)": "23617585",
							"getLiquidationPenalty(address)": "ac26a912",
							"getPrice(address)": "41976e09",
							"isCollateralActive(address)": "857f180a",
							"owner()": "8da5cb5b",
							"removeCollateral(address)": "c99d3a06",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"factor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"contract IAggregatorOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collaterals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationPenalty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getCollateralFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getLiquidationPenalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isCollateralActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CollateralManager.sol\":\"CollateralManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CollateralManager.sol\":{\"keccak256\":\"0x3cecfe20494f9039c3ca05a2574eb70ce551086b65e62d2e70ed322f563c702e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656ba5ae6ca1b6e3aeebad7c20e41b4de3d838b65908c6dacadeeb4d704ed9ac\",\"dweb:/ipfs/QmNpw59ZdbNvUM74m3EJP7oF7Nhd251MiFXEsFtwxu48Qa\"]},\"contracts/interfaces/IAggregatorOracle.sol\":{\"keccak256\":\"0xc2f03481e941de4bff7cf12e4bea57a15e4a916af5153f85c09bafe85cc23755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0be399f00c12fda26f17529a1a5b01b542eed2d978f02fffdab96a98bd2e44cd\",\"dweb:/ipfs/Qma9ifZGLEgWt3H38MeHrJYEfNjdPZjpXy6Cw9RAaRtfZq\"]},\"contracts/interfaces/ICollateralManager.sol\":{\"keccak256\":\"0xfb14d14c80949ea38f651881a4041fc6c9cd1e90da5b8af5a0fc497077dd6c64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08d2c72f83a070d2f81e495ad7f44a04dc03601fcbf2265f4dedd97e5ea9302e\",\"dweb:/ipfs/QmRuAmw2ABhfLfaSu2n7UkatpRKGV5o9gbpQ6hc4Ncz6FE\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4764520c89818be193a76d9ce9d68211ad1be49e90d7d16830b19f97b58defb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d3f684900d1feb9fe67d89223d4ccba855d2e81c7afdf68144ac2f01660a46d\",\"dweb:/ipfs/QmYsfLuyxoZ2cGmReghasGF1kXQzpKob3Abkzx8Wg7t6QL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/CollateralManager.sol:CollateralManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 199,
								"contract": "contracts/CollateralManager.sol:CollateralManager",
								"label": "collaterals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(CollateralInfo)194_storage)"
							},
							{
								"astId": 202,
								"contract": "contracts/CollateralManager.sol:CollateralManager",
								"label": "aggregator",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IAggregatorOracle)333"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IAggregatorOracle)333": {
								"encoding": "inplace",
								"label": "contract IAggregatorOracle",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(CollateralInfo)194_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CollateralManager.CollateralInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(CollateralInfo)194_storage"
							},
							"t_struct(CollateralInfo)194_storage": {
								"encoding": "inplace",
								"label": "struct CollateralManager.CollateralInfo",
								"members": [
									{
										"astId": 189,
										"contract": "contracts/CollateralManager.sol:CollateralManager",
										"label": "isActive",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 191,
										"contract": "contracts/CollateralManager.sol:CollateralManager",
										"label": "collateralFactor",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 193,
										"contract": "contracts/CollateralManager.sol:CollateralManager",
										"label": "liquidationPenalty",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IAggregatorOracle.sol": {
				"IAggregatorOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "addOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getMedianPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "removeOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addOracle(address,address)": "f0ca4adb",
							"getMedianPrice(address)": "adfe34f7",
							"removeOracle(address,address)": "c32eae76"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"addOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getMedianPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"removeOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAggregatorOracle.sol\":\"IAggregatorOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregatorOracle.sol\":{\"keccak256\":\"0xc2f03481e941de4bff7cf12e4bea57a15e4a916af5153f85c09bafe85cc23755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0be399f00c12fda26f17529a1a5b01b542eed2d978f02fffdab96a98bd2e44cd\",\"dweb:/ipfs/Qma9ifZGLEgWt3H38MeHrJYEfNjdPZjpXy6Cw9RAaRtfZq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ICollateralManager.sol": {
				"ICollateralManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getCollateralFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getLiquidationPenalty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isCollateralActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getCollateralFactor(address)": "23617585",
							"getLiquidationPenalty(address)": "ac26a912",
							"getPrice(address)": "41976e09",
							"isCollateralActive(address)": "857f180a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getCollateralFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getLiquidationPenalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isCollateralActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICollateralManager.sol\":\"ICollateralManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICollateralManager.sol\":{\"keccak256\":\"0xfb14d14c80949ea38f651881a4041fc6c9cd1e90da5b8af5a0fc497077dd6c64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08d2c72f83a070d2f81e495ad7f44a04dc03601fcbf2265f4dedd97e5ea9302e\",\"dweb:/ipfs/QmRuAmw2ABhfLfaSu2n7UkatpRKGV5o9gbpQ6hc4Ncz6FE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"IPriceOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPrice(address)": "41976e09"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4764520c89818be193a76d9ce9d68211ad1be49e90d7d16830b19f97b58defb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d3f684900d1feb9fe67d89223d4ccba855d2e81c7afdf68144ac2f01660a46d\",\"dweb:/ipfs/QmYsfLuyxoZ2cGmReghasGF1kXQzpKob3Abkzx8Wg7t6QL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/CollateralManager.sol": {
				"ast": {
					"absolutePath": "contracts/CollateralManager.sol",
					"exportedSymbols": {
						"CollateralManager": [
							309
						],
						"Context": [
							177
						],
						"IAggregatorOracle": [
							333
						],
						"ICollateralManager": [
							364
						],
						"IPriceOracle": [
							374
						],
						"Ownable": [
							147
						]
					},
					"id": 310,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 310,
							"sourceUnit": 148,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPriceOracle.sol",
							"file": "./interfaces/IPriceOracle.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 310,
							"sourceUnit": 375,
							"src": "111:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IAggregatorOracle.sol",
							"file": "./interfaces/IAggregatorOracle.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 310,
							"sourceUnit": 334,
							"src": "151:44:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ICollateralManager.sol",
							"file": "./interfaces/ICollateralManager.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 310,
							"sourceUnit": 365,
							"src": "196:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 184,
										"name": "Ownable",
										"nameLocations": [
											"273:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "273:7:2"
									},
									"id": 185,
									"nodeType": "InheritanceSpecifier",
									"src": "273:7:2"
								},
								{
									"baseName": {
										"id": 186,
										"name": "ICollateralManager",
										"nameLocations": [
											"282:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 364,
										"src": "282:18:2"
									},
									"id": 187,
									"nodeType": "InheritanceSpecifier",
									"src": "282:18:2"
								}
							],
							"canonicalName": "CollateralManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 309,
							"linearizedBaseContracts": [
								309,
								364,
								147,
								177
							],
							"name": "CollateralManager",
							"nameLocation": "252:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CollateralManager.CollateralInfo",
									"id": 194,
									"members": [
										{
											"constant": false,
											"id": 189,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "344:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 194,
											"src": "339:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 188,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "339:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 191,
											"mutability": "mutable",
											"name": "collateralFactor",
											"nameLocation": "370:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 194,
											"src": "362:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 190,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "362:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 193,
											"mutability": "mutable",
											"name": "liquidationPenalty",
											"nameLocation": "405:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 194,
											"src": "397:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 192,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "397:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollateralInfo",
									"nameLocation": "314:14:2",
									"nodeType": "StructDefinition",
									"scope": 309,
									"src": "307:123:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eeb97d3b",
									"id": 199,
									"mutability": "mutable",
									"name": "collaterals",
									"nameLocation": "478:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 309,
									"src": "436:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CollateralInfo_$194_storage_$",
										"typeString": "mapping(address => struct CollateralManager.CollateralInfo)"
									},
									"typeName": {
										"id": 198,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 195,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "444:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "436:34:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CollateralInfo_$194_storage_$",
											"typeString": "mapping(address => struct CollateralManager.CollateralInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 197,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 196,
												"name": "CollateralInfo",
												"nameLocations": [
													"455:14:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 194,
												"src": "455:14:2"
											},
											"referencedDeclaration": 194,
											"src": "455:14:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CollateralInfo_$194_storage_ptr",
												"typeString": "struct CollateralManager.CollateralInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "245a7bfc",
									"id": 202,
									"mutability": "mutable",
									"name": "aggregator",
									"nameLocation": "520:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 309,
									"src": "495:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAggregatorOracle_$333",
										"typeString": "contract IAggregatorOracle"
									},
									"typeName": {
										"id": 201,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 200,
											"name": "IAggregatorOracle",
											"nameLocations": [
												"495:17:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 333,
											"src": "495:17:2"
										},
										"referencedDeclaration": 333,
										"src": "495:17:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAggregatorOracle_$333",
											"typeString": "contract IAggregatorOracle"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "614:60:2",
										"statements": [
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 212,
														"name": "aggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "624:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAggregatorOracle_$333",
															"typeString": "contract IAggregatorOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 214,
																"name": "_aggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "655:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 213,
															"name": "IAggregatorOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "637:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAggregatorOracle_$333_$",
																"typeString": "type(contract IAggregatorOracle)"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "637:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAggregatorOracle_$333",
															"typeString": "contract IAggregatorOracle"
														}
													},
													"src": "624:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAggregatorOracle_$333",
														"typeString": "contract IAggregatorOracle"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "624:43:2"
											}
										]
									},
									"id": 219,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 209,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 204,
													"src": "600:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 210,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 208,
												"name": "Ownable",
												"nameLocations": [
													"592:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "592:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "592:21:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "557:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "549:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "_aggregator",
												"nameLocation": "579:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "571:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:43:2"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "614:0:2"
									},
									"scope": 309,
									"src": "537:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "770:171:2",
										"statements": [
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 230,
															"name": "collaterals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "780:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CollateralInfo_$194_storage_$",
																"typeString": "mapping(address => struct CollateralManager.CollateralInfo storage ref)"
															}
														},
														"id": 232,
														"indexExpression": {
															"id": 231,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "792:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "780:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollateralInfo_$194_storage",
															"typeString": "struct CollateralManager.CollateralInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "74727565",
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "840:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"id": 235,
																"name": "factor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "876:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 236,
																"name": "penalty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "916:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 233,
															"name": "CollateralInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "801:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_CollateralInfo_$194_storage_ptr_$",
																"typeString": "type(struct CollateralManager.CollateralInfo storage pointer)"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"830:8:2",
															"858:16:2",
															"896:18:2"
														],
														"names": [
															"isActive",
															"collateralFactor",
															"liquidationPenalty"
														],
														"nodeType": "FunctionCall",
														"src": "801:133:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollateralInfo_$194_memory_ptr",
															"typeString": "struct CollateralManager.CollateralInfo memory"
														}
													},
													"src": "780:154:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollateralInfo_$194_storage",
														"typeString": "struct CollateralManager.CollateralInfo storage ref"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "780:154:2"
											}
										]
									},
									"functionSelector": "c75cf245",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 227,
												"name": "onlyOwner",
												"nameLocations": [
													"760:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "760:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "760:9:2"
										}
									],
									"name": "addCollateral",
									"nameLocation": "689:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "711:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "703:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "factor",
												"nameLocation": "726:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "718:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "penalty",
												"nameLocation": "742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:48:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:0:2"
									},
									"scope": 309,
									"src": "680:261:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1007:52:2",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 248,
																"name": "collaterals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1017:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CollateralInfo_$194_storage_$",
																	"typeString": "mapping(address => struct CollateralManager.CollateralInfo storage ref)"
																}
															},
															"id": 250,
															"indexExpression": {
																"id": 249,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "1029:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1017:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CollateralInfo_$194_storage",
																"typeString": "struct CollateralManager.CollateralInfo storage ref"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1036:8:2",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "1017:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1047:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1017:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1017:35:2"
											}
										]
									},
									"functionSelector": "c99d3a06",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 245,
												"name": "onlyOwner",
												"nameLocations": [
													"997:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "997:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "997:9:2"
										}
									],
									"name": "removeCollateral",
									"nameLocation": "956:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:0:2"
									},
									"scope": 309,
									"src": "947:112:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										342
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1141:59:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 263,
															"name": "collaterals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1158:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CollateralInfo_$194_storage_$",
																"typeString": "mapping(address => struct CollateralManager.CollateralInfo storage ref)"
															}
														},
														"id": 265,
														"indexExpression": {
															"id": 264,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "1170:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1158:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollateralInfo_$194_storage",
															"typeString": "struct CollateralManager.CollateralInfo storage ref"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1177:16:2",
													"memberName": "collateralFactor",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 191,
													"src": "1158:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 267,
												"nodeType": "Return",
												"src": "1151:42:2"
											}
										]
									},
									"functionSelector": "23617585",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollateralFactor",
									"nameLocation": "1074:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1102:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1094:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:15:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1132:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:9:2"
									},
									"scope": 309,
									"src": "1065:135:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										349
									],
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1284:61:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 276,
															"name": "collaterals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1301:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CollateralInfo_$194_storage_$",
																"typeString": "mapping(address => struct CollateralManager.CollateralInfo storage ref)"
															}
														},
														"id": 278,
														"indexExpression": {
															"id": 277,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "1313:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1301:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollateralInfo_$194_storage",
															"typeString": "struct CollateralManager.CollateralInfo storage ref"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1320:18:2",
													"memberName": "liquidationPenalty",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 193,
													"src": "1301:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 275,
												"id": 280,
												"nodeType": "Return",
												"src": "1294:44:2"
											}
										]
									},
									"functionSelector": "ac26a912",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidationPenalty",
									"nameLocation": "1215:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1245:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1237:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1275:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:9:2"
									},
									"scope": 309,
									"src": "1206:139:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										356
									],
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "1423:51:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 289,
															"name": "collaterals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1440:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CollateralInfo_$194_storage_$",
																"typeString": "mapping(address => struct CollateralManager.CollateralInfo storage ref)"
															}
														},
														"id": 291,
														"indexExpression": {
															"id": 290,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "1452:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1440:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CollateralInfo_$194_storage",
															"typeString": "struct CollateralManager.CollateralInfo storage ref"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1459:8:2",
													"memberName": "isActive",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 189,
													"src": "1440:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 288,
												"id": 293,
												"nodeType": "Return",
												"src": "1433:34:2"
											}
										]
									},
									"functionSelector": "857f180a",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCollateralActive",
									"nameLocation": "1360:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1387:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1379:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:15:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1417:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1417:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1416:6:2"
									},
									"scope": 309,
									"src": "1351:123:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "1545:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "1588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 302,
															"name": "aggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "1562:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAggregatorOracle_$333",
																"typeString": "contract IAggregatorOracle"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1573:14:2",
														"memberName": "getMedianPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 318,
														"src": "1562:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1562:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 301,
												"id": 306,
												"nodeType": "Return",
												"src": "1555:39:2"
											}
										]
									},
									"functionSelector": "41976e09",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "1489:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1506:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1498:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1497:15:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1536:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1535:9:2"
									},
									"scope": 309,
									"src": "1480:121:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 310,
							"src": "243:1360:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:1572:2"
				},
				"id": 2
			},
			"contracts/interfaces/IAggregatorOracle.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IAggregatorOracle.sol",
					"exportedSymbols": {
						"IAggregatorOracle": [
							333
						]
					},
					"id": 334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 311,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAggregatorOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 333,
							"linearizedBaseContracts": [
								333
							],
							"name": "IAggregatorOracle",
							"nameLocation": "68:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "adfe34f7",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMedianPrice",
									"nameLocation": "101:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "124:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "116:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:15:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "154:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:9:3"
									},
									"scope": 333,
									"src": "92:71:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f0ca4adb",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addOracle",
									"nameLocation": "177:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "195:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "187:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "210:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "202:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:31:3"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:0:3"
									},
									"scope": 333,
									"src": "168:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c32eae76",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeOracle",
									"nameLocation": "241:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "262:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "254:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "277:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "269:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:31:3"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:0:3"
									},
									"scope": 333,
									"src": "232:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 334,
							"src": "58:238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:265:3"
				},
				"id": 3
			},
			"contracts/interfaces/ICollateralManager.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ICollateralManager.sol",
					"exportedSymbols": {
						"ICollateralManager": [
							364
						]
					},
					"id": 365,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 335,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICollateralManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 364,
							"linearizedBaseContracts": [
								364
							],
							"name": "ICollateralManager",
							"nameLocation": "68:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23617585",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCollateralFactor",
									"nameLocation": "102:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "130:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "122:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "122:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "121:15:4"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "160:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "159:9:4"
									},
									"scope": 364,
									"src": "93:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ac26a912",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidationPenalty",
									"nameLocation": "183:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "213:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "205:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "204:15:4"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "243:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:9:4"
									},
									"scope": 364,
									"src": "174:78:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "857f180a",
									"id": 356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCollateralActive",
									"nameLocation": "266:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "293:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "285:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "284:15:4"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "323:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "323:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:6:4"
									},
									"scope": 364,
									"src": "257:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "41976e09",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "343:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "360:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "352:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "351:15:4"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "390:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:9:4"
									},
									"scope": 364,
									"src": "334:65:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 365,
							"src": "58:343:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:370:4"
				},
				"id": 4
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPriceOracle.sol",
					"exportedSymbols": {
						"IPriceOracle": [
							374
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 366,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPriceOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "IPriceOracle",
							"nameLocation": "68:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "41976e09",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "96:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "105:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "105:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "104:15:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "143:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:9:5"
									},
									"scope": 374,
									"src": "87:65:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 375,
							"src": "58:96:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:123:5"
				},
				"id": 5
			}
		}
	}
}