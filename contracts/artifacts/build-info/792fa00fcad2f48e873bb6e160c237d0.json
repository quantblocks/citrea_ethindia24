{
	"id": "792fa00fcad2f48e873bb6e160c237d0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Governance.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface IConfigurable {\n    function setFee(uint256 _lpFeeBasisPoints, uint256 _protocolFeeBasisPoints) external;\n    function setCollateralRatio(uint256 ratio) external;\n}\n\ncontract Governance is Ownable {\n    constructor() Ownable(msg.sender) {}\n    function updateDEXFee(IConfigurable dex, uint256 newLpFee, uint256 newProtocolFee) external onlyOwner {\n        dex.setFee(newLpFee, newProtocolFee);\n    }\n\n    function updateCollateralRatio(IConfigurable stableCoin, uint256 ratio) external onlyOwner {\n        stableCoin.setCollateralRatio(ratio);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Governance.sol": {
				"Governance": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IConfigurable",
									"name": "stableCoin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "ratio",
									"type": "uint256"
								}
							],
							"name": "updateCollateralRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IConfigurable",
									"name": "dex",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "newLpFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newProtocolFee",
									"type": "uint256"
								}
							],
							"name": "updateDEXFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Governance.sol\":288:673  contract Governance is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Governance.sol\":325:361  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Governance.sol\":347:357  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Governance.sol\":288:673  contract Governance is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Governance.sol\":288:673  contract Governance is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Governance.sol\":288:673  contract Governance is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe6bbc001\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfb3c2c2b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Governance.sol\":527:671  function updateCollateralRatio(IConfigurable stableCoin, uint256 ratio) external onlyOwner {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Governance.sol\":366:521  function updateDEXFee(IConfigurable dex, uint256 newLpFee, uint256 newProtocolFee) external onlyOwner {... */\n    tag_7:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_27\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_28\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_30\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_31\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Governance.sol\":527:671  function updateCollateralRatio(IConfigurable stableCoin, uint256 ratio) external onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_28\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_34:\n        /* \"contracts/Governance.sol\":628:638  stableCoin */\n      dup2\n        /* \"contracts/Governance.sol\":628:657  stableCoin.setCollateralRatio */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6060663e\n        /* \"contracts/Governance.sol\":658:663  ratio */\n      dup3\n        /* \"contracts/Governance.sol\":628:664  stableCoin.setCollateralRatio(ratio) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Governance.sol\":527:671  function updateCollateralRatio(IConfigurable stableCoin, uint256 ratio) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_28\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_44\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_31\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Governance.sol\":366:521  function updateDEXFee(IConfigurable dex, uint256 newLpFee, uint256 newProtocolFee) external onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_28\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"contracts/Governance.sol\":478:481  dex */\n      dup3\n        /* \"contracts/Governance.sol\":478:488  dex.setFee */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52f7c988\n        /* \"contracts/Governance.sol\":489:497  newLpFee */\n      dup4\n        /* \"contracts/Governance.sol\":499:513  newProtocolFee */\n      dup4\n        /* \"contracts/Governance.sol\":478:514  dex.setFee(newLpFee, newProtocolFee) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Governance.sol\":366:521  function updateDEXFee(IConfigurable dex, uint256 newLpFee, uint256 newProtocolFee) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_11\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_59\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_64:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_65:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_82\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_64\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_66:\n        /* \"#utility.yul\":328:352   */\n      tag_84\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_65\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_13:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_86\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_66\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_68:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1037   */\n    tag_70:\n        /* \"#utility.yul\":978:985   */\n      0x00\n        /* \"#utility.yul\":1007:1031   */\n      tag_91\n        /* \"#utility.yul\":1025:1030   */\n      dup3\n        /* \"#utility.yul\":1007:1031   */\n      tag_65\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":996:1031   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1043:1207   */\n    tag_71:\n        /* \"#utility.yul\":1137:1182   */\n      tag_93\n        /* \"#utility.yul\":1176:1181   */\n      dup2\n        /* \"#utility.yul\":1137:1182   */\n      tag_70\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1127:1183   */\n      eq\n        /* \"#utility.yul\":1117:1201   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1197:1198   */\n      0x00\n        /* \"#utility.yul\":1194:1195   */\n      dup1\n        /* \"#utility.yul\":1187:1199   */\n      revert\n        /* \"#utility.yul\":1117:1201   */\n    tag_94:\n        /* \"#utility.yul\":1043:1207   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1213:1394   */\n    tag_72:\n        /* \"#utility.yul\":1280:1285   */\n      0x00\n        /* \"#utility.yul\":1318:1324   */\n      dup2\n        /* \"#utility.yul\":1305:1325   */\n      calldataload\n        /* \"#utility.yul\":1296:1325   */\n      swap1\n      pop\n        /* \"#utility.yul\":1334:1388   */\n      tag_96\n        /* \"#utility.yul\":1382:1387   */\n      dup2\n        /* \"#utility.yul\":1334:1388   */\n      tag_71\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1213:1394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1400:1477   */\n    tag_73:\n        /* \"#utility.yul\":1437:1444   */\n      0x00\n        /* \"#utility.yul\":1466:1471   */\n      dup2\n        /* \"#utility.yul\":1455:1471   */\n      swap1\n      pop\n        /* \"#utility.yul\":1400:1477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1605   */\n    tag_74:\n        /* \"#utility.yul\":1556:1580   */\n      tag_99\n        /* \"#utility.yul\":1574:1579   */\n      dup2\n        /* \"#utility.yul\":1556:1580   */\n      tag_73\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1549:1554   */\n      dup2\n        /* \"#utility.yul\":1546:1581   */\n      eq\n        /* \"#utility.yul\":1536:1599   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1592:1593   */\n      dup1\n        /* \"#utility.yul\":1585:1597   */\n      revert\n        /* \"#utility.yul\":1536:1599   */\n    tag_100:\n        /* \"#utility.yul\":1483:1605   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1750   */\n    tag_75:\n        /* \"#utility.yul\":1657:1662   */\n      0x00\n        /* \"#utility.yul\":1695:1701   */\n      dup2\n        /* \"#utility.yul\":1682:1702   */\n      calldataload\n        /* \"#utility.yul\":1673:1702   */\n      swap1\n      pop\n        /* \"#utility.yul\":1711:1744   */\n      tag_102\n        /* \"#utility.yul\":1738:1743   */\n      dup2\n        /* \"#utility.yul\":1711:1744   */\n      tag_74\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1611:1750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:2272   */\n    tag_16:\n        /* \"#utility.yul\":1845:1851   */\n      0x00\n        /* \"#utility.yul\":1853:1859   */\n      dup1\n        /* \"#utility.yul\":1902:1904   */\n      0x40\n        /* \"#utility.yul\":1890:1899   */\n      dup4\n        /* \"#utility.yul\":1881:1888   */\n      dup6\n        /* \"#utility.yul\":1877:1900   */\n      sub\n        /* \"#utility.yul\":1873:1905   */\n      slt\n        /* \"#utility.yul\":1870:1989   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":1908:1987   */\n      tag_105\n      tag_68\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1870:1989   */\n    tag_104:\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2053:2127   */\n      tag_106\n        /* \"#utility.yul\":2119:2126   */\n      dup6\n        /* \"#utility.yul\":2110:2116   */\n      dup3\n        /* \"#utility.yul\":2099:2108   */\n      dup7\n        /* \"#utility.yul\":2095:2117   */\n      add\n        /* \"#utility.yul\":2053:2127   */\n      tag_72\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2043:2127   */\n      swap3\n      pop\n        /* \"#utility.yul\":1999:2137   */\n      pop\n        /* \"#utility.yul\":2176:2178   */\n      0x20\n        /* \"#utility.yul\":2202:2255   */\n      tag_107\n        /* \"#utility.yul\":2247:2254   */\n      dup6\n        /* \"#utility.yul\":2238:2244   */\n      dup3\n        /* \"#utility.yul\":2227:2236   */\n      dup7\n        /* \"#utility.yul\":2223:2245   */\n      add\n        /* \"#utility.yul\":2202:2255   */\n      tag_75\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2192:2255   */\n      swap2\n      pop\n        /* \"#utility.yul\":2147:2265   */\n      pop\n        /* \"#utility.yul\":1756:2272   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2278:2400   */\n    tag_76:\n        /* \"#utility.yul\":2351:2375   */\n      tag_109\n        /* \"#utility.yul\":2369:2374   */\n      dup2\n        /* \"#utility.yul\":2351:2375   */\n      tag_65\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2344:2349   */\n      dup2\n        /* \"#utility.yul\":2341:2376   */\n      eq\n        /* \"#utility.yul\":2331:2394   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2390:2391   */\n      0x00\n        /* \"#utility.yul\":2387:2388   */\n      dup1\n        /* \"#utility.yul\":2380:2392   */\n      revert\n        /* \"#utility.yul\":2331:2394   */\n    tag_110:\n        /* \"#utility.yul\":2278:2400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2406:2545   */\n    tag_77:\n        /* \"#utility.yul\":2452:2457   */\n      0x00\n        /* \"#utility.yul\":2490:2496   */\n      dup2\n        /* \"#utility.yul\":2477:2497   */\n      calldataload\n        /* \"#utility.yul\":2468:2497   */\n      swap1\n      pop\n        /* \"#utility.yul\":2506:2539   */\n      tag_112\n        /* \"#utility.yul\":2533:2538   */\n      dup2\n        /* \"#utility.yul\":2506:2539   */\n      tag_76\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2406:2545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2551:2880   */\n    tag_20:\n        /* \"#utility.yul\":2610:2616   */\n      0x00\n        /* \"#utility.yul\":2659:2661   */\n      0x20\n        /* \"#utility.yul\":2647:2656   */\n      dup3\n        /* \"#utility.yul\":2638:2645   */\n      dup5\n        /* \"#utility.yul\":2634:2657   */\n      sub\n        /* \"#utility.yul\":2630:2662   */\n      slt\n        /* \"#utility.yul\":2627:2746   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":2665:2744   */\n      tag_115\n      tag_68\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2627:2746   */\n    tag_114:\n        /* \"#utility.yul\":2785:2786   */\n      0x00\n        /* \"#utility.yul\":2810:2863   */\n      tag_116\n        /* \"#utility.yul\":2855:2862   */\n      dup5\n        /* \"#utility.yul\":2846:2852   */\n      dup3\n        /* \"#utility.yul\":2835:2844   */\n      dup6\n        /* \"#utility.yul\":2831:2853   */\n      add\n        /* \"#utility.yul\":2810:2863   */\n      tag_77\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2800:2863   */\n      swap2\n      pop\n        /* \"#utility.yul\":2756:2873   */\n      pop\n        /* \"#utility.yul\":2551:2880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2886:3547   */\n    tag_24:\n        /* \"#utility.yul\":2984:2990   */\n      0x00\n        /* \"#utility.yul\":2992:2998   */\n      dup1\n        /* \"#utility.yul\":3000:3006   */\n      0x00\n        /* \"#utility.yul\":3049:3051   */\n      0x60\n        /* \"#utility.yul\":3037:3046   */\n      dup5\n        /* \"#utility.yul\":3028:3035   */\n      dup7\n        /* \"#utility.yul\":3024:3047   */\n      sub\n        /* \"#utility.yul\":3020:3052   */\n      slt\n        /* \"#utility.yul\":3017:3136   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":3055:3134   */\n      tag_119\n      tag_68\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3017:3136   */\n    tag_118:\n        /* \"#utility.yul\":3175:3176   */\n      0x00\n        /* \"#utility.yul\":3200:3274   */\n      tag_120\n        /* \"#utility.yul\":3266:3273   */\n      dup7\n        /* \"#utility.yul\":3257:3263   */\n      dup3\n        /* \"#utility.yul\":3246:3255   */\n      dup8\n        /* \"#utility.yul\":3242:3264   */\n      add\n        /* \"#utility.yul\":3200:3274   */\n      tag_72\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3190:3274   */\n      swap4\n      pop\n        /* \"#utility.yul\":3146:3284   */\n      pop\n        /* \"#utility.yul\":3323:3325   */\n      0x20\n        /* \"#utility.yul\":3349:3402   */\n      tag_121\n        /* \"#utility.yul\":3394:3401   */\n      dup7\n        /* \"#utility.yul\":3385:3391   */\n      dup3\n        /* \"#utility.yul\":3374:3383   */\n      dup8\n        /* \"#utility.yul\":3370:3392   */\n      add\n        /* \"#utility.yul\":3349:3402   */\n      tag_75\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3339:3402   */\n      swap3\n      pop\n        /* \"#utility.yul\":3294:3412   */\n      pop\n        /* \"#utility.yul\":3451:3453   */\n      0x40\n        /* \"#utility.yul\":3477:3530   */\n      tag_122\n        /* \"#utility.yul\":3522:3529   */\n      dup7\n        /* \"#utility.yul\":3513:3519   */\n      dup3\n        /* \"#utility.yul\":3502:3511   */\n      dup8\n        /* \"#utility.yul\":3498:3520   */\n      add\n        /* \"#utility.yul\":3477:3530   */\n      tag_75\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3467:3530   */\n      swap2\n      pop\n        /* \"#utility.yul\":3422:3540   */\n      pop\n        /* \"#utility.yul\":2886:3547   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3553:3671   */\n    tag_78:\n        /* \"#utility.yul\":3640:3664   */\n      tag_124\n        /* \"#utility.yul\":3658:3663   */\n      dup2\n        /* \"#utility.yul\":3640:3664   */\n      tag_73\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3635:3638   */\n      dup3\n        /* \"#utility.yul\":3628:3665   */\n      mstore\n        /* \"#utility.yul\":3553:3671   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3677:3899   */\n    tag_37:\n        /* \"#utility.yul\":3770:3774   */\n      0x00\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"#utility.yul\":3797:3806   */\n      dup3\n        /* \"#utility.yul\":3793:3811   */\n      add\n        /* \"#utility.yul\":3785:3811   */\n      swap1\n      pop\n        /* \"#utility.yul\":3821:3892   */\n      tag_126\n        /* \"#utility.yul\":3889:3890   */\n      0x00\n        /* \"#utility.yul\":3878:3887   */\n      dup4\n        /* \"#utility.yul\":3874:3891   */\n      add\n        /* \"#utility.yul\":3865:3871   */\n      dup5\n        /* \"#utility.yul\":3821:3892   */\n      tag_78\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3677:3899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4237   */\n    tag_51:\n        /* \"#utility.yul\":4026:4030   */\n      0x00\n        /* \"#utility.yul\":4064:4066   */\n      0x40\n        /* \"#utility.yul\":4053:4062   */\n      dup3\n        /* \"#utility.yul\":4049:4067   */\n      add\n        /* \"#utility.yul\":4041:4067   */\n      swap1\n      pop\n        /* \"#utility.yul\":4077:4148   */\n      tag_128\n        /* \"#utility.yul\":4145:4146   */\n      0x00\n        /* \"#utility.yul\":4134:4143   */\n      dup4\n        /* \"#utility.yul\":4130:4147   */\n      add\n        /* \"#utility.yul\":4121:4127   */\n      dup6\n        /* \"#utility.yul\":4077:4148   */\n      tag_78\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":4158:4230   */\n      tag_129\n        /* \"#utility.yul\":4226:4228   */\n      0x20\n        /* \"#utility.yul\":4215:4224   */\n      dup4\n        /* \"#utility.yul\":4211:4229   */\n      add\n        /* \"#utility.yul\":4202:4208   */\n      dup5\n        /* \"#utility.yul\":4158:4230   */\n      tag_78\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3905:4237   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d62a9bfe5f211caae9470b8ffcd0fa57e802a7753d6c8dad9e40ff3c488cdfc364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b6105fb806101bc5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063715018a6146100595780638da5cb5b14610063578063e6bbc00114610081578063f2fde38b1461009d578063fb3c2c2b146100b9575b5f80fd5b6100616100d5565b005b61006b6100e8565b6040516100789190610408565b60405180910390f35b61009b60048036038101906100969190610493565b61010f565b005b6100b760048036038101906100b291906104fb565b610181565b005b6100d360048036038101906100ce9190610526565b610205565b005b6100dd61027a565b6100e65f610301565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61011761027a565b8173ffffffffffffffffffffffffffffffffffffffff16636060663e826040518263ffffffff1660e01b81526004016101509190610585565b5f604051808303815f87803b158015610167575f80fd5b505af1158015610179573d5f803e3d5ffd5b505050505050565b61018961027a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101f9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101f09190610408565b60405180910390fd5b61020281610301565b50565b61020d61027a565b8273ffffffffffffffffffffffffffffffffffffffff166352f7c98883836040518363ffffffff1660e01b815260040161024892919061059e565b5f604051808303815f87803b15801561025f575f80fd5b505af1158015610271573d5f803e3d5ffd5b50505050505050565b6102826103c2565b73ffffffffffffffffffffffffffffffffffffffff166102a06100e8565b73ffffffffffffffffffffffffffffffffffffffff16146102ff576102c36103c2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102f69190610408565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103f2826103c9565b9050919050565b610402816103e8565b82525050565b5f60208201905061041b5f8301846103f9565b92915050565b5f80fd5b5f61042f826103e8565b9050919050565b61043f81610425565b8114610449575f80fd5b50565b5f8135905061045a81610436565b92915050565b5f819050919050565b61047281610460565b811461047c575f80fd5b50565b5f8135905061048d81610469565b92915050565b5f80604083850312156104a9576104a8610421565b5b5f6104b68582860161044c565b92505060206104c78582860161047f565b9150509250929050565b6104da816103e8565b81146104e4575f80fd5b50565b5f813590506104f5816104d1565b92915050565b5f602082840312156105105761050f610421565b5b5f61051d848285016104e7565b91505092915050565b5f805f6060848603121561053d5761053c610421565b5b5f61054a8682870161044c565b935050602061055b8682870161047f565b925050604061056c8682870161047f565b9150509250925092565b61057f81610460565b82525050565b5f6020820190506105985f830184610576565b92915050565b5f6040820190506105b15f830185610576565b6105be6020830184610576565b939250505056fea2646970667358221220d62a9bfe5f211caae9470b8ffcd0fa57e802a7753d6c8dad9e40ff3c488cdfc364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FB DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xE6BBC001 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xFB3C2C2B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x493 JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x27A JUMP JUMPDEST PUSH2 0xE6 PUSH0 PUSH2 0x301 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x27A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6060663E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x179 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x189 PUSH2 0x27A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x202 DUP2 PUSH2 0x301 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x20D PUSH2 0x27A JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52F7C988 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x248 SWAP3 SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x271 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x282 PUSH2 0x3C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A0 PUSH2 0xE8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FF JUMPI PUSH2 0x2C3 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F2 DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x402 DUP2 PUSH2 0x3E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x41B PUSH0 DUP4 ADD DUP5 PUSH2 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x42F DUP3 PUSH2 0x3E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43F DUP2 PUSH2 0x425 JUMP JUMPDEST DUP2 EQ PUSH2 0x449 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x45A DUP2 PUSH2 0x436 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x472 DUP2 PUSH2 0x460 JUMP JUMPDEST DUP2 EQ PUSH2 0x47C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48D DUP2 PUSH2 0x469 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A9 JUMPI PUSH2 0x4A8 PUSH2 0x421 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B6 DUP6 DUP3 DUP7 ADD PUSH2 0x44C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4C7 DUP6 DUP3 DUP7 ADD PUSH2 0x47F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DA DUP2 PUSH2 0x3E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4F5 DUP2 PUSH2 0x4D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x510 JUMPI PUSH2 0x50F PUSH2 0x421 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x51D DUP5 DUP3 DUP6 ADD PUSH2 0x4E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x53D JUMPI PUSH2 0x53C PUSH2 0x421 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x54A DUP7 DUP3 DUP8 ADD PUSH2 0x44C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x55B DUP7 DUP3 DUP8 ADD PUSH2 0x47F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x56C DUP7 DUP3 DUP8 ADD PUSH2 0x47F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x57F DUP2 PUSH2 0x460 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x598 PUSH0 DUP4 ADD DUP5 PUSH2 0x576 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5B1 PUSH0 DUP4 ADD DUP6 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x5BE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x576 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x2A SWAP12 INVALID PUSH0 0x21 SHR 0xAA 0xE9 SELFBALANCE SIGNEXTEND DUP16 0xFC 0xD0 STATICCALL JUMPI 0xE8 MUL 0xA7 PUSH22 0x3D6C8DAD9E40FF3C488CDFC364736F6C634300081A00 CALLER ",
							"sourceMap": "288:385:2:-:0;;;325:36;;;;;;;;;;347:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;288:385:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;288:385:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 634,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 962,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 769,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 232,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 213,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 385,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateCollateralRatio_240": {
									"entryPoint": 271,
									"id": 240,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateDEXFee_223": {
									"entryPoint": 517,
									"id": 223,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IConfigurable_$193": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IConfigurable_$193t_uint256": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IConfigurable_$193t_uint256t_uint256": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IConfigurable_$193": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IConfigurable_$193": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4240:3",
										"nodeType": "YulBlock",
										"src": "0:4240:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "633:35:3",
													"nodeType": "YulBlock",
													"src": "633:35:3",
													"statements": [
														{
															"nativeSrc": "643:19:3",
															"nodeType": "YulAssignment",
															"src": "643:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:3",
																		"nodeType": "YulLiteral",
																		"src": "659:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:3"
																},
																"nativeSrc": "653:9:3",
																"nodeType": "YulFunctionCall",
																"src": "653:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:3",
														"nodeType": "YulTypedName",
														"src": "626:6:3",
														"type": ""
													}
												],
												"src": "593:75:3"
											},
											{
												"body": {
													"nativeSrc": "763:28:3",
													"nodeType": "YulBlock",
													"src": "763:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:3",
																		"nodeType": "YulLiteral",
																		"src": "780:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:3",
																		"nodeType": "YulLiteral",
																		"src": "783:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:3"
																},
																"nativeSrc": "773:12:3",
																"nodeType": "YulFunctionCall",
																"src": "773:12:3"
															},
															"nativeSrc": "773:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:3"
											},
											{
												"body": {
													"nativeSrc": "886:28:3",
													"nodeType": "YulBlock",
													"src": "886:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:3",
																		"nodeType": "YulLiteral",
																		"src": "903:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:3",
																		"nodeType": "YulLiteral",
																		"src": "906:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:3"
																},
																"nativeSrc": "896:12:3",
																"nodeType": "YulFunctionCall",
																"src": "896:12:3"
															},
															"nativeSrc": "896:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:3"
											},
											{
												"body": {
													"nativeSrc": "986:51:3",
													"nodeType": "YulBlock",
													"src": "986:51:3",
													"statements": [
														{
															"nativeSrc": "996:35:3",
															"nodeType": "YulAssignment",
															"src": "996:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1025:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1025:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1007:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1007:17:3"
																},
																"nativeSrc": "1007:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1007:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "996:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "996:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IConfigurable_$193",
												"nativeSrc": "920:117:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "968:5:3",
														"nodeType": "YulTypedName",
														"src": "968:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "978:7:3",
														"nodeType": "YulTypedName",
														"src": "978:7:3",
														"type": ""
													}
												],
												"src": "920:117:3"
											},
											{
												"body": {
													"nativeSrc": "1107:100:3",
													"nodeType": "YulBlock",
													"src": "1107:100:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1185:16:3",
																"nodeType": "YulBlock",
																"src": "1185:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1194:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1194:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1197:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1197:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1187:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1187:6:3"
																			},
																			"nativeSrc": "1187:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1187:12:3"
																		},
																		"nativeSrc": "1187:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1187:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1176:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1176:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IConfigurable_$193",
																					"nativeSrc": "1137:38:3",
																					"nodeType": "YulIdentifier",
																					"src": "1137:38:3"
																				},
																				"nativeSrc": "1137:45:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1137:45:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1127:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1127:2:3"
																		},
																		"nativeSrc": "1127:56:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1127:56:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1120:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1120:6:3"
																},
																"nativeSrc": "1120:64:3",
																"nodeType": "YulFunctionCall",
																"src": "1120:64:3"
															},
															"nativeSrc": "1117:84:3",
															"nodeType": "YulIf",
															"src": "1117:84:3"
														}
													]
												},
												"name": "validator_revert_t_contract$_IConfigurable_$193",
												"nativeSrc": "1043:164:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1100:5:3",
														"nodeType": "YulTypedName",
														"src": "1100:5:3",
														"type": ""
													}
												],
												"src": "1043:164:3"
											},
											{
												"body": {
													"nativeSrc": "1286:108:3",
													"nodeType": "YulBlock",
													"src": "1286:108:3",
													"statements": [
														{
															"nativeSrc": "1296:29:3",
															"nodeType": "YulAssignment",
															"src": "1296:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1318:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1318:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1305:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1305:12:3"
																},
																"nativeSrc": "1305:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1305:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1296:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1296:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1382:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1382:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IConfigurable_$193",
																	"nativeSrc": "1334:47:3",
																	"nodeType": "YulIdentifier",
																	"src": "1334:47:3"
																},
																"nativeSrc": "1334:54:3",
																"nodeType": "YulFunctionCall",
																"src": "1334:54:3"
															},
															"nativeSrc": "1334:54:3",
															"nodeType": "YulExpressionStatement",
															"src": "1334:54:3"
														}
													]
												},
												"name": "abi_decode_t_contract$_IConfigurable_$193",
												"nativeSrc": "1213:181:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1264:6:3",
														"nodeType": "YulTypedName",
														"src": "1264:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1272:3:3",
														"nodeType": "YulTypedName",
														"src": "1272:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1280:5:3",
														"nodeType": "YulTypedName",
														"src": "1280:5:3",
														"type": ""
													}
												],
												"src": "1213:181:3"
											},
											{
												"body": {
													"nativeSrc": "1445:32:3",
													"nodeType": "YulBlock",
													"src": "1445:32:3",
													"statements": [
														{
															"nativeSrc": "1455:16:3",
															"nodeType": "YulAssignment",
															"src": "1455:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1466:5:3",
																"nodeType": "YulIdentifier",
																"src": "1466:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1455:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1455:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1400:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1427:5:3",
														"nodeType": "YulTypedName",
														"src": "1427:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1437:7:3",
														"nodeType": "YulTypedName",
														"src": "1437:7:3",
														"type": ""
													}
												],
												"src": "1400:77:3"
											},
											{
												"body": {
													"nativeSrc": "1526:79:3",
													"nodeType": "YulBlock",
													"src": "1526:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1583:16:3",
																"nodeType": "YulBlock",
																"src": "1583:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1592:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1592:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1595:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1595:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1585:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1585:6:3"
																			},
																			"nativeSrc": "1585:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1585:12:3"
																		},
																		"nativeSrc": "1585:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1585:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1549:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1549:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1574:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1574:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1556:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1556:17:3"
																				},
																				"nativeSrc": "1556:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1546:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1546:2:3"
																		},
																		"nativeSrc": "1546:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1539:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1539:6:3"
																},
																"nativeSrc": "1539:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1539:43:3"
															},
															"nativeSrc": "1536:63:3",
															"nodeType": "YulIf",
															"src": "1536:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1483:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1519:5:3",
														"nodeType": "YulTypedName",
														"src": "1519:5:3",
														"type": ""
													}
												],
												"src": "1483:122:3"
											},
											{
												"body": {
													"nativeSrc": "1663:87:3",
													"nodeType": "YulBlock",
													"src": "1663:87:3",
													"statements": [
														{
															"nativeSrc": "1673:29:3",
															"nodeType": "YulAssignment",
															"src": "1673:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1695:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1695:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1682:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1682:12:3"
																},
																"nativeSrc": "1682:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1682:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1673:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1673:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1738:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1711:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1711:26:3"
																},
																"nativeSrc": "1711:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1711:33:3"
															},
															"nativeSrc": "1711:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1711:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1611:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1641:6:3",
														"nodeType": "YulTypedName",
														"src": "1641:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1649:3:3",
														"nodeType": "YulTypedName",
														"src": "1649:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1657:5:3",
														"nodeType": "YulTypedName",
														"src": "1657:5:3",
														"type": ""
													}
												],
												"src": "1611:139:3"
											},
											{
												"body": {
													"nativeSrc": "1860:412:3",
													"nodeType": "YulBlock",
													"src": "1860:412:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1906:83:3",
																"nodeType": "YulBlock",
																"src": "1906:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1908:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1908:77:3"
																			},
																			"nativeSrc": "1908:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1908:79:3"
																		},
																		"nativeSrc": "1908:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1908:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1881:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1881:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1890:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1890:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1877:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1877:3:3"
																		},
																		"nativeSrc": "1877:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1877:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1902:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1902:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1873:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1873:3:3"
																},
																"nativeSrc": "1873:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1873:32:3"
															},
															"nativeSrc": "1870:119:3",
															"nodeType": "YulIf",
															"src": "1870:119:3"
														},
														{
															"nativeSrc": "1999:138:3",
															"nodeType": "YulBlock",
															"src": "1999:138:3",
															"statements": [
																{
																	"nativeSrc": "2014:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2014:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2028:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2028:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2018:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2018:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2043:84:3",
																	"nodeType": "YulAssignment",
																	"src": "2043:84:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2099:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2099:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2110:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2110:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2095:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2095:3:3"
																				},
																				"nativeSrc": "2095:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2095:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2119:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2119:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IConfigurable_$193",
																			"nativeSrc": "2053:41:3",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:3"
																		},
																		"nativeSrc": "2053:74:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2053:74:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2043:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2043:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2147:118:3",
															"nodeType": "YulBlock",
															"src": "2147:118:3",
															"statements": [
																{
																	"nativeSrc": "2162:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2162:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2176:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2176:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2166:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2166:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2192:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2192:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2227:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2227:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2238:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2238:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2223:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2223:3:3"
																				},
																				"nativeSrc": "2223:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2223:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2247:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2247:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2202:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2202:20:3"
																		},
																		"nativeSrc": "2202:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2202:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2192:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2192:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IConfigurable_$193t_uint256",
												"nativeSrc": "1756:516:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1822:9:3",
														"nodeType": "YulTypedName",
														"src": "1822:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1833:7:3",
														"nodeType": "YulTypedName",
														"src": "1833:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1845:6:3",
														"nodeType": "YulTypedName",
														"src": "1845:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1853:6:3",
														"nodeType": "YulTypedName",
														"src": "1853:6:3",
														"type": ""
													}
												],
												"src": "1756:516:3"
											},
											{
												"body": {
													"nativeSrc": "2321:79:3",
													"nodeType": "YulBlock",
													"src": "2321:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2378:16:3",
																"nodeType": "YulBlock",
																"src": "2378:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2387:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2387:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2390:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2390:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2380:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2380:6:3"
																			},
																			"nativeSrc": "2380:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2380:12:3"
																		},
																		"nativeSrc": "2380:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2380:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2344:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2344:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2369:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2351:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2351:17:3"
																				},
																				"nativeSrc": "2351:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2351:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2341:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2341:2:3"
																		},
																		"nativeSrc": "2341:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2341:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2334:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2334:6:3"
																},
																"nativeSrc": "2334:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2334:43:3"
															},
															"nativeSrc": "2331:63:3",
															"nodeType": "YulIf",
															"src": "2331:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2278:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2314:5:3",
														"nodeType": "YulTypedName",
														"src": "2314:5:3",
														"type": ""
													}
												],
												"src": "2278:122:3"
											},
											{
												"body": {
													"nativeSrc": "2458:87:3",
													"nodeType": "YulBlock",
													"src": "2458:87:3",
													"statements": [
														{
															"nativeSrc": "2468:29:3",
															"nodeType": "YulAssignment",
															"src": "2468:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2490:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2490:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2477:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2477:12:3"
																},
																"nativeSrc": "2477:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2477:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2468:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2468:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2533:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2533:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2506:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2506:26:3"
																},
																"nativeSrc": "2506:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2506:33:3"
															},
															"nativeSrc": "2506:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2506:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2406:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2436:6:3",
														"nodeType": "YulTypedName",
														"src": "2436:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2444:3:3",
														"nodeType": "YulTypedName",
														"src": "2444:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2452:5:3",
														"nodeType": "YulTypedName",
														"src": "2452:5:3",
														"type": ""
													}
												],
												"src": "2406:139:3"
											},
											{
												"body": {
													"nativeSrc": "2617:263:3",
													"nodeType": "YulBlock",
													"src": "2617:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2663:83:3",
																"nodeType": "YulBlock",
																"src": "2663:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2665:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2665:77:3"
																			},
																			"nativeSrc": "2665:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2665:79:3"
																		},
																		"nativeSrc": "2665:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2665:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2638:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2638:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2647:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2647:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2634:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:3"
																		},
																		"nativeSrc": "2634:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2659:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2659:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2630:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2630:3:3"
																},
																"nativeSrc": "2630:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2630:32:3"
															},
															"nativeSrc": "2627:119:3",
															"nodeType": "YulIf",
															"src": "2627:119:3"
														},
														{
															"nativeSrc": "2756:117:3",
															"nodeType": "YulBlock",
															"src": "2756:117:3",
															"statements": [
																{
																	"nativeSrc": "2771:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2771:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2785:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2785:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2775:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2775:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2800:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2800:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2835:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2835:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2846:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2846:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2831:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:3"
																				},
																				"nativeSrc": "2831:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2831:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2855:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2855:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2810:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2810:20:3"
																		},
																		"nativeSrc": "2810:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2810:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2800:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2800:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2551:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2587:9:3",
														"nodeType": "YulTypedName",
														"src": "2587:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2598:7:3",
														"nodeType": "YulTypedName",
														"src": "2598:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2610:6:3",
														"nodeType": "YulTypedName",
														"src": "2610:6:3",
														"type": ""
													}
												],
												"src": "2551:329:3"
											},
											{
												"body": {
													"nativeSrc": "3007:540:3",
													"nodeType": "YulBlock",
													"src": "3007:540:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3053:83:3",
																"nodeType": "YulBlock",
																"src": "3053:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3055:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "3055:77:3"
																			},
																			"nativeSrc": "3055:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3055:79:3"
																		},
																		"nativeSrc": "3055:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3055:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3028:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3028:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3037:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3037:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3024:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3024:3:3"
																		},
																		"nativeSrc": "3024:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3024:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3049:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3020:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3020:3:3"
																},
																"nativeSrc": "3020:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3020:32:3"
															},
															"nativeSrc": "3017:119:3",
															"nodeType": "YulIf",
															"src": "3017:119:3"
														},
														{
															"nativeSrc": "3146:138:3",
															"nodeType": "YulBlock",
															"src": "3146:138:3",
															"statements": [
																{
																	"nativeSrc": "3161:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3161:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3175:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3175:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3165:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3165:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3190:84:3",
																	"nodeType": "YulAssignment",
																	"src": "3190:84:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3246:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3246:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3257:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3257:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3242:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3242:3:3"
																				},
																				"nativeSrc": "3242:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3242:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3266:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3266:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IConfigurable_$193",
																			"nativeSrc": "3200:41:3",
																			"nodeType": "YulIdentifier",
																			"src": "3200:41:3"
																		},
																		"nativeSrc": "3200:74:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3200:74:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3190:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3190:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3294:118:3",
															"nodeType": "YulBlock",
															"src": "3294:118:3",
															"statements": [
																{
																	"nativeSrc": "3309:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3309:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3323:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3323:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3313:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3313:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3339:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3339:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3374:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3374:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3385:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3385:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3370:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3370:3:3"
																				},
																				"nativeSrc": "3370:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3370:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3394:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3394:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3349:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3349:20:3"
																		},
																		"nativeSrc": "3349:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3349:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3339:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3339:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3422:118:3",
															"nodeType": "YulBlock",
															"src": "3422:118:3",
															"statements": [
																{
																	"nativeSrc": "3437:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3437:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3451:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3451:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3441:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3441:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3467:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3467:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3502:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3502:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3513:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3513:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3498:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3498:3:3"
																				},
																				"nativeSrc": "3498:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3498:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3522:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3522:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3477:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3477:20:3"
																		},
																		"nativeSrc": "3477:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3477:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3467:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3467:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IConfigurable_$193t_uint256t_uint256",
												"nativeSrc": "2886:661:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2961:9:3",
														"nodeType": "YulTypedName",
														"src": "2961:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2972:7:3",
														"nodeType": "YulTypedName",
														"src": "2972:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2984:6:3",
														"nodeType": "YulTypedName",
														"src": "2984:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2992:6:3",
														"nodeType": "YulTypedName",
														"src": "2992:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3000:6:3",
														"nodeType": "YulTypedName",
														"src": "3000:6:3",
														"type": ""
													}
												],
												"src": "2886:661:3"
											},
											{
												"body": {
													"nativeSrc": "3618:53:3",
													"nodeType": "YulBlock",
													"src": "3618:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3635:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3635:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3658:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3658:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3640:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3640:17:3"
																		},
																		"nativeSrc": "3640:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3640:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3628:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3628:6:3"
																},
																"nativeSrc": "3628:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3628:37:3"
															},
															"nativeSrc": "3628:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3628:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3553:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3606:5:3",
														"nodeType": "YulTypedName",
														"src": "3606:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3613:3:3",
														"nodeType": "YulTypedName",
														"src": "3613:3:3",
														"type": ""
													}
												],
												"src": "3553:118:3"
											},
											{
												"body": {
													"nativeSrc": "3775:124:3",
													"nodeType": "YulBlock",
													"src": "3775:124:3",
													"statements": [
														{
															"nativeSrc": "3785:26:3",
															"nodeType": "YulAssignment",
															"src": "3785:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3797:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3808:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3793:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3793:3:3"
																},
																"nativeSrc": "3793:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3793:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3785:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3785:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3865:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3865:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3878:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3878:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3889:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3889:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3874:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3874:3:3"
																		},
																		"nativeSrc": "3874:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3874:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3821:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3821:43:3"
																},
																"nativeSrc": "3821:71:3",
																"nodeType": "YulFunctionCall",
																"src": "3821:71:3"
															},
															"nativeSrc": "3821:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "3821:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3677:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3747:9:3",
														"nodeType": "YulTypedName",
														"src": "3747:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3759:6:3",
														"nodeType": "YulTypedName",
														"src": "3759:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3770:4:3",
														"nodeType": "YulTypedName",
														"src": "3770:4:3",
														"type": ""
													}
												],
												"src": "3677:222:3"
											},
											{
												"body": {
													"nativeSrc": "4031:206:3",
													"nodeType": "YulBlock",
													"src": "4031:206:3",
													"statements": [
														{
															"nativeSrc": "4041:26:3",
															"nodeType": "YulAssignment",
															"src": "4041:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4053:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4053:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4064:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4064:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4049:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4049:3:3"
																},
																"nativeSrc": "4049:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4049:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4041:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4041:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4121:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4121:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4134:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4145:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4145:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4130:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:3"
																		},
																		"nativeSrc": "4130:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4130:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4077:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4077:43:3"
																},
																"nativeSrc": "4077:71:3",
																"nodeType": "YulFunctionCall",
																"src": "4077:71:3"
															},
															"nativeSrc": "4077:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "4077:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4202:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4202:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4215:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4215:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4226:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4226:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4211:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:3"
																		},
																		"nativeSrc": "4211:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4211:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4158:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4158:43:3"
																},
																"nativeSrc": "4158:72:3",
																"nodeType": "YulFunctionCall",
																"src": "4158:72:3"
															},
															"nativeSrc": "4158:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "4158:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3905:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3995:9:3",
														"nodeType": "YulTypedName",
														"src": "3995:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4007:6:3",
														"nodeType": "YulTypedName",
														"src": "4007:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4015:6:3",
														"nodeType": "YulTypedName",
														"src": "4015:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4026:4:3",
														"nodeType": "YulTypedName",
														"src": "4026:4:3",
														"type": ""
													}
												],
												"src": "3905:332:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_contract$_IConfigurable_$193(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IConfigurable_$193(value) {\n        if iszero(eq(value, cleanup_t_contract$_IConfigurable_$193(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IConfigurable_$193(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IConfigurable_$193(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IConfigurable_$193t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IConfigurable_$193(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IConfigurable_$193t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IConfigurable_$193(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063715018a6146100595780638da5cb5b14610063578063e6bbc00114610081578063f2fde38b1461009d578063fb3c2c2b146100b9575b5f80fd5b6100616100d5565b005b61006b6100e8565b6040516100789190610408565b60405180910390f35b61009b60048036038101906100969190610493565b61010f565b005b6100b760048036038101906100b291906104fb565b610181565b005b6100d360048036038101906100ce9190610526565b610205565b005b6100dd61027a565b6100e65f610301565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61011761027a565b8173ffffffffffffffffffffffffffffffffffffffff16636060663e826040518263ffffffff1660e01b81526004016101509190610585565b5f604051808303815f87803b158015610167575f80fd5b505af1158015610179573d5f803e3d5ffd5b505050505050565b61018961027a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101f9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101f09190610408565b60405180910390fd5b61020281610301565b50565b61020d61027a565b8273ffffffffffffffffffffffffffffffffffffffff166352f7c98883836040518363ffffffff1660e01b815260040161024892919061059e565b5f604051808303815f87803b15801561025f575f80fd5b505af1158015610271573d5f803e3d5ffd5b50505050505050565b6102826103c2565b73ffffffffffffffffffffffffffffffffffffffff166102a06100e8565b73ffffffffffffffffffffffffffffffffffffffff16146102ff576102c36103c2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102f69190610408565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103f2826103c9565b9050919050565b610402816103e8565b82525050565b5f60208201905061041b5f8301846103f9565b92915050565b5f80fd5b5f61042f826103e8565b9050919050565b61043f81610425565b8114610449575f80fd5b50565b5f8135905061045a81610436565b92915050565b5f819050919050565b61047281610460565b811461047c575f80fd5b50565b5f8135905061048d81610469565b92915050565b5f80604083850312156104a9576104a8610421565b5b5f6104b68582860161044c565b92505060206104c78582860161047f565b9150509250929050565b6104da816103e8565b81146104e4575f80fd5b50565b5f813590506104f5816104d1565b92915050565b5f602082840312156105105761050f610421565b5b5f61051d848285016104e7565b91505092915050565b5f805f6060848603121561053d5761053c610421565b5b5f61054a8682870161044c565b935050602061055b8682870161047f565b925050604061056c8682870161047f565b9150509250925092565b61057f81610460565b82525050565b5f6020820190506105985f830184610576565b92915050565b5f6040820190506105b15f830185610576565b6105be6020830184610576565b939250505056fea2646970667358221220d62a9bfe5f211caae9470b8ffcd0fa57e802a7753d6c8dad9e40ff3c488cdfc364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xE6BBC001 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xFB3C2C2B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x493 JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x27A JUMP JUMPDEST PUSH2 0xE6 PUSH0 PUSH2 0x301 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x27A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6060663E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x179 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x189 PUSH2 0x27A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x202 DUP2 PUSH2 0x301 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x20D PUSH2 0x27A JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52F7C988 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x248 SWAP3 SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x271 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x282 PUSH2 0x3C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A0 PUSH2 0xE8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FF JUMPI PUSH2 0x2C3 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F2 DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x402 DUP2 PUSH2 0x3E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x41B PUSH0 DUP4 ADD DUP5 PUSH2 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x42F DUP3 PUSH2 0x3E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43F DUP2 PUSH2 0x425 JUMP JUMPDEST DUP2 EQ PUSH2 0x449 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x45A DUP2 PUSH2 0x436 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x472 DUP2 PUSH2 0x460 JUMP JUMPDEST DUP2 EQ PUSH2 0x47C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48D DUP2 PUSH2 0x469 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A9 JUMPI PUSH2 0x4A8 PUSH2 0x421 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B6 DUP6 DUP3 DUP7 ADD PUSH2 0x44C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4C7 DUP6 DUP3 DUP7 ADD PUSH2 0x47F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DA DUP2 PUSH2 0x3E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4F5 DUP2 PUSH2 0x4D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x510 JUMPI PUSH2 0x50F PUSH2 0x421 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x51D DUP5 DUP3 DUP6 ADD PUSH2 0x4E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x53D JUMPI PUSH2 0x53C PUSH2 0x421 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x54A DUP7 DUP3 DUP8 ADD PUSH2 0x44C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x55B DUP7 DUP3 DUP8 ADD PUSH2 0x47F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x56C DUP7 DUP3 DUP8 ADD PUSH2 0x47F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x57F DUP2 PUSH2 0x460 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x598 PUSH0 DUP4 ADD DUP5 PUSH2 0x576 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5B1 PUSH0 DUP4 ADD DUP6 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x5BE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x576 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x2A SWAP12 INVALID PUSH0 0x21 SHR 0xAA 0xE9 SELFBALANCE SIGNEXTEND DUP16 0xFC 0xD0 STATICCALL JUMPI 0xE8 MUL 0xA7 PUSH22 0x3D6C8DAD9E40FF3C488CDFC364736F6C634300081A00 CALLER ",
							"sourceMap": "288:385:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;527:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;366:155:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;527:144:2:-;1531:13:0;:11;:13::i;:::-;628:10:2::1;:29;;;658:5;628:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;527:144:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;366:155:2:-;1531:13:0;:11;:13::i;:::-;478:3:2::1;:10;;;489:8;499:14;478:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;366:155:::0;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:117;978:7;1007:24;1025:5;1007:24;:::i;:::-;996:35;;920:117;;;:::o;1043:164::-;1137:45;1176:5;1137:45;:::i;:::-;1130:5;1127:56;1117:84;;1197:1;1194;1187:12;1117:84;1043:164;:::o;1213:181::-;1280:5;1318:6;1305:20;1296:29;;1334:54;1382:5;1334:54;:::i;:::-;1213:181;;;;:::o;1400:77::-;1437:7;1466:5;1455:16;;1400:77;;;:::o;1483:122::-;1556:24;1574:5;1556:24;:::i;:::-;1549:5;1546:35;1536:63;;1595:1;1592;1585:12;1536:63;1483:122;:::o;1611:139::-;1657:5;1695:6;1682:20;1673:29;;1711:33;1738:5;1711:33;:::i;:::-;1611:139;;;;:::o;1756:516::-;1845:6;1853;1902:2;1890:9;1881:7;1877:23;1873:32;1870:119;;;1908:79;;:::i;:::-;1870:119;2028:1;2053:74;2119:7;2110:6;2099:9;2095:22;2053:74;:::i;:::-;2043:84;;1999:138;2176:2;2202:53;2247:7;2238:6;2227:9;2223:22;2202:53;:::i;:::-;2192:63;;2147:118;1756:516;;;;;:::o;2278:122::-;2351:24;2369:5;2351:24;:::i;:::-;2344:5;2341:35;2331:63;;2390:1;2387;2380:12;2331:63;2278:122;:::o;2406:139::-;2452:5;2490:6;2477:20;2468:29;;2506:33;2533:5;2506:33;:::i;:::-;2406:139;;;;:::o;2551:329::-;2610:6;2659:2;2647:9;2638:7;2634:23;2630:32;2627:119;;;2665:79;;:::i;:::-;2627:119;2785:1;2810:53;2855:7;2846:6;2835:9;2831:22;2810:53;:::i;:::-;2800:63;;2756:117;2551:329;;;;:::o;2886:661::-;2984:6;2992;3000;3049:2;3037:9;3028:7;3024:23;3020:32;3017:119;;;3055:79;;:::i;:::-;3017:119;3175:1;3200:74;3266:7;3257:6;3246:9;3242:22;3200:74;:::i;:::-;3190:84;;3146:138;3323:2;3349:53;3394:7;3385:6;3374:9;3370:22;3349:53;:::i;:::-;3339:63;;3294:118;3451:2;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3422:118;2886:661;;;;;:::o;3553:118::-;3640:24;3658:5;3640:24;:::i;:::-;3635:3;3628:37;3553:118;;:::o;3677:222::-;3770:4;3808:2;3797:9;3793:18;3785:26;;3821:71;3889:1;3878:9;3874:17;3865:6;3821:71;:::i;:::-;3677:222;;;;:::o;3905:332::-;4026:4;4064:2;4053:9;4049:18;4041:26;;4077:71;4145:1;4134:9;4130:17;4121:6;4077:71;:::i;:::-;4158:72;4226:2;4215:9;4211:18;4202:6;4158:72;:::i;:::-;3905:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "306200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2515",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateCollateralRatio(address,uint256)": "infinite",
								"updateDEXFee(address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 288,
									"end": 673,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 288,
									"end": 673,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 288,
									"end": 673,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 325,
									"end": 361,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 325,
									"end": 361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 325,
									"end": 361,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 325,
									"end": 361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 361,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 325,
									"end": 361,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 325,
									"end": 361,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 325,
									"end": 361,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 361,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 325,
									"end": 361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 347,
									"end": 357,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 288,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 288,
									"end": 673,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 288,
									"end": 673,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 288,
									"end": 673,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 288,
									"end": 673,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 673,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 288,
									"end": 673,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 673,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 673,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 288,
									"end": 673,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 673,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d62a9bfe5f211caae9470b8ffcd0fa57e802a7753d6c8dad9e40ff3c488cdfc364736f6c634300081a0033",
									".code": [
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "E6BBC001"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "FB3C2C2B"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 288,
											"end": 673,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 527,
											"end": 671,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 527,
											"end": 671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 527,
											"end": 671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 527,
											"end": 671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 527,
											"end": 671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 527,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 527,
											"end": 671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 527,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 527,
											"end": 671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 521,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 366,
											"end": 521,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 366,
											"end": 521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 366,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 366,
											"end": 521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 366,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 366,
											"end": 521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 671,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 527,
											"end": 671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 628,
											"end": 657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 628,
											"end": 657,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 628,
											"end": 657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6060663E"
										},
										{
											"begin": 658,
											"end": 663,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 628,
											"end": 664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 527,
											"end": 671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 521,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 366,
											"end": 521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 481,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 478,
											"end": 488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 478,
											"end": 488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 478,
											"end": 488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "52F7C988"
										},
										{
											"begin": 489,
											"end": 497,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 499,
											"end": 513,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 478,
											"end": 514,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 478,
											"end": 514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 920,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 978,
											"end": 985,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1025,
											"end": 1030,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1007,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1007,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1007,
											"end": 1031,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1007,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1031,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1031,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1037,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1207,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1043,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1176,
											"end": 1181,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1137,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1182,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1137,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1127,
											"end": 1183,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1117,
											"end": 1201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1201,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1117,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1394,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1213,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1325,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1382,
											"end": 1387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1334,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1388,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1334,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1394,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1394,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1477,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1400,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1477,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1556,
											"end": 1580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1581,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1750,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1611,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1702,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1702,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1711,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1750,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1750,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 2272,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1756,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1859,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1904,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 1905,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1908,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2119,
											"end": 2126,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2108,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2117,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2053,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2127,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2043,
											"end": 2127,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2043,
											"end": 2127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2178,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2247,
											"end": 2254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2236,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2202,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2255,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2202,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2255,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 2272,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 2272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 2272,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 2272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 2272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2400,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2278,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2369,
											"end": 2374,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2351,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2375,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2351,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2349,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2376,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2331,
											"end": 2394,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2391,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2388,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2392,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2331,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2545,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2406,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2496,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2497,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2533,
											"end": 2538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2506,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2539,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2506,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2545,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2880,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2551,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2661,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2638,
											"end": 2645,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2657,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2662,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2746,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2627,
											"end": 2746,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2665,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2665,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2744,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2665,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2746,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2627,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2831,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2810,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2863,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2810,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2880,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 3547,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2886,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2984,
											"end": 2990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 2998,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3037,
											"end": 3046,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3028,
											"end": 3035,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3047,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3052,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3136,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3017,
											"end": 3136,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3055,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3055,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3055,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3055,
											"end": 3134,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3055,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3136,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3017,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3266,
											"end": 3273,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3264,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3200,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3274,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3200,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3325,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3394,
											"end": 3401,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3391,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3370,
											"end": 3392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3349,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3402,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3349,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3339,
											"end": 3402,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3339,
											"end": 3402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3294,
											"end": 3412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3453,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3502,
											"end": 3511,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3477,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 3547,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 3547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 3547,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 3547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 3547,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3671,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3553,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3640,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3640,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3640,
											"end": 3664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3640,
											"end": 3664,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3640,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3638,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3677,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3677,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3806,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3811,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3785,
											"end": 3811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3785,
											"end": 3811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3889,
											"end": 3890,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3887,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3874,
											"end": 3891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 3871,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3821,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3892,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3821,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3677,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3677,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3677,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3677,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3677,
											"end": 3899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3905,
											"end": 4237,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3905,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4026,
											"end": 4030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4145,
											"end": 4146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4147,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4077,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4148,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4077,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4226,
											"end": 4228,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4224,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4158,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4230,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4158,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3905,
											"end": 4237,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3905,
											"end": 4237,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3905,
											"end": 4237,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3905,
											"end": 4237,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3905,
											"end": 4237,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3905,
											"end": 4237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Governance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateCollateralRatio(address,uint256)": "e6bbc001",
							"updateDEXFee(address,uint256,uint256)": "fb3c2c2b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IConfigurable\",\"name\":\"stableCoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"updateCollateralRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IConfigurable\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newLpFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateDEXFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Governance.sol\":\"Governance\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Governance.sol\":{\"keccak256\":\"0x87fcfc00764516e1abbac85cb1cb0265f8324b6cf98a2c1c8d4d3cd9e2c9404a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://492d23fdc336911d9394bf5432820bfbdf4ea23c72802d386d957f9a9ccc2acc\",\"dweb:/ipfs/QmXqAA3DbQpLWw85LXBji3RUdGoZ2MKAKYUNV19rawKtdf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Governance.sol:Governance",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IConfigurable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ratio",
									"type": "uint256"
								}
							],
							"name": "setCollateralRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lpFeeBasisPoints",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_protocolFeeBasisPoints",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setCollateralRatio(uint256)": "6060663e",
							"setFee(uint256,uint256)": "52f7c988"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"setCollateralRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lpFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Governance.sol\":\"IConfigurable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Governance.sol\":{\"keccak256\":\"0x87fcfc00764516e1abbac85cb1cb0265f8324b6cf98a2c1c8d4d3cd9e2c9404a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://492d23fdc336911d9394bf5432820bfbdf4ea23c72802d386d957f9a9ccc2acc\",\"dweb:/ipfs/QmXqAA3DbQpLWw85LXBji3RUdGoZ2MKAKYUNV19rawKtdf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/Governance.sol": {
				"ast": {
					"absolutePath": "contracts/Governance.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Governance": [
							241
						],
						"IConfigurable": [
							193
						],
						"Ownable": [
							147
						]
					},
					"id": 242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 148,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IConfigurable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 193,
							"linearizedBaseContracts": [
								193
							],
							"name": "IConfigurable",
							"nameLocation": "122:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "52f7c988",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFee",
									"nameLocation": "151:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "_lpFeeBasisPoints",
												"nameLocation": "166:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "158:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_protocolFeeBasisPoints",
												"nameLocation": "193:23:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "185:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:60:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:0:2"
									},
									"scope": 193,
									"src": "142:85:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6060663e",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCollateralRatio",
									"nameLocation": "241:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "ratio",
												"nameLocation": "268:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "260:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "259:15:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:0:2"
									},
									"scope": 193,
									"src": "232:52:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 242,
							"src": "112:174:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 194,
										"name": "Ownable",
										"nameLocations": [
											"311:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "311:7:2"
									},
									"id": 195,
									"nodeType": "InheritanceSpecifier",
									"src": "311:7:2"
								}
							],
							"canonicalName": "Governance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 241,
							"linearizedBaseContracts": [
								241,
								147,
								177
							],
							"name": "Governance",
							"nameLocation": "297:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "359:2:2",
										"statements": []
									},
									"id": 203,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 198,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "347:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "351:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "347:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 200,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 197,
												"name": "Ownable",
												"nameLocations": [
													"339:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "339:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "339:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "336:2:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "359:0:2"
									},
									"scope": 241,
									"src": "325:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "468:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "newLpFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "489:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 219,
															"name": "newProtocolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "499:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 215,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "478:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IConfigurable_$193",
																"typeString": "contract IConfigurable"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "482:6:2",
														"memberName": "setFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "478:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) external"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "478:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "478:36:2"
											}
										]
									},
									"functionSelector": "fb3c2c2b",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 213,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 212,
												"name": "onlyOwner",
												"nameLocations": [
													"458:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "458:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "458:9:2"
										}
									],
									"name": "updateDEXFee",
									"nameLocation": "375:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "dex",
												"nameLocation": "402:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "388:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IConfigurable_$193",
													"typeString": "contract IConfigurable"
												},
												"typeName": {
													"id": 205,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 204,
														"name": "IConfigurable",
														"nameLocations": [
															"388:13:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 193,
														"src": "388:13:2"
													},
													"referencedDeclaration": 193,
													"src": "388:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IConfigurable_$193",
														"typeString": "contract IConfigurable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "newLpFee",
												"nameLocation": "415:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "407:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "newProtocolFee",
												"nameLocation": "433:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "425:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:61:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "468:0:2"
									},
									"scope": 241,
									"src": "366:155:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "618:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 236,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "658:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 233,
															"name": "stableCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "628:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IConfigurable_$193",
																"typeString": "contract IConfigurable"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "639:18:2",
														"memberName": "setCollateralRatio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "628:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "628:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "628:36:2"
											}
										]
									},
									"functionSelector": "e6bbc001",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 231,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 230,
												"name": "onlyOwner",
												"nameLocations": [
													"608:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "608:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "608:9:2"
										}
									],
									"name": "updateCollateralRatio",
									"nameLocation": "536:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "stableCoin",
												"nameLocation": "572:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "558:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IConfigurable_$193",
													"typeString": "contract IConfigurable"
												},
												"typeName": {
													"id": 225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 224,
														"name": "IConfigurable",
														"nameLocations": [
															"558:13:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 193,
														"src": "558:13:2"
													},
													"referencedDeclaration": 193,
													"src": "558:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IConfigurable_$193",
														"typeString": "contract IConfigurable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "ratio",
												"nameLocation": "592:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "584:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:41:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "618:0:2"
									},
									"scope": 241,
									"src": "527:144:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 242,
							"src": "288:385:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:642:2"
				},
				"id": 2
			}
		}
	}
}