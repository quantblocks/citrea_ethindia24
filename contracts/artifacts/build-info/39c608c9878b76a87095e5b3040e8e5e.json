{
	"id": "39c608c9878b76a87095e5b3040e8e5e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StableCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/IPriceOracle.sol\";\nimport \"./interfaces/IStableCoin.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title StableCoin\n * @dev A simple stablecoin implementation that uses cBTC as collateral.\n *      Supports accruing a stability fee over time, minting, burning, and liquidation.\n */\ncontract StableCoin is ERC20, Ownable, IStableCoin {\n    IERC20 public cBTC;\n    IPriceOracle public oracle;\n\n    uint256 public collateralRatio; // expressed as a scaled integer with 1e18 = 100%\n    uint256 public stabilityFee;    // annual stability fee in basis points (bps)\n    uint256 public lastAccrualTime;\n\n    mapping(address => uint256) public cBTCDeposits; // Track how much cBTC each user has deposited\n\n    event CollateralDeposited(address indexed user, uint256 amount);\n    event CollateralWithdrawn(address indexed user, uint256 amount);\n    event Minted(address indexed user, uint256 amount);\n    event Redeemed(address indexed user, uint256 amount);\n    event Liquidated(address indexed user, uint256 debtRepaid, uint256 collateralSeized);\n\n    constructor(\n        address _cBTC,\n        uint256 _collateralRatio,\n        address _oracle,\n        uint256 _stabilityFee\n    ) ERC20(\"Citrea USD\", \"cUSD\") Ownable(msg.sender) {\n        require(_cBTC != address(0), \"Invalid cBTC address\");\n        require(_oracle != address(0), \"Invalid oracle\");\n        require(_collateralRatio >= 1e18, \"Ratio must be >= 100%\");\n\n        cBTC = IERC20(_cBTC);\n        collateralRatio = _collateralRatio;\n        oracle = IPriceOracle(_oracle);\n        stabilityFee = _stabilityFee;\n        lastAccrualTime = block.timestamp;\n    }\n\n    /**\n     * @dev Accrues interest on the stablecoin supply by minting stability fee to owner.\n     *      Stability fee accumulates over time, increasing total supply.\n     */\n    function accrueInterest() public override {\n        uint256 timeElapsed = block.timestamp - lastAccrualTime;\n        if (timeElapsed > 0 && totalSupply() > 0) {\n            // stabilityFee is annual bps, so feeFraction = (stabilityFee * timeElapsed / secondsPerYear) / 10000\n            uint256 feeFraction = (stabilityFee * timeElapsed) / 31536000; // seconds per year\n            uint256 additionalSupply = (totalSupply() * feeFraction) / 10000;\n            if (additionalSupply > 0) {\n                _mint(owner(), additionalSupply);\n            }\n            lastAccrualTime = block.timestamp;\n        }\n    }\n\n    function getCollateralRatio() external view override returns (uint256) {\n        return collateralRatio;\n    }\n\n    /**\n     * @dev Deposit cBTC as collateral.\n     */\n    function depositCollateral(address user, uint256 amount) external override {\n        require(amount > 0, \"Amount must be > 0\");\n        require(cBTC.transferFrom(user, address(this), amount), \"cBTC transfer failed\");\n        cBTCDeposits[user] += amount;\n        emit CollateralDeposited(user, amount);\n    }\n\n    /**\n     * @dev Withdraw cBTC collateral as long as the user remains over-collateralized.\n     */\n    function withdrawCollateral(address user, uint256 amount) external override {\n        accrueInterest();\n        require(amount <= cBTCDeposits[user], \"Not enough collateral\");\n\n        uint256 userDebt = balanceOf(user);\n        uint256 price = oracle.getPrice(address(cBTC));\n        uint256 requiredCollateral = (userDebt * collateralRatio) / 1e18;\n        // Convert required cUSD collateral value to cBTC amount\n        requiredCollateral = (requiredCollateral * 1e18) / price;\n\n        uint256 maxWithdraw = cBTCDeposits[user] > requiredCollateral\n            ? cBTCDeposits[user] - requiredCollateral\n            : 0;\n\n        require(amount <= maxWithdraw, \"Withdrawal would undercollateralize\");\n        cBTCDeposits[user] -= amount;\n        require(cBTC.transfer(user, amount), \"cBTC transfer failed\");\n        emit CollateralWithdrawn(user, amount);\n    }\n\n    /**\n     * @dev Mint stablecoins if the user has enough collateral.\n     */\n    function mintStableCoin(address to, uint256 cUSDAmount) external override {\n        accrueInterest();\n        uint256 price = oracle.getPrice(address(cBTC));\n        uint256 requiredCollateral = (cUSDAmount * collateralRatio) / 1e18;\n        requiredCollateral = (requiredCollateral * 1e18) / price;\n        require(cBTCDeposits[msg.sender] >= requiredCollateral, \"Not enough collateral\");\n        _mint(to, cUSDAmount);\n        emit Minted(msg.sender, cUSDAmount);\n    }\n\n    /**\n     * @dev Burn stablecoins from the user's balance.\n     */\n    function burnStableCoin(address from, uint256 cUSDAmount) external override {\n        accrueInterest();\n        require(balanceOf(from) >= cUSDAmount, \"Not enough cUSD\");\n        _burn(from, cUSDAmount);\n        emit Redeemed(from, cUSDAmount);\n    }\n\n    /**\n     * @dev Liquidate an undercollateralized user.\n     *      A liquidator repays a portion of the user's debt, and in return seizes collateral\n     *      at a discount.\n     */\n    function liquidate(address user, uint256 cUSDAmount) external override {\n        accrueInterest();\n        uint256 price = oracle.getPrice(address(cBTC));\n        uint256 userDebt = balanceOf(user);\n        if (userDebt == 0) return;\n\n        // Check if undercollateralized\n        // Required value in cUSD = userDebt * collateralRatio\n        uint256 requiredValue = (userDebt * collateralRatio) / 1e18; // cUSD value required\n        uint256 userCollateralValue = (cBTCDeposits[user] * price) / 1e18;\n\n        if (userCollateralValue < requiredValue) {\n            uint256 repayAmount = cUSDAmount > userDebt ? userDebt : cUSDAmount;\n            require(balanceOf(msg.sender) >= repayAmount, \"Liquidator not enough cUSD\");\n            _transfer(msg.sender, address(this), repayAmount);\n            _burn(address(this), repayAmount);\n\n            // Seize collateral with a 10% liquidation bonus\n            uint256 collateralSeize = (repayAmount * collateralRatio) / 1e18;\n            collateralSeize = (collateralSeize * 1e18) / price;\n            collateralSeize = (collateralSeize * 110) / 100; \n            if (collateralSeize > cBTCDeposits[user]) {\n                collateralSeize = cBTCDeposits[user];\n            }\n\n            cBTCDeposits[user] -= collateralSeize;\n            require(cBTC.transfer(msg.sender, collateralSeize), \"cBTC transfer failed\");\n\n            // Reduce userDebt\n            // Already done by burning the repaid cUSD\n            emit Liquidated(user, repayAmount, collateralSeize);\n        }\n    }\n\n    /**\n     * @dev Owner can update collateral ratio.\n     */\n    function setCollateralRatio(uint256 _newRatio) external onlyOwner {\n        require(_newRatio >= 1e18, \"Ratio must be >= 100%\");\n        collateralRatio = _newRatio;\n    }\n\n    /**\n     * @dev Owner can set the stability fee (annualized in bps).\n     */\n    function setStabilityFee(uint256 _newFee) external onlyOwner {\n        require(_newFee <= 2000, \"Fee too high\");\n        stabilityFee = _newFee;\n    }\n\n    /**\n     * @dev Get how much cBTC collateral a user has deposited.\n     */\n    function getUserCollateral(address user) external view returns (uint256) {\n        return cBTCDeposits[user];\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"contracts/interfaces/IStableCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ninterface IStableCoin {\n    function mintStableCoin(address to, uint256 cUSDAmount) external;\n    function burnStableCoin(address from, uint256 cUSDAmount) external;\n    function depositCollateral(address user, uint256 amount) external;\n    function withdrawCollateral(address user, uint256 amount) external;\n    function getCollateralRatio() external view returns (uint256);\n    function accrueInterest() external;\n    function liquidate(address user, uint256 cUSDAmount) external;\n}\n"
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ninterface IPriceOracle {\n    function getPrice(address token) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StableCoin.sol": {
				"StableCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cBTC",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_collateralRatio",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_stabilityFee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtRepaid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "collateralSeized",
									"type": "uint256"
								}
							],
							"name": "Liquidated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Redeemed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accrueInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cUSDAmount",
									"type": "uint256"
								}
							],
							"name": "burnStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cBTC",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "cBTCDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collateralRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCollateralRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserCollateral",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastAccrualTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cUSDAmount",
									"type": "uint256"
								}
							],
							"name": "liquidate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cUSDAmount",
									"type": "uint256"
								}
							],
							"name": "mintStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracle",
							"outputs": [
								{
									"internalType": "contract IPriceOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newRatio",
									"type": "uint256"
								}
							],
							"name": "setCollateralRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFee",
									"type": "uint256"
								}
							],
							"name": "setStabilityFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stabilityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A simple stablecoin implementation that uses cBTC as collateral.      Supports accruing a stability fee over time, minting, burning, and liquidation.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"accrueInterest()": {
								"details": "Accrues interest on the stablecoin supply by minting stability fee to owner.      Stability fee accumulates over time, increasing total supply."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burnStableCoin(address,uint256)": {
								"details": "Burn stablecoins from the user's balance."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"depositCollateral(address,uint256)": {
								"details": "Deposit cBTC as collateral."
							},
							"getUserCollateral(address)": {
								"details": "Get how much cBTC collateral a user has deposited."
							},
							"liquidate(address,uint256)": {
								"details": "Liquidate an undercollateralized user.      A liquidator repays a portion of the user's debt, and in return seizes collateral      at a discount."
							},
							"mintStableCoin(address,uint256)": {
								"details": "Mint stablecoins if the user has enough collateral."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setCollateralRatio(uint256)": {
								"details": "Owner can update collateral ratio."
							},
							"setStabilityFee(uint256)": {
								"details": "Owner can set the stability fee (annualized in bps)."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawCollateral(address,uint256)": {
								"details": "Withdraw cBTC collateral as long as the user remains over-collateralized."
							}
						},
						"title": "StableCoin",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StableCoin.sol\":494:7376  contract StableCoin is ERC20, Ownable, IStableCoin {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StableCoin.sol\":1257:1827  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/StableCoin.sol\":1424:1434  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4369747265612055534400000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x6355534400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/StableCoin.sol\":1471:1472  0 */\n  0x00\n    /* \"contracts/StableCoin.sol\":1454:1473  _cBTC != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/StableCoin.sol\":1454:1459  _cBTC */\n  dup5\n    /* \"contracts/StableCoin.sol\":1454:1473  _cBTC != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/StableCoin.sol\":1446:1498  require(_cBTC != address(0), \"Invalid cBTC address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/StableCoin.sol\":1535:1536  0 */\n  0x00\n    /* \"contracts/StableCoin.sol\":1516:1537  _oracle != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/StableCoin.sol\":1516:1523  _oracle */\n  dup3\n    /* \"contracts/StableCoin.sol\":1516:1537  _oracle != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/StableCoin.sol\":1508:1556  require(_oracle != address(0), \"Invalid oracle\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"contracts/StableCoin.sol\":1594:1598  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/StableCoin.sol\":1574:1590  _collateralRatio */\n  dup4\n    /* \"contracts/StableCoin.sol\":1574:1598  _collateralRatio >= 1e18 */\n  lt\n  iszero\n    /* \"contracts/StableCoin.sol\":1566:1624  require(_collateralRatio >= 1e18, \"Ratio must be >= 100%\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"contracts/StableCoin.sol\":1649:1654  _cBTC */\n  dup4\n    /* \"contracts/StableCoin.sol\":1635:1639  cBTC */\n  0x06\n  0x00\n    /* \"contracts/StableCoin.sol\":1635:1655  cBTC = IERC20(_cBTC) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StableCoin.sol\":1683:1699  _collateralRatio */\n  dup3\n    /* \"contracts/StableCoin.sol\":1665:1680  collateralRatio */\n  0x08\n    /* \"contracts/StableCoin.sol\":1665:1699  collateralRatio = _collateralRatio */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StableCoin.sol\":1731:1738  _oracle */\n  dup2\n    /* \"contracts/StableCoin.sol\":1709:1715  oracle */\n  0x07\n  0x00\n    /* \"contracts/StableCoin.sol\":1709:1739  oracle = IPriceOracle(_oracle) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StableCoin.sol\":1764:1777  _stabilityFee */\n  dup1\n    /* \"contracts/StableCoin.sol\":1749:1761  stabilityFee */\n  0x09\n    /* \"contracts/StableCoin.sol\":1749:1777  stabilityFee = _stabilityFee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StableCoin.sol\":1805:1820  block.timestamp */\n  timestamp\n    /* \"contracts/StableCoin.sol\":1787:1802  lastAccrualTime */\n  0x0a\n    /* \"contracts/StableCoin.sol\":1787:1820  lastAccrualTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StableCoin.sol\":1257:1827  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/StableCoin.sol\":494:7376  contract StableCoin is ERC20, Ownable, IStableCoin {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_30:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_32:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_33:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_72\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_32\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_34:\n    /* \"#utility.yul\":641:665   */\n  tag_74\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_33\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_75:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_35:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_77\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_34\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_36:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_37:\n    /* \"#utility.yul\":1001:1025   */\n  tag_80\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_36\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_81:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_38:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_83\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_37\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2025   */\ntag_3:\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1310:1316   */\n  dup1\n    /* \"#utility.yul\":1318:1324   */\n  0x00\n    /* \"#utility.yul\":1326:1332   */\n  dup1\n    /* \"#utility.yul\":1375:1378   */\n  0x80\n    /* \"#utility.yul\":1363:1372   */\n  dup6\n    /* \"#utility.yul\":1354:1361   */\n  dup8\n    /* \"#utility.yul\":1350:1373   */\n  sub\n    /* \"#utility.yul\":1346:1379   */\n  slt\n    /* \"#utility.yul\":1343:1463   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":1382:1461   */\n  tag_86\n  tag_30\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1343:1463   */\ntag_85:\n    /* \"#utility.yul\":1502:1503   */\n  0x00\n    /* \"#utility.yul\":1527:1591   */\n  tag_87\n    /* \"#utility.yul\":1583:1590   */\n  dup8\n    /* \"#utility.yul\":1574:1580   */\n  dup3\n    /* \"#utility.yul\":1563:1572   */\n  dup9\n    /* \"#utility.yul\":1559:1581   */\n  add\n    /* \"#utility.yul\":1527:1591   */\n  tag_35\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1517:1591   */\n  swap5\n  pop\n    /* \"#utility.yul\":1473:1601   */\n  pop\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"#utility.yul\":1666:1730   */\n  tag_88\n    /* \"#utility.yul\":1722:1729   */\n  dup8\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1702:1711   */\n  dup9\n    /* \"#utility.yul\":1698:1720   */\n  add\n    /* \"#utility.yul\":1666:1730   */\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1656:1730   */\n  swap4\n  pop\n    /* \"#utility.yul\":1611:1740   */\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x40\n    /* \"#utility.yul\":1805:1869   */\n  tag_89\n    /* \"#utility.yul\":1861:1868   */\n  dup8\n    /* \"#utility.yul\":1852:1858   */\n  dup3\n    /* \"#utility.yul\":1841:1850   */\n  dup9\n    /* \"#utility.yul\":1837:1859   */\n  add\n    /* \"#utility.yul\":1805:1869   */\n  tag_35\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1795:1869   */\n  swap3\n  pop\n    /* \"#utility.yul\":1750:1879   */\n  pop\n    /* \"#utility.yul\":1918:1920   */\n  0x60\n    /* \"#utility.yul\":1944:2008   */\n  tag_90\n    /* \"#utility.yul\":2000:2007   */\n  dup8\n    /* \"#utility.yul\":1991:1997   */\n  dup3\n    /* \"#utility.yul\":1980:1989   */\n  dup9\n    /* \"#utility.yul\":1976:1998   */\n  add\n    /* \"#utility.yul\":1944:2008   */\n  tag_38\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1934:2008   */\n  swap2\n  pop\n    /* \"#utility.yul\":1889:2018   */\n  pop\n    /* \"#utility.yul\":1205:2025   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2031:2130   */\ntag_39:\n    /* \"#utility.yul\":2083:2089   */\n  0x00\n    /* \"#utility.yul\":2117:2122   */\n  dup2\n    /* \"#utility.yul\":2111:2123   */\n  mload\n    /* \"#utility.yul\":2101:2123   */\n  swap1\n  pop\n    /* \"#utility.yul\":2031:2130   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2136:2316   */\ntag_40:\n    /* \"#utility.yul\":2184:2261   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2181:2182   */\n  0x00\n    /* \"#utility.yul\":2174:2262   */\n  mstore\n    /* \"#utility.yul\":2281:2285   */\n  0x41\n    /* \"#utility.yul\":2278:2279   */\n  0x04\n    /* \"#utility.yul\":2271:2286   */\n  mstore\n    /* \"#utility.yul\":2305:2309   */\n  0x24\n    /* \"#utility.yul\":2302:2303   */\n  0x00\n    /* \"#utility.yul\":2295:2310   */\n  revert\n    /* \"#utility.yul\":2322:2502   */\ntag_41:\n    /* \"#utility.yul\":2370:2447   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2367:2368   */\n  0x00\n    /* \"#utility.yul\":2360:2448   */\n  mstore\n    /* \"#utility.yul\":2467:2471   */\n  0x22\n    /* \"#utility.yul\":2464:2465   */\n  0x04\n    /* \"#utility.yul\":2457:2472   */\n  mstore\n    /* \"#utility.yul\":2491:2495   */\n  0x24\n    /* \"#utility.yul\":2488:2489   */\n  0x00\n    /* \"#utility.yul\":2481:2496   */\n  revert\n    /* \"#utility.yul\":2508:2828   */\ntag_42:\n    /* \"#utility.yul\":2552:2558   */\n  0x00\n    /* \"#utility.yul\":2589:2590   */\n  0x02\n    /* \"#utility.yul\":2583:2587   */\n  dup3\n    /* \"#utility.yul\":2579:2591   */\n  div\n    /* \"#utility.yul\":2569:2591   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2637   */\n  0x01\n    /* \"#utility.yul\":2630:2634   */\n  dup3\n    /* \"#utility.yul\":2626:2638   */\n  and\n    /* \"#utility.yul\":2657:2675   */\n  dup1\n    /* \"#utility.yul\":2647:2728   */\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2713:2717   */\n  0x7f\n    /* \"#utility.yul\":2705:2711   */\n  dup3\n    /* \"#utility.yul\":2701:2718   */\n  and\n    /* \"#utility.yul\":2691:2718   */\n  swap2\n  pop\n    /* \"#utility.yul\":2647:2728   */\ntag_95:\n    /* \"#utility.yul\":2775:2777   */\n  0x20\n    /* \"#utility.yul\":2767:2773   */\n  dup3\n    /* \"#utility.yul\":2764:2778   */\n  lt\n    /* \"#utility.yul\":2744:2762   */\n  dup2\n    /* \"#utility.yul\":2741:2779   */\n  sub\n    /* \"#utility.yul\":2738:2822   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2794:2812   */\n  tag_97\n  tag_41\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2738:2822   */\ntag_96:\n    /* \"#utility.yul\":2559:2828   */\n  pop\n    /* \"#utility.yul\":2508:2828   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2834:2975   */\ntag_43:\n    /* \"#utility.yul\":2883:2887   */\n  0x00\n    /* \"#utility.yul\":2906:2909   */\n  dup2\n    /* \"#utility.yul\":2898:2909   */\n  swap1\n  pop\n    /* \"#utility.yul\":2929:2932   */\n  dup2\n    /* \"#utility.yul\":2926:2927   */\n  0x00\n    /* \"#utility.yul\":2919:2933   */\n  mstore\n    /* \"#utility.yul\":2963:2967   */\n  0x20\n    /* \"#utility.yul\":2960:2961   */\n  0x00\n    /* \"#utility.yul\":2950:2968   */\n  keccak256\n    /* \"#utility.yul\":2942:2968   */\n  swap1\n  pop\n    /* \"#utility.yul\":2834:2975   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2981:3074   */\ntag_44:\n    /* \"#utility.yul\":3018:3024   */\n  0x00\n    /* \"#utility.yul\":3065:3067   */\n  0x20\n    /* \"#utility.yul\":3060:3062   */\n  0x1f\n    /* \"#utility.yul\":3053:3058   */\n  dup4\n    /* \"#utility.yul\":3049:3063   */\n  add\n    /* \"#utility.yul\":3045:3068   */\n  div\n    /* \"#utility.yul\":3035:3068   */\n  swap1\n  pop\n    /* \"#utility.yul\":2981:3074   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3080:3187   */\ntag_45:\n    /* \"#utility.yul\":3124:3132   */\n  0x00\n    /* \"#utility.yul\":3174:3179   */\n  dup3\n    /* \"#utility.yul\":3168:3172   */\n  dup3\n    /* \"#utility.yul\":3164:3180   */\n  shl\n    /* \"#utility.yul\":3143:3180   */\n  swap1\n  pop\n    /* \"#utility.yul\":3080:3187   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3193:3586   */\ntag_46:\n    /* \"#utility.yul\":3262:3268   */\n  0x00\n    /* \"#utility.yul\":3312:3313   */\n  0x08\n    /* \"#utility.yul\":3300:3310   */\n  dup4\n    /* \"#utility.yul\":3296:3314   */\n  mul\n    /* \"#utility.yul\":3335:3432   */\n  tag_102\n    /* \"#utility.yul\":3365:3431   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3354:3363   */\n  dup3\n    /* \"#utility.yul\":3335:3432   */\n  tag_45\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3453:3492   */\n  tag_103\n    /* \"#utility.yul\":3483:3491   */\n  dup7\n    /* \"#utility.yul\":3472:3481   */\n  dup4\n    /* \"#utility.yul\":3453:3492   */\n  tag_45\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3441:3492   */\n  swap6\n  pop\n    /* \"#utility.yul\":3525:3529   */\n  dup1\n    /* \"#utility.yul\":3521:3530   */\n  not\n    /* \"#utility.yul\":3514:3519   */\n  dup5\n    /* \"#utility.yul\":3510:3531   */\n  and\n    /* \"#utility.yul\":3501:3531   */\n  swap4\n  pop\n    /* \"#utility.yul\":3574:3578   */\n  dup1\n    /* \"#utility.yul\":3564:3572   */\n  dup7\n    /* \"#utility.yul\":3560:3579   */\n  and\n    /* \"#utility.yul\":3553:3558   */\n  dup5\n    /* \"#utility.yul\":3550:3580   */\n  or\n    /* \"#utility.yul\":3540:3580   */\n  swap3\n  pop\n    /* \"#utility.yul\":3269:3586   */\n  pop\n  pop\n    /* \"#utility.yul\":3193:3586   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3592:3652   */\ntag_47:\n    /* \"#utility.yul\":3620:3623   */\n  0x00\n    /* \"#utility.yul\":3641:3646   */\n  dup2\n    /* \"#utility.yul\":3634:3646   */\n  swap1\n  pop\n    /* \"#utility.yul\":3592:3652   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3658:3800   */\ntag_48:\n    /* \"#utility.yul\":3708:3717   */\n  0x00\n    /* \"#utility.yul\":3741:3794   */\n  tag_106\n    /* \"#utility.yul\":3759:3793   */\n  tag_107\n    /* \"#utility.yul\":3768:3792   */\n  tag_108\n    /* \"#utility.yul\":3786:3791   */\n  dup5\n    /* \"#utility.yul\":3768:3792   */\n  tag_36\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3759:3793   */\n  tag_47\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3741:3794   */\n  tag_36\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3728:3794   */\n  swap1\n  pop\n    /* \"#utility.yul\":3658:3800   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3806:3881   */\ntag_49:\n    /* \"#utility.yul\":3849:3852   */\n  0x00\n    /* \"#utility.yul\":3870:3875   */\n  dup2\n    /* \"#utility.yul\":3863:3875   */\n  swap1\n  pop\n    /* \"#utility.yul\":3806:3881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3887:4156   */\ntag_50:\n    /* \"#utility.yul\":3997:4036   */\n  tag_111\n    /* \"#utility.yul\":4028:4035   */\n  dup4\n    /* \"#utility.yul\":3997:4036   */\n  tag_48\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4058:4149   */\n  tag_112\n    /* \"#utility.yul\":4107:4148   */\n  tag_113\n    /* \"#utility.yul\":4131:4147   */\n  dup3\n    /* \"#utility.yul\":4107:4148   */\n  tag_49\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4099:4105   */\n  dup5\n    /* \"#utility.yul\":4092:4096   */\n  dup5\n    /* \"#utility.yul\":4086:4097   */\n  sload\n    /* \"#utility.yul\":4058:4149   */\n  tag_46\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4052:4056   */\n  dup3\n    /* \"#utility.yul\":4045:4150   */\n  sstore\n    /* \"#utility.yul\":3963:4156   */\n  pop\n    /* \"#utility.yul\":3887:4156   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4162:4235   */\ntag_51:\n    /* \"#utility.yul\":4207:4210   */\n  0x00\n    /* \"#utility.yul\":4162:4235   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4241:4430   */\ntag_52:\n    /* \"#utility.yul\":4318:4350   */\n  tag_116\n  tag_51\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4359:4424   */\n  tag_117\n    /* \"#utility.yul\":4417:4423   */\n  dup2\n    /* \"#utility.yul\":4409:4415   */\n  dup5\n    /* \"#utility.yul\":4403:4407   */\n  dup5\n    /* \"#utility.yul\":4359:4424   */\n  tag_50\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4294:4430   */\n  pop\n    /* \"#utility.yul\":4241:4430   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4436:4622   */\ntag_53:\n    /* \"#utility.yul\":4496:4616   */\ntag_119:\n    /* \"#utility.yul\":4513:4516   */\n  dup2\n    /* \"#utility.yul\":4506:4511   */\n  dup2\n    /* \"#utility.yul\":4503:4517   */\n  lt\n    /* \"#utility.yul\":4496:4616   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4567:4606   */\n  tag_122\n    /* \"#utility.yul\":4604:4605   */\n  0x00\n    /* \"#utility.yul\":4597:4602   */\n  dup3\n    /* \"#utility.yul\":4567:4606   */\n  tag_52\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4540:4541   */\n  0x01\n    /* \"#utility.yul\":4533:4538   */\n  dup2\n    /* \"#utility.yul\":4529:4542   */\n  add\n    /* \"#utility.yul\":4520:4542   */\n  swap1\n  pop\n    /* \"#utility.yul\":4496:4616   */\n  jump(tag_119)\ntag_121:\n    /* \"#utility.yul\":4436:4622   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4628:5171   */\ntag_54:\n    /* \"#utility.yul\":4729:4731   */\n  0x1f\n    /* \"#utility.yul\":4724:4727   */\n  dup3\n    /* \"#utility.yul\":4721:4732   */\n  gt\n    /* \"#utility.yul\":4718:5164   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4763:4801   */\n  tag_125\n    /* \"#utility.yul\":4795:4800   */\n  dup2\n    /* \"#utility.yul\":4763:4801   */\n  tag_43\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4847:4876   */\n  tag_126\n    /* \"#utility.yul\":4865:4875   */\n  dup5\n    /* \"#utility.yul\":4847:4876   */\n  tag_44\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4837:4845   */\n  dup2\n    /* \"#utility.yul\":4833:4877   */\n  add\n    /* \"#utility.yul\":5030:5032   */\n  0x20\n    /* \"#utility.yul\":5018:5028   */\n  dup6\n    /* \"#utility.yul\":5015:5033   */\n  lt\n    /* \"#utility.yul\":5012:5061   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":5051:5059   */\n  dup2\n    /* \"#utility.yul\":5036:5059   */\n  swap1\n  pop\n    /* \"#utility.yul\":5012:5061   */\ntag_127:\n    /* \"#utility.yul\":5074:5154   */\n  tag_128\n    /* \"#utility.yul\":5130:5152   */\n  tag_129\n    /* \"#utility.yul\":5148:5151   */\n  dup6\n    /* \"#utility.yul\":5130:5152   */\n  tag_44\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5120:5128   */\n  dup4\n    /* \"#utility.yul\":5116:5153   */\n  add\n    /* \"#utility.yul\":5103:5114   */\n  dup3\n    /* \"#utility.yul\":5074:5154   */\n  tag_53\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4733:5164   */\n  pop\n  pop\n    /* \"#utility.yul\":4718:5164   */\ntag_124:\n    /* \"#utility.yul\":4628:5171   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5177:5294   */\ntag_55:\n    /* \"#utility.yul\":5231:5239   */\n  0x00\n    /* \"#utility.yul\":5281:5286   */\n  dup3\n    /* \"#utility.yul\":5275:5279   */\n  dup3\n    /* \"#utility.yul\":5271:5287   */\n  shr\n    /* \"#utility.yul\":5250:5287   */\n  swap1\n  pop\n    /* \"#utility.yul\":5177:5294   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5300:5469   */\ntag_56:\n    /* \"#utility.yul\":5344:5350   */\n  0x00\n    /* \"#utility.yul\":5377:5428   */\n  tag_132\n    /* \"#utility.yul\":5425:5426   */\n  0x00\n    /* \"#utility.yul\":5421:5427   */\n  not\n    /* \"#utility.yul\":5413:5418   */\n  dup5\n    /* \"#utility.yul\":5410:5411   */\n  0x08\n    /* \"#utility.yul\":5406:5419   */\n  mul\n    /* \"#utility.yul\":5377:5428   */\n  tag_55\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5373:5429   */\n  not\n    /* \"#utility.yul\":5458:5462   */\n  dup1\n    /* \"#utility.yul\":5452:5456   */\n  dup4\n    /* \"#utility.yul\":5448:5463   */\n  and\n    /* \"#utility.yul\":5438:5463   */\n  swap2\n  pop\n    /* \"#utility.yul\":5351:5469   */\n  pop\n    /* \"#utility.yul\":5300:5469   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5474:5769   */\ntag_57:\n    /* \"#utility.yul\":5550:5554   */\n  0x00\n    /* \"#utility.yul\":5696:5725   */\n  tag_134\n    /* \"#utility.yul\":5721:5724   */\n  dup4\n    /* \"#utility.yul\":5715:5719   */\n  dup4\n    /* \"#utility.yul\":5696:5725   */\n  tag_56\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5688:5725   */\n  swap2\n  pop\n    /* \"#utility.yul\":5758:5761   */\n  dup3\n    /* \"#utility.yul\":5755:5756   */\n  0x02\n    /* \"#utility.yul\":5751:5762   */\n  mul\n    /* \"#utility.yul\":5745:5749   */\n  dup3\n    /* \"#utility.yul\":5742:5763   */\n  or\n    /* \"#utility.yul\":5734:5763   */\n  swap1\n  pop\n    /* \"#utility.yul\":5474:5769   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5774:7169   */\ntag_9:\n    /* \"#utility.yul\":5891:5928   */\n  tag_136\n    /* \"#utility.yul\":5924:5927   */\n  dup3\n    /* \"#utility.yul\":5891:5928   */\n  tag_39\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5993:6011   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5985:5991   */\n  dup2\n    /* \"#utility.yul\":5982:6012   */\n  gt\n    /* \"#utility.yul\":5979:6035   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":6015:6033   */\n  tag_138\n  tag_40\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5979:6035   */\ntag_137:\n    /* \"#utility.yul\":6059:6097   */\n  tag_139\n    /* \"#utility.yul\":6091:6095   */\n  dup3\n    /* \"#utility.yul\":6085:6096   */\n  sload\n    /* \"#utility.yul\":6059:6097   */\n  tag_42\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6144:6211   */\n  tag_140\n    /* \"#utility.yul\":6204:6210   */\n  dup3\n    /* \"#utility.yul\":6196:6202   */\n  dup3\n    /* \"#utility.yul\":6190:6194   */\n  dup6\n    /* \"#utility.yul\":6144:6211   */\n  tag_54\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6238:6239   */\n  0x00\n    /* \"#utility.yul\":6262:6266   */\n  0x20\n    /* \"#utility.yul\":6249:6266   */\n  swap1\n  pop\n    /* \"#utility.yul\":6294:6296   */\n  0x1f\n    /* \"#utility.yul\":6286:6292   */\n  dup4\n    /* \"#utility.yul\":6283:6297   */\n  gt\n    /* \"#utility.yul\":6311:6312   */\n  0x01\n    /* \"#utility.yul\":6306:6924   */\n  dup2\n  eq\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6968:6969   */\n  0x00\n    /* \"#utility.yul\":6985:6991   */\n  dup5\n    /* \"#utility.yul\":6982:7059   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":7034:7043   */\n  dup3\n    /* \"#utility.yul\":7029:7032   */\n  dup8\n    /* \"#utility.yul\":7025:7044   */\n  add\n    /* \"#utility.yul\":7019:7045   */\n  mload\n    /* \"#utility.yul\":7010:7045   */\n  swap1\n  pop\n    /* \"#utility.yul\":6982:7059   */\ntag_143:\n    /* \"#utility.yul\":7085:7152   */\n  tag_144\n    /* \"#utility.yul\":7145:7151   */\n  dup6\n    /* \"#utility.yul\":7138:7143   */\n  dup3\n    /* \"#utility.yul\":7085:7152   */\n  tag_57\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":7079:7083   */\n  dup7\n    /* \"#utility.yul\":7072:7153   */\n  sstore\n    /* \"#utility.yul\":6941:7163   */\n  pop\n    /* \"#utility.yul\":6276:7163   */\n  jump(tag_141)\n    /* \"#utility.yul\":6306:6924   */\ntag_142:\n    /* \"#utility.yul\":6358:6362   */\n  0x1f\n    /* \"#utility.yul\":6354:6363   */\n  not\n    /* \"#utility.yul\":6346:6352   */\n  dup5\n    /* \"#utility.yul\":6342:6364   */\n  and\n    /* \"#utility.yul\":6392:6429   */\n  tag_145\n    /* \"#utility.yul\":6424:6428   */\n  dup7\n    /* \"#utility.yul\":6392:6429   */\n  tag_43\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6451:6452   */\n  0x00\n    /* \"#utility.yul\":6465:6673   */\ntag_146:\n    /* \"#utility.yul\":6479:6486   */\n  dup3\n    /* \"#utility.yul\":6476:6477   */\n  dup2\n    /* \"#utility.yul\":6473:6487   */\n  lt\n    /* \"#utility.yul\":6465:6673   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6558:6567   */\n  dup5\n    /* \"#utility.yul\":6553:6556   */\n  dup10\n    /* \"#utility.yul\":6549:6568   */\n  add\n    /* \"#utility.yul\":6543:6569   */\n  mload\n    /* \"#utility.yul\":6535:6541   */\n  dup3\n    /* \"#utility.yul\":6528:6570   */\n  sstore\n    /* \"#utility.yul\":6609:6610   */\n  0x01\n    /* \"#utility.yul\":6601:6607   */\n  dup3\n    /* \"#utility.yul\":6597:6611   */\n  add\n    /* \"#utility.yul\":6587:6611   */\n  swap2\n  pop\n    /* \"#utility.yul\":6656:6658   */\n  0x20\n    /* \"#utility.yul\":6645:6654   */\n  dup6\n    /* \"#utility.yul\":6641:6659   */\n  add\n    /* \"#utility.yul\":6628:6659   */\n  swap5\n  pop\n    /* \"#utility.yul\":6502:6506   */\n  0x20\n    /* \"#utility.yul\":6499:6500   */\n  dup2\n    /* \"#utility.yul\":6495:6507   */\n  add\n    /* \"#utility.yul\":6490:6507   */\n  swap1\n  pop\n    /* \"#utility.yul\":6465:6673   */\n  jump(tag_146)\ntag_148:\n    /* \"#utility.yul\":6701:6707   */\n  dup7\n    /* \"#utility.yul\":6692:6699   */\n  dup4\n    /* \"#utility.yul\":6689:6708   */\n  lt\n    /* \"#utility.yul\":6686:6865   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6759:6768   */\n  dup5\n    /* \"#utility.yul\":6754:6757   */\n  dup10\n    /* \"#utility.yul\":6750:6769   */\n  add\n    /* \"#utility.yul\":6744:6770   */\n  mload\n    /* \"#utility.yul\":6802:6850   */\n  tag_150\n    /* \"#utility.yul\":6844:6848   */\n  0x1f\n    /* \"#utility.yul\":6836:6842   */\n  dup10\n    /* \"#utility.yul\":6832:6849   */\n  and\n    /* \"#utility.yul\":6821:6830   */\n  dup3\n    /* \"#utility.yul\":6802:6850   */\n  tag_56\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6794:6800   */\n  dup4\n    /* \"#utility.yul\":6787:6851   */\n  sstore\n    /* \"#utility.yul\":6709:6865   */\n  pop\n    /* \"#utility.yul\":6686:6865   */\ntag_149:\n    /* \"#utility.yul\":6911:6912   */\n  0x01\n    /* \"#utility.yul\":6907:6908   */\n  0x02\n    /* \"#utility.yul\":6899:6905   */\n  dup9\n    /* \"#utility.yul\":6895:6909   */\n  mul\n    /* \"#utility.yul\":6891:6913   */\n  add\n    /* \"#utility.yul\":6885:6889   */\n  dup9\n    /* \"#utility.yul\":6878:6914   */\n  sstore\n    /* \"#utility.yul\":6313:6924   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6276:7163   */\ntag_141:\n  pop\n    /* \"#utility.yul\":5866:7169   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5774:7169   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7175:7293   */\ntag_58:\n    /* \"#utility.yul\":7262:7286   */\n  tag_152\n    /* \"#utility.yul\":7280:7285   */\n  dup2\n    /* \"#utility.yul\":7262:7286   */\n  tag_33\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7257:7260   */\n  dup3\n    /* \"#utility.yul\":7250:7287   */\n  mstore\n    /* \"#utility.yul\":7175:7293   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7299:7521   */\ntag_14:\n    /* \"#utility.yul\":7392:7396   */\n  0x00\n    /* \"#utility.yul\":7430:7432   */\n  0x20\n    /* \"#utility.yul\":7419:7428   */\n  dup3\n    /* \"#utility.yul\":7415:7433   */\n  add\n    /* \"#utility.yul\":7407:7433   */\n  swap1\n  pop\n    /* \"#utility.yul\":7443:7514   */\n  tag_154\n    /* \"#utility.yul\":7511:7512   */\n  0x00\n    /* \"#utility.yul\":7500:7509   */\n  dup4\n    /* \"#utility.yul\":7496:7513   */\n  add\n    /* \"#utility.yul\":7487:7493   */\n  dup5\n    /* \"#utility.yul\":7443:7514   */\n  tag_58\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7299:7521   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7527:7696   */\ntag_59:\n    /* \"#utility.yul\":7611:7622   */\n  0x00\n    /* \"#utility.yul\":7645:7651   */\n  dup3\n    /* \"#utility.yul\":7640:7643   */\n  dup3\n    /* \"#utility.yul\":7633:7652   */\n  mstore\n    /* \"#utility.yul\":7685:7689   */\n  0x20\n    /* \"#utility.yul\":7680:7683   */\n  dup3\n    /* \"#utility.yul\":7676:7690   */\n  add\n    /* \"#utility.yul\":7661:7690   */\n  swap1\n  pop\n    /* \"#utility.yul\":7527:7696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7702:7872   */\ntag_60:\n    /* \"#utility.yul\":7842:7864   */\n  0x496e76616c696420634254432061646472657373000000000000000000000000\n    /* \"#utility.yul\":7838:7839   */\n  0x00\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7826:7840   */\n  add\n    /* \"#utility.yul\":7819:7865   */\n  mstore\n    /* \"#utility.yul\":7702:7872   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7878:8244   */\ntag_61:\n    /* \"#utility.yul\":8020:8023   */\n  0x00\n    /* \"#utility.yul\":8041:8108   */\n  tag_158\n    /* \"#utility.yul\":8105:8107   */\n  0x14\n    /* \"#utility.yul\":8100:8103   */\n  dup4\n    /* \"#utility.yul\":8041:8108   */\n  tag_59\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":8034:8108   */\n  swap2\n  pop\n    /* \"#utility.yul\":8117:8210   */\n  tag_159\n    /* \"#utility.yul\":8206:8209   */\n  dup3\n    /* \"#utility.yul\":8117:8210   */\n  tag_60\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":8235:8237   */\n  0x20\n    /* \"#utility.yul\":8230:8233   */\n  dup3\n    /* \"#utility.yul\":8226:8238   */\n  add\n    /* \"#utility.yul\":8219:8238   */\n  swap1\n  pop\n    /* \"#utility.yul\":7878:8244   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8250:8669   */\ntag_20:\n    /* \"#utility.yul\":8416:8420   */\n  0x00\n    /* \"#utility.yul\":8454:8456   */\n  0x20\n    /* \"#utility.yul\":8443:8452   */\n  dup3\n    /* \"#utility.yul\":8439:8457   */\n  add\n    /* \"#utility.yul\":8431:8457   */\n  swap1\n  pop\n    /* \"#utility.yul\":8503:8512   */\n  dup2\n    /* \"#utility.yul\":8497:8501   */\n  dup2\n    /* \"#utility.yul\":8493:8513   */\n  sub\n    /* \"#utility.yul\":8489:8490   */\n  0x00\n    /* \"#utility.yul\":8478:8487   */\n  dup4\n    /* \"#utility.yul\":8474:8491   */\n  add\n    /* \"#utility.yul\":8467:8514   */\n  mstore\n    /* \"#utility.yul\":8531:8662   */\n  tag_161\n    /* \"#utility.yul\":8657:8661   */\n  dup2\n    /* \"#utility.yul\":8531:8662   */\n  tag_61\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":8523:8662   */\n  swap1\n  pop\n    /* \"#utility.yul\":8250:8669   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8675:8839   */\ntag_62:\n    /* \"#utility.yul\":8815:8831   */\n  0x496e76616c6964206f7261636c65000000000000000000000000000000000000\n    /* \"#utility.yul\":8811:8812   */\n  0x00\n    /* \"#utility.yul\":8803:8809   */\n  dup3\n    /* \"#utility.yul\":8799:8813   */\n  add\n    /* \"#utility.yul\":8792:8832   */\n  mstore\n    /* \"#utility.yul\":8675:8839   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8845:9211   */\ntag_63:\n    /* \"#utility.yul\":8987:8990   */\n  0x00\n    /* \"#utility.yul\":9008:9075   */\n  tag_164\n    /* \"#utility.yul\":9072:9074   */\n  0x0e\n    /* \"#utility.yul\":9067:9070   */\n  dup4\n    /* \"#utility.yul\":9008:9075   */\n  tag_59\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":9001:9075   */\n  swap2\n  pop\n    /* \"#utility.yul\":9084:9177   */\n  tag_165\n    /* \"#utility.yul\":9173:9176   */\n  dup3\n    /* \"#utility.yul\":9084:9177   */\n  tag_62\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":9202:9204   */\n  0x20\n    /* \"#utility.yul\":9197:9200   */\n  dup3\n    /* \"#utility.yul\":9193:9205   */\n  add\n    /* \"#utility.yul\":9186:9205   */\n  swap1\n  pop\n    /* \"#utility.yul\":8845:9211   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9217:9636   */\ntag_23:\n    /* \"#utility.yul\":9383:9387   */\n  0x00\n    /* \"#utility.yul\":9421:9423   */\n  0x20\n    /* \"#utility.yul\":9410:9419   */\n  dup3\n    /* \"#utility.yul\":9406:9424   */\n  add\n    /* \"#utility.yul\":9398:9424   */\n  swap1\n  pop\n    /* \"#utility.yul\":9470:9479   */\n  dup2\n    /* \"#utility.yul\":9464:9468   */\n  dup2\n    /* \"#utility.yul\":9460:9480   */\n  sub\n    /* \"#utility.yul\":9456:9457   */\n  0x00\n    /* \"#utility.yul\":9445:9454   */\n  dup4\n    /* \"#utility.yul\":9441:9458   */\n  add\n    /* \"#utility.yul\":9434:9481   */\n  mstore\n    /* \"#utility.yul\":9498:9629   */\n  tag_167\n    /* \"#utility.yul\":9624:9628   */\n  dup2\n    /* \"#utility.yul\":9498:9629   */\n  tag_63\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":9490:9629   */\n  swap1\n  pop\n    /* \"#utility.yul\":9217:9636   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9642:9813   */\ntag_64:\n    /* \"#utility.yul\":9782:9805   */\n  0x526174696f206d757374206265203e3d20313030250000000000000000000000\n    /* \"#utility.yul\":9778:9779   */\n  0x00\n    /* \"#utility.yul\":9770:9776   */\n  dup3\n    /* \"#utility.yul\":9766:9780   */\n  add\n    /* \"#utility.yul\":9759:9806   */\n  mstore\n    /* \"#utility.yul\":9642:9813   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9819:10185   */\ntag_65:\n    /* \"#utility.yul\":9961:9964   */\n  0x00\n    /* \"#utility.yul\":9982:10049   */\n  tag_170\n    /* \"#utility.yul\":10046:10048   */\n  0x15\n    /* \"#utility.yul\":10041:10044   */\n  dup4\n    /* \"#utility.yul\":9982:10049   */\n  tag_59\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":9975:10049   */\n  swap2\n  pop\n    /* \"#utility.yul\":10058:10151   */\n  tag_171\n    /* \"#utility.yul\":10147:10150   */\n  dup3\n    /* \"#utility.yul\":10058:10151   */\n  tag_64\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":10176:10178   */\n  0x20\n    /* \"#utility.yul\":10171:10174   */\n  dup3\n    /* \"#utility.yul\":10167:10179   */\n  add\n    /* \"#utility.yul\":10160:10179   */\n  swap1\n  pop\n    /* \"#utility.yul\":9819:10185   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10191:10610   */\ntag_26:\n    /* \"#utility.yul\":10357:10361   */\n  0x00\n    /* \"#utility.yul\":10395:10397   */\n  0x20\n    /* \"#utility.yul\":10384:10393   */\n  dup3\n    /* \"#utility.yul\":10380:10398   */\n  add\n    /* \"#utility.yul\":10372:10398   */\n  swap1\n  pop\n    /* \"#utility.yul\":10444:10453   */\n  dup2\n    /* \"#utility.yul\":10438:10442   */\n  dup2\n    /* \"#utility.yul\":10434:10454   */\n  sub\n    /* \"#utility.yul\":10430:10431   */\n  0x00\n    /* \"#utility.yul\":10419:10428   */\n  dup4\n    /* \"#utility.yul\":10415:10432   */\n  add\n    /* \"#utility.yul\":10408:10455   */\n  mstore\n    /* \"#utility.yul\":10472:10603   */\n  tag_173\n    /* \"#utility.yul\":10598:10602   */\n  dup2\n    /* \"#utility.yul\":10472:10603   */\n  tag_65\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":10464:10603   */\n  swap1\n  pop\n    /* \"#utility.yul\":10191:10610   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/StableCoin.sol\":494:7376  contract StableCoin is ERC20, Ownable, IStableCoin {... */\ntag_27:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StableCoin.sol\":494:7376  contract StableCoin is ERC20, Ownable, IStableCoin {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xbcbaf487\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xea629db0\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xfb4ca35b\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xbcbaf487\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcd377c53\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd7e72708\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xa6afed95\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa6afed95\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb4eae1cb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb6f7132f\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa5d5db0c\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x350c35e9\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x6060663e\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x6060663e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7dc0d1d0\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x350c35e9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x361416e1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4e8d048b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x1455b3ab\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x1455b3ab\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0ae8c4dc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":551:569  IERC20 public cBTC */\n    tag_5:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":4718:4968  function burnStableCoin(address from, uint256 cUSDAmount) external override {... */\n    tag_6:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":3220:4085  function withdrawCollateral(address user, uint256 amount) external override {... */\n    tag_10:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/StableCoin.sol\":694:721  uint256 public stabilityFee */\n    tag_11:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":813:860  mapping(address => uint256) public cBTCDeposits */\n    tag_12:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":6766:6937  function setCollateralRatio(uint256 _newRatio) external onlyOwner {... */\n    tag_13:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/StableCoin.sol\":575:601  IPriceOracle public oracle */\n    tag_16:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":2804:3112  function depositCollateral(address user, uint256 amount) external override {... */\n    tag_19:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/StableCoin.sol\":2012:2626  function accrueInterest() public override {... */\n    tag_20:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":608:638  uint256 public collateralRatio */\n    tag_22:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":7259:7374  function getUserCollateral(address user) external view returns (uint256) {... */\n    tag_23:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":5162:6697  function liquidate(address user, uint256 cUSDAmount) external override {... */\n    tag_24:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/StableCoin.sol\":2632:2742  function getCollateralRatio() external view override returns (uint256) {... */\n    tag_25:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":776:806  uint256 public lastAccrualTime */\n    tag_26:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      tag_128\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableCoin.sol\":4171:4642  function mintStableCoin(address to, uint256 cUSDAmount) external override {... */\n    tag_28:\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n    tag_130:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      stop\n        /* \"contracts/StableCoin.sol\":7024:7174  function setStabilityFee(uint256 _newFee) external onlyOwner {... */\n    tag_30:\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_142\n      swap1\n      tag_141\n      jump\t// in\n    tag_142:\n      dup1\n      iszero\n      tag_143\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_144\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_143)\n    tag_144:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_145:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_145\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":551:569  IERC20 public cBTC */\n    tag_49:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":4718:4968  function burnStableCoin(address from, uint256 cUSDAmount) external override {... */\n    tag_54:\n        /* \"contracts/StableCoin.sol\":4804:4820  accrueInterest() */\n      tag_152\n        /* \"contracts/StableCoin.sol\":4804:4818  accrueInterest */\n      tag_104\n        /* \"contracts/StableCoin.sol\":4804:4820  accrueInterest() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/StableCoin.sol\":4857:4867  cUSDAmount */\n      dup1\n        /* \"contracts/StableCoin.sol\":4838:4853  balanceOf(from) */\n      tag_153\n        /* \"contracts/StableCoin.sol\":4848:4852  from */\n      dup4\n        /* \"contracts/StableCoin.sol\":4838:4847  balanceOf */\n      tag_85\n        /* \"contracts/StableCoin.sol\":4838:4853  balanceOf(from) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/StableCoin.sol\":4838:4867  balanceOf(from) >= cUSDAmount */\n      lt\n      iszero\n        /* \"contracts/StableCoin.sol\":4830:4887  require(balanceOf(from) >= cUSDAmount, \"Not enough cUSD\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/StableCoin.sol\":4897:4920  _burn(from, cUSDAmount) */\n      tag_157\n        /* \"contracts/StableCoin.sol\":4903:4907  from */\n      dup3\n        /* \"contracts/StableCoin.sol\":4909:4919  cUSDAmount */\n      dup3\n        /* \"contracts/StableCoin.sol\":4897:4902  _burn */\n      tag_158\n        /* \"contracts/StableCoin.sol\":4897:4920  _burn(from, cUSDAmount) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/StableCoin.sol\":4944:4948  from */\n      dup2\n        /* \"contracts/StableCoin.sol\":4935:4961  Redeemed(from, cUSDAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b9369\n        /* \"contracts/StableCoin.sol\":4950:4960  cUSDAmount */\n      dup3\n        /* \"contracts/StableCoin.sol\":4935:4961  Redeemed(from, cUSDAmount) */\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StableCoin.sol\":4718:4968  function burnStableCoin(address from, uint256 cUSDAmount) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":3220:4085  function withdrawCollateral(address user, uint256 amount) external override {... */\n    tag_70:\n        /* \"contracts/StableCoin.sol\":3306:3322  accrueInterest() */\n      tag_169\n        /* \"contracts/StableCoin.sol\":3306:3320  accrueInterest */\n      tag_104\n        /* \"contracts/StableCoin.sol\":3306:3322  accrueInterest() */\n      jump\t// in\n    tag_169:\n        /* \"contracts/StableCoin.sol\":3350:3362  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":3350:3368  cBTCDeposits[user] */\n      0x00\n        /* \"contracts/StableCoin.sol\":3363:3367  user */\n      dup4\n        /* \"contracts/StableCoin.sol\":3350:3368  cBTCDeposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StableCoin.sol\":3340:3346  amount */\n      dup2\n        /* \"contracts/StableCoin.sol\":3340:3368  amount <= cBTCDeposits[user] */\n      gt\n      iszero\n        /* \"contracts/StableCoin.sol\":3332:3394  require(amount <= cBTCDeposits[user], \"Not enough collateral\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/StableCoin.sol\":3405:3421  uint256 userDebt */\n      0x00\n        /* \"contracts/StableCoin.sol\":3424:3439  balanceOf(user) */\n      tag_173\n        /* \"contracts/StableCoin.sol\":3434:3438  user */\n      dup4\n        /* \"contracts/StableCoin.sol\":3424:3433  balanceOf */\n      tag_85\n        /* \"contracts/StableCoin.sol\":3424:3439  balanceOf(user) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/StableCoin.sol\":3405:3439  uint256 userDebt = balanceOf(user) */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":3449:3462  uint256 price */\n      0x00\n        /* \"contracts/StableCoin.sol\":3465:3471  oracle */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StableCoin.sol\":3465:3480  oracle.getPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x41976e09\n        /* \"contracts/StableCoin.sol\":3489:3493  cBTC */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StableCoin.sol\":3465:3495  oracle.getPrice(address(cBTC)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/StableCoin.sol\":3449:3495  uint256 price = oracle.getPrice(address(cBTC)) */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":3505:3531  uint256 requiredCollateral */\n      0x00\n        /* \"contracts/StableCoin.sol\":3565:3569  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StableCoin.sol\":3546:3561  collateralRatio */\n      sload(0x08)\n        /* \"contracts/StableCoin.sol\":3535:3543  userDebt */\n      dup5\n        /* \"contracts/StableCoin.sol\":3535:3561  userDebt * collateralRatio */\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"contracts/StableCoin.sol\":3534:3569  (userDebt * collateralRatio) / 1e18 */\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"contracts/StableCoin.sol\":3505:3569  uint256 requiredCollateral = (userDebt * collateralRatio) / 1e18 */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":3695:3700  price */\n      dup2\n        /* \"contracts/StableCoin.sol\":3687:3691  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StableCoin.sol\":3666:3684  requiredCollateral */\n      dup3\n        /* \"contracts/StableCoin.sol\":3666:3691  requiredCollateral * 1e18 */\n      tag_183\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_183:\n        /* \"contracts/StableCoin.sol\":3665:3700  (requiredCollateral * 1e18) / price */\n      tag_184\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_184:\n        /* \"contracts/StableCoin.sol\":3644:3700  requiredCollateral = (requiredCollateral * 1e18) / price */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":3711:3730  uint256 maxWithdraw */\n      0x00\n        /* \"contracts/StableCoin.sol\":3754:3772  requiredCollateral */\n      dup2\n        /* \"contracts/StableCoin.sol\":3733:3745  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":3733:3751  cBTCDeposits[user] */\n      0x00\n        /* \"contracts/StableCoin.sol\":3746:3750  user */\n      dup9\n        /* \"contracts/StableCoin.sol\":3733:3751  cBTCDeposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StableCoin.sol\":3733:3772  cBTCDeposits[user] > requiredCollateral */\n      gt\n        /* \"contracts/StableCoin.sol\":3733:3842  cBTCDeposits[user] > requiredCollateral... */\n      tag_185\n      jumpi\n        /* \"contracts/StableCoin.sol\":3841:3842  0 */\n      0x00\n        /* \"contracts/StableCoin.sol\":3733:3842  cBTCDeposits[user] > requiredCollateral... */\n      jump(tag_186)\n    tag_185:\n        /* \"contracts/StableCoin.sol\":3808:3826  requiredCollateral */\n      dup2\n        /* \"contracts/StableCoin.sol\":3787:3799  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":3787:3805  cBTCDeposits[user] */\n      0x00\n        /* \"contracts/StableCoin.sol\":3800:3804  user */\n      dup9\n        /* \"contracts/StableCoin.sol\":3787:3805  cBTCDeposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StableCoin.sol\":3787:3826  cBTCDeposits[user] - requiredCollateral */\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"contracts/StableCoin.sol\":3733:3842  cBTCDeposits[user] > requiredCollateral... */\n    tag_186:\n        /* \"contracts/StableCoin.sol\":3711:3842  uint256 maxWithdraw = cBTCDeposits[user] > requiredCollateral... */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":3871:3882  maxWithdraw */\n      dup1\n        /* \"contracts/StableCoin.sol\":3861:3867  amount */\n      dup6\n        /* \"contracts/StableCoin.sol\":3861:3882  amount <= maxWithdraw */\n      gt\n      iszero\n        /* \"contracts/StableCoin.sol\":3853:3922  require(amount <= maxWithdraw, \"Withdrawal would undercollateralize\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/StableCoin.sol\":3954:3960  amount */\n      dup5\n        /* \"contracts/StableCoin.sol\":3932:3944  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":3932:3950  cBTCDeposits[user] */\n      0x00\n        /* \"contracts/StableCoin.sol\":3945:3949  user */\n      dup9\n        /* \"contracts/StableCoin.sol\":3932:3950  cBTCDeposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/StableCoin.sol\":3932:3960  cBTCDeposits[user] -= amount */\n      dup3\n      dup3\n      sload\n      tag_192\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_192:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableCoin.sol\":3978:3982  cBTC */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StableCoin.sol\":3978:3991  cBTC.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StableCoin.sol\":3992:3996  user */\n      dup8\n        /* \"contracts/StableCoin.sol\":3998:4004  amount */\n      dup8\n        /* \"contracts/StableCoin.sol\":3978:4005  cBTC.transfer(user, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"contracts/StableCoin.sol\":3970:4030  require(cBTC.transfer(user, amount), \"cBTC transfer failed\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/StableCoin.sol\":4065:4069  user */\n      dup6\n        /* \"contracts/StableCoin.sol\":4045:4078  CollateralWithdrawn(user, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d\n        /* \"contracts/StableCoin.sol\":4071:4077  amount */\n      dup7\n        /* \"contracts/StableCoin.sol\":4045:4078  CollateralWithdrawn(user, amount) */\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StableCoin.sol\":3296:4085  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StableCoin.sol\":3220:4085  function withdrawCollateral(address user, uint256 amount) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":694:721  uint256 public stabilityFee */\n    tag_72:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":813:860  mapping(address => uint256) public cBTCDeposits */\n    tag_77:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":6766:6937  function setCollateralRatio(uint256 _newRatio) external onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/StableCoin.sol\":6863:6867  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StableCoin.sol\":6850:6859  _newRatio */\n      dup2\n        /* \"contracts/StableCoin.sol\":6850:6867  _newRatio >= 1e18 */\n      lt\n      iszero\n        /* \"contracts/StableCoin.sol\":6842:6893  require(_newRatio >= 1e18, \"Ratio must be >= 100%\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/StableCoin.sol\":6921:6930  _newRatio */\n      dup1\n        /* \"contracts/StableCoin.sol\":6903:6918  collateralRatio */\n      0x08\n        /* \"contracts/StableCoin.sol\":6903:6930  collateralRatio = _newRatio */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableCoin.sol\":6766:6937  function setCollateralRatio(uint256 _newRatio) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":575:601  IPriceOracle public oracle */\n    tag_90:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_218\n      swap1\n      tag_141\n      jump\t// in\n    tag_218:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_219\n      swap1\n      tag_141\n      jump\t// in\n    tag_219:\n      dup1\n      iszero\n      tag_220\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_221\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_220)\n    tag_221:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_222:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_222\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":2804:3112  function depositCollateral(address user, uint256 amount) external override {... */\n    tag_102:\n        /* \"contracts/StableCoin.sol\":2906:2907  0 */\n      0x00\n        /* \"contracts/StableCoin.sol\":2897:2903  amount */\n      dup2\n        /* \"contracts/StableCoin.sol\":2897:2907  amount > 0 */\n      gt\n        /* \"contracts/StableCoin.sol\":2889:2930  require(amount > 0, \"Amount must be > 0\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/StableCoin.sol\":2948:2952  cBTC */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StableCoin.sol\":2948:2965  cBTC.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StableCoin.sol\":2966:2970  user */\n      dup4\n        /* \"contracts/StableCoin.sol\":2980:2984  this */\n      address\n        /* \"contracts/StableCoin.sol\":2987:2993  amount */\n      dup5\n        /* \"contracts/StableCoin.sol\":2948:2994  cBTC.transferFrom(user, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_231:\n        /* \"contracts/StableCoin.sol\":2940:3019  require(cBTC.transferFrom(user, address(this), amount), \"cBTC transfer failed\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_201\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"contracts/StableCoin.sol\":3051:3057  amount */\n      dup1\n        /* \"contracts/StableCoin.sol\":3029:3041  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":3029:3047  cBTCDeposits[user] */\n      0x00\n        /* \"contracts/StableCoin.sol\":3042:3046  user */\n      dup5\n        /* \"contracts/StableCoin.sol\":3029:3047  cBTCDeposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/StableCoin.sol\":3029:3057  cBTCDeposits[user] += amount */\n      dup3\n      dup3\n      sload\n      tag_234\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableCoin.sol\":3092:3096  user */\n      dup2\n        /* \"contracts/StableCoin.sol\":3072:3105  CollateralDeposited(user, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142\n        /* \"contracts/StableCoin.sol\":3098:3104  amount */\n      dup3\n        /* \"contracts/StableCoin.sol\":3072:3105  CollateralDeposited(user, amount) */\n      mload(0x40)\n      tag_236\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StableCoin.sol\":2804:3112  function depositCollateral(address user, uint256 amount) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":2012:2626  function accrueInterest() public override {... */\n    tag_104:\n        /* \"contracts/StableCoin.sol\":2064:2083  uint256 timeElapsed */\n      0x00\n        /* \"contracts/StableCoin.sol\":2104:2119  lastAccrualTime */\n      sload(0x0a)\n        /* \"contracts/StableCoin.sol\":2086:2101  block.timestamp */\n      timestamp\n        /* \"contracts/StableCoin.sol\":2086:2119  block.timestamp - lastAccrualTime */\n      tag_238\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_238:\n        /* \"contracts/StableCoin.sol\":2064:2119  uint256 timeElapsed = block.timestamp - lastAccrualTime */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":2147:2148  0 */\n      0x00\n        /* \"contracts/StableCoin.sol\":2133:2144  timeElapsed */\n      dup2\n        /* \"contracts/StableCoin.sol\":2133:2148  timeElapsed > 0 */\n      gt\n        /* \"contracts/StableCoin.sol\":2133:2169  timeElapsed > 0 && totalSupply() > 0 */\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n        /* \"contracts/StableCoin.sol\":2168:2169  0 */\n      0x00\n        /* \"contracts/StableCoin.sol\":2152:2165  totalSupply() */\n      tag_240\n        /* \"contracts/StableCoin.sol\":2152:2163  totalSupply */\n      tag_56\n        /* \"contracts/StableCoin.sol\":2152:2165  totalSupply() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/StableCoin.sol\":2152:2169  totalSupply() > 0 */\n      gt\n        /* \"contracts/StableCoin.sol\":2133:2169  timeElapsed > 0 && totalSupply() > 0 */\n    tag_239:\n        /* \"contracts/StableCoin.sol\":2129:2620  if (timeElapsed > 0 && totalSupply() > 0) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"contracts/StableCoin.sol\":2299:2318  uint256 feeFraction */\n      0x00\n        /* \"contracts/StableCoin.sol\":2352:2360  31536000 */\n      0x01e13380\n        /* \"contracts/StableCoin.sol\":2337:2348  timeElapsed */\n      dup3\n        /* \"contracts/StableCoin.sol\":2322:2334  stabilityFee */\n      sload(0x09)\n        /* \"contracts/StableCoin.sol\":2322:2348  stabilityFee * timeElapsed */\n      tag_242\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_242:\n        /* \"contracts/StableCoin.sol\":2321:2360  (stabilityFee * timeElapsed) / 31536000 */\n      tag_243\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_243:\n        /* \"contracts/StableCoin.sol\":2299:2360  uint256 feeFraction = (stabilityFee * timeElapsed) / 31536000 */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":2394:2418  uint256 additionalSupply */\n      0x00\n        /* \"contracts/StableCoin.sol\":2453:2458  10000 */\n      0x2710\n        /* \"contracts/StableCoin.sol\":2438:2449  feeFraction */\n      dup3\n        /* \"contracts/StableCoin.sol\":2422:2435  totalSupply() */\n      tag_244\n        /* \"contracts/StableCoin.sol\":2422:2433  totalSupply */\n      tag_56\n        /* \"contracts/StableCoin.sol\":2422:2435  totalSupply() */\n      jump\t// in\n    tag_244:\n        /* \"contracts/StableCoin.sol\":2422:2449  totalSupply() * feeFraction */\n      tag_245\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_245:\n        /* \"contracts/StableCoin.sol\":2421:2458  (totalSupply() * feeFraction) / 10000 */\n      tag_246\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_246:\n        /* \"contracts/StableCoin.sol\":2394:2458  uint256 additionalSupply = (totalSupply() * feeFraction) / 10000 */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":2495:2496  0 */\n      0x00\n        /* \"contracts/StableCoin.sol\":2476:2492  additionalSupply */\n      dup2\n        /* \"contracts/StableCoin.sol\":2476:2496  additionalSupply > 0 */\n      gt\n        /* \"contracts/StableCoin.sol\":2472:2563  if (additionalSupply > 0) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"contracts/StableCoin.sol\":2516:2548  _mint(owner(), additionalSupply) */\n      tag_248\n        /* \"contracts/StableCoin.sol\":2522:2529  owner() */\n      tag_249\n        /* \"contracts/StableCoin.sol\":2522:2527  owner */\n      tag_94\n        /* \"contracts/StableCoin.sol\":2522:2529  owner() */\n      jump\t// in\n    tag_249:\n        /* \"contracts/StableCoin.sol\":2531:2547  additionalSupply */\n      dup3\n        /* \"contracts/StableCoin.sol\":2516:2521  _mint */\n      tag_250\n        /* \"contracts/StableCoin.sol\":2516:2548  _mint(owner(), additionalSupply) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/StableCoin.sol\":2472:2563  if (additionalSupply > 0) {... */\n    tag_247:\n        /* \"contracts/StableCoin.sol\":2594:2609  block.timestamp */\n      timestamp\n        /* \"contracts/StableCoin.sol\":2576:2591  lastAccrualTime */\n      0x0a\n        /* \"contracts/StableCoin.sol\":2576:2609  lastAccrualTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableCoin.sol\":2171:2620  {... */\n      pop\n      pop\n        /* \"contracts/StableCoin.sol\":2129:2620  if (timeElapsed > 0 && totalSupply() > 0) {... */\n    tag_241:\n        /* \"contracts/StableCoin.sol\":2054:2626  {... */\n      pop\n        /* \"contracts/StableCoin.sol\":2012:2626  function accrueInterest() public override {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":608:638  uint256 public collateralRatio */\n    tag_110:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":7259:7374  function getUserCollateral(address user) external view returns (uint256) {... */\n    tag_114:\n        /* \"contracts/StableCoin.sol\":7323:7330  uint256 */\n      0x00\n        /* \"contracts/StableCoin.sol\":7349:7361  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":7349:7367  cBTCDeposits[user] */\n      0x00\n        /* \"contracts/StableCoin.sol\":7362:7366  user */\n      dup4\n        /* \"contracts/StableCoin.sol\":7349:7367  cBTCDeposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StableCoin.sol\":7342:7367  return cBTCDeposits[user] */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":7259:7374  function getUserCollateral(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":5162:6697  function liquidate(address user, uint256 cUSDAmount) external override {... */\n    tag_118:\n        /* \"contracts/StableCoin.sol\":5243:5259  accrueInterest() */\n      tag_256\n        /* \"contracts/StableCoin.sol\":5243:5257  accrueInterest */\n      tag_104\n        /* \"contracts/StableCoin.sol\":5243:5259  accrueInterest() */\n      jump\t// in\n    tag_256:\n        /* \"contracts/StableCoin.sol\":5269:5282  uint256 price */\n      0x00\n        /* \"contracts/StableCoin.sol\":5285:5291  oracle */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StableCoin.sol\":5285:5300  oracle.getPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x41976e09\n        /* \"contracts/StableCoin.sol\":5309:5313  cBTC */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StableCoin.sol\":5285:5315  oracle.getPrice(address(cBTC)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_257:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_259:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_260\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_260:\n        /* \"contracts/StableCoin.sol\":5269:5315  uint256 price = oracle.getPrice(address(cBTC)) */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":5325:5341  uint256 userDebt */\n      0x00\n        /* \"contracts/StableCoin.sol\":5344:5359  balanceOf(user) */\n      tag_261\n        /* \"contracts/StableCoin.sol\":5354:5358  user */\n      dup5\n        /* \"contracts/StableCoin.sol\":5344:5353  balanceOf */\n      tag_85\n        /* \"contracts/StableCoin.sol\":5344:5359  balanceOf(user) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/StableCoin.sol\":5325:5359  uint256 userDebt = balanceOf(user) */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":5385:5386  0 */\n      0x00\n        /* \"contracts/StableCoin.sol\":5373:5381  userDebt */\n      dup2\n        /* \"contracts/StableCoin.sol\":5373:5386  userDebt == 0 */\n      sub\n        /* \"contracts/StableCoin.sol\":5369:5395  if (userDebt == 0) return; */\n      tag_262\n      jumpi\n        /* \"contracts/StableCoin.sol\":5388:5395  return; */\n      pop\n      pop\n      jump(tag_255)\n        /* \"contracts/StableCoin.sol\":5369:5395  if (userDebt == 0) return; */\n    tag_262:\n        /* \"contracts/StableCoin.sol\":5508:5529  uint256 requiredValue */\n      0x00\n        /* \"contracts/StableCoin.sol\":5563:5567  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StableCoin.sol\":5544:5559  collateralRatio */\n      sload(0x08)\n        /* \"contracts/StableCoin.sol\":5533:5541  userDebt */\n      dup4\n        /* \"contracts/StableCoin.sol\":5533:5559  userDebt * collateralRatio */\n      tag_263\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_263:\n        /* \"contracts/StableCoin.sol\":5532:5567  (userDebt * collateralRatio) / 1e18 */\n      tag_264\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_264:\n        /* \"contracts/StableCoin.sol\":5508:5567  uint256 requiredValue = (userDebt * collateralRatio) / 1e18 */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":5600:5627  uint256 userCollateralValue */\n      0x00\n        /* \"contracts/StableCoin.sol\":5661:5665  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StableCoin.sol\":5652:5657  price */\n      dup5\n        /* \"contracts/StableCoin.sol\":5631:5643  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":5631:5649  cBTCDeposits[user] */\n      0x00\n        /* \"contracts/StableCoin.sol\":5644:5648  user */\n      dup10\n        /* \"contracts/StableCoin.sol\":5631:5649  cBTCDeposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StableCoin.sol\":5631:5657  cBTCDeposits[user] * price */\n      tag_265\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_265:\n        /* \"contracts/StableCoin.sol\":5630:5665  (cBTCDeposits[user] * price) / 1e18 */\n      tag_266\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_266:\n        /* \"contracts/StableCoin.sol\":5600:5665  uint256 userCollateralValue = (cBTCDeposits[user] * price) / 1e18 */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":5702:5715  requiredValue */\n      dup2\n        /* \"contracts/StableCoin.sol\":5680:5699  userCollateralValue */\n      dup2\n        /* \"contracts/StableCoin.sol\":5680:5715  userCollateralValue < requiredValue */\n      lt\n        /* \"contracts/StableCoin.sol\":5676:6691  if (userCollateralValue < requiredValue) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"contracts/StableCoin.sol\":5731:5750  uint256 repayAmount */\n      0x00\n        /* \"contracts/StableCoin.sol\":5766:5774  userDebt */\n      dup4\n        /* \"contracts/StableCoin.sol\":5753:5763  cUSDAmount */\n      dup7\n        /* \"contracts/StableCoin.sol\":5753:5774  cUSDAmount > userDebt */\n      gt\n        /* \"contracts/StableCoin.sol\":5753:5798  cUSDAmount > userDebt ? userDebt : cUSDAmount */\n      tag_268\n      jumpi\n        /* \"contracts/StableCoin.sol\":5788:5798  cUSDAmount */\n      dup6\n        /* \"contracts/StableCoin.sol\":5753:5798  cUSDAmount > userDebt ? userDebt : cUSDAmount */\n      jump(tag_269)\n    tag_268:\n        /* \"contracts/StableCoin.sol\":5777:5785  userDebt */\n      dup4\n        /* \"contracts/StableCoin.sol\":5753:5798  cUSDAmount > userDebt ? userDebt : cUSDAmount */\n    tag_269:\n        /* \"contracts/StableCoin.sol\":5731:5798  uint256 repayAmount = cUSDAmount > userDebt ? userDebt : cUSDAmount */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":5845:5856  repayAmount */\n      dup1\n        /* \"contracts/StableCoin.sol\":5820:5841  balanceOf(msg.sender) */\n      tag_270\n        /* \"contracts/StableCoin.sol\":5830:5840  msg.sender */\n      caller\n        /* \"contracts/StableCoin.sol\":5820:5829  balanceOf */\n      tag_85\n        /* \"contracts/StableCoin.sol\":5820:5841  balanceOf(msg.sender) */\n      jump\t// in\n    tag_270:\n        /* \"contracts/StableCoin.sol\":5820:5856  balanceOf(msg.sender) >= repayAmount */\n      lt\n      iszero\n        /* \"contracts/StableCoin.sol\":5812:5887  require(balanceOf(msg.sender) >= repayAmount, \"Liquidator not enough cUSD\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"contracts/StableCoin.sol\":5901:5950  _transfer(msg.sender, address(this), repayAmount) */\n      tag_274\n        /* \"contracts/StableCoin.sol\":5911:5921  msg.sender */\n      caller\n        /* \"contracts/StableCoin.sol\":5931:5935  this */\n      address\n        /* \"contracts/StableCoin.sol\":5938:5949  repayAmount */\n      dup4\n        /* \"contracts/StableCoin.sol\":5901:5910  _transfer */\n      tag_166\n        /* \"contracts/StableCoin.sol\":5901:5950  _transfer(msg.sender, address(this), repayAmount) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/StableCoin.sol\":5964:5997  _burn(address(this), repayAmount) */\n      tag_275\n        /* \"contracts/StableCoin.sol\":5978:5982  this */\n      address\n        /* \"contracts/StableCoin.sol\":5985:5996  repayAmount */\n      dup3\n        /* \"contracts/StableCoin.sol\":5964:5969  _burn */\n      tag_158\n        /* \"contracts/StableCoin.sol\":5964:5997  _burn(address(this), repayAmount) */\n      jump\t// in\n    tag_275:\n        /* \"contracts/StableCoin.sol\":6073:6096  uint256 collateralSeize */\n      0x00\n        /* \"contracts/StableCoin.sol\":6133:6137  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StableCoin.sol\":6114:6129  collateralRatio */\n      sload(0x08)\n        /* \"contracts/StableCoin.sol\":6100:6111  repayAmount */\n      dup4\n        /* \"contracts/StableCoin.sol\":6100:6129  repayAmount * collateralRatio */\n      tag_276\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_276:\n        /* \"contracts/StableCoin.sol\":6099:6137  (repayAmount * collateralRatio) / 1e18 */\n      tag_277\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_277:\n        /* \"contracts/StableCoin.sol\":6073:6137  uint256 collateralSeize = (repayAmount * collateralRatio) / 1e18 */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":6196:6201  price */\n      dup6\n        /* \"contracts/StableCoin.sol\":6188:6192  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StableCoin.sol\":6170:6185  collateralSeize */\n      dup3\n        /* \"contracts/StableCoin.sol\":6170:6192  collateralSeize * 1e18 */\n      tag_278\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_278:\n        /* \"contracts/StableCoin.sol\":6169:6201  (collateralSeize * 1e18) / price */\n      tag_279\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_279:\n        /* \"contracts/StableCoin.sol\":6151:6201  collateralSeize = (collateralSeize * 1e18) / price */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":6259:6262  100 */\n      0x64\n        /* \"contracts/StableCoin.sol\":6252:6255  110 */\n      0x6e\n        /* \"contracts/StableCoin.sol\":6234:6249  collateralSeize */\n      dup3\n        /* \"contracts/StableCoin.sol\":6234:6255  collateralSeize * 110 */\n      tag_280\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_280:\n        /* \"contracts/StableCoin.sol\":6233:6262  (collateralSeize * 110) / 100 */\n      tag_281\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_281:\n        /* \"contracts/StableCoin.sol\":6215:6262  collateralSeize = (collateralSeize * 110) / 100 */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":6299:6311  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":6299:6317  cBTCDeposits[user] */\n      0x00\n        /* \"contracts/StableCoin.sol\":6312:6316  user */\n      dup10\n        /* \"contracts/StableCoin.sol\":6299:6317  cBTCDeposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StableCoin.sol\":6281:6296  collateralSeize */\n      dup2\n        /* \"contracts/StableCoin.sol\":6281:6317  collateralSeize > cBTCDeposits[user] */\n      gt\n        /* \"contracts/StableCoin.sol\":6277:6388  if (collateralSeize > cBTCDeposits[user]) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"contracts/StableCoin.sol\":6355:6367  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":6355:6373  cBTCDeposits[user] */\n      0x00\n        /* \"contracts/StableCoin.sol\":6368:6372  user */\n      dup10\n        /* \"contracts/StableCoin.sol\":6355:6373  cBTCDeposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StableCoin.sol\":6337:6373  collateralSeize = cBTCDeposits[user] */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":6277:6388  if (collateralSeize > cBTCDeposits[user]) {... */\n    tag_282:\n        /* \"contracts/StableCoin.sol\":6424:6439  collateralSeize */\n      dup1\n        /* \"contracts/StableCoin.sol\":6402:6414  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":6402:6420  cBTCDeposits[user] */\n      0x00\n        /* \"contracts/StableCoin.sol\":6415:6419  user */\n      dup11\n        /* \"contracts/StableCoin.sol\":6402:6420  cBTCDeposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/StableCoin.sol\":6402:6439  cBTCDeposits[user] -= collateralSeize */\n      dup3\n      dup3\n      sload\n      tag_283\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_283:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableCoin.sol\":6461:6465  cBTC */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StableCoin.sol\":6461:6474  cBTC.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StableCoin.sol\":6475:6485  msg.sender */\n      caller\n        /* \"contracts/StableCoin.sol\":6487:6502  collateralSeize */\n      dup4\n        /* \"contracts/StableCoin.sol\":6461:6503  cBTC.transfer(msg.sender, collateralSeize) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_284:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_287\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_287:\n        /* \"contracts/StableCoin.sol\":6453:6528  require(cBTC.transfer(msg.sender, collateralSeize), \"cBTC transfer failed\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_201\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"contracts/StableCoin.sol\":6645:6649  user */\n      dup8\n        /* \"contracts/StableCoin.sol\":6634:6680  Liquidated(user, repayAmount, collateralSeize) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x09c223cfcd8c93e245f558f5f8de755fc0930fd9bc257441155ef5d54a170e0f\n        /* \"contracts/StableCoin.sol\":6651:6662  repayAmount */\n      dup4\n        /* \"contracts/StableCoin.sol\":6664:6679  collateralSeize */\n      dup4\n        /* \"contracts/StableCoin.sol\":6634:6680  Liquidated(user, repayAmount, collateralSeize) */\n      mload(0x40)\n      tag_290\n      swap3\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StableCoin.sol\":5717:6691  {... */\n      pop\n      pop\n        /* \"contracts/StableCoin.sol\":5676:6691  if (userCollateralValue < requiredValue) {... */\n    tag_267:\n        /* \"contracts/StableCoin.sol\":5233:6697  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StableCoin.sol\":5162:6697  function liquidate(address user, uint256 cUSDAmount) external override {... */\n    tag_255:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":2632:2742  function getCollateralRatio() external view override returns (uint256) {... */\n    tag_120:\n        /* \"contracts/StableCoin.sol\":2694:2701  uint256 */\n      0x00\n        /* \"contracts/StableCoin.sol\":2720:2735  collateralRatio */\n      sload(0x08)\n        /* \"contracts/StableCoin.sol\":2713:2735  return collateralRatio */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":2632:2742  function getCollateralRatio() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":776:806  uint256 public lastAccrualTime */\n    tag_123:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":4171:4642  function mintStableCoin(address to, uint256 cUSDAmount) external override {... */\n    tag_132:\n        /* \"contracts/StableCoin.sol\":4255:4271  accrueInterest() */\n      tag_295\n        /* \"contracts/StableCoin.sol\":4255:4269  accrueInterest */\n      tag_104\n        /* \"contracts/StableCoin.sol\":4255:4271  accrueInterest() */\n      jump\t// in\n    tag_295:\n        /* \"contracts/StableCoin.sol\":4281:4294  uint256 price */\n      0x00\n        /* \"contracts/StableCoin.sol\":4297:4303  oracle */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StableCoin.sol\":4297:4312  oracle.getPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x41976e09\n        /* \"contracts/StableCoin.sol\":4321:4325  cBTC */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StableCoin.sol\":4297:4327  oracle.getPrice(address(cBTC)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_296:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_299\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_299:\n        /* \"contracts/StableCoin.sol\":4281:4327  uint256 price = oracle.getPrice(address(cBTC)) */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":4337:4363  uint256 requiredCollateral */\n      0x00\n        /* \"contracts/StableCoin.sol\":4399:4403  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StableCoin.sol\":4380:4395  collateralRatio */\n      sload(0x08)\n        /* \"contracts/StableCoin.sol\":4367:4377  cUSDAmount */\n      dup5\n        /* \"contracts/StableCoin.sol\":4367:4395  cUSDAmount * collateralRatio */\n      tag_300\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_300:\n        /* \"contracts/StableCoin.sol\":4366:4403  (cUSDAmount * collateralRatio) / 1e18 */\n      tag_301\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_301:\n        /* \"contracts/StableCoin.sol\":4337:4403  uint256 requiredCollateral = (cUSDAmount * collateralRatio) / 1e18 */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":4464:4469  price */\n      dup2\n        /* \"contracts/StableCoin.sol\":4456:4460  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StableCoin.sol\":4435:4453  requiredCollateral */\n      dup3\n        /* \"contracts/StableCoin.sol\":4435:4460  requiredCollateral * 1e18 */\n      tag_302\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_302:\n        /* \"contracts/StableCoin.sol\":4434:4469  (requiredCollateral * 1e18) / price */\n      tag_303\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_303:\n        /* \"contracts/StableCoin.sol\":4413:4469  requiredCollateral = (requiredCollateral * 1e18) / price */\n      swap1\n      pop\n        /* \"contracts/StableCoin.sol\":4515:4533  requiredCollateral */\n      dup1\n        /* \"contracts/StableCoin.sol\":4487:4499  cBTCDeposits */\n      0x0b\n        /* \"contracts/StableCoin.sol\":4487:4511  cBTCDeposits[msg.sender] */\n      0x00\n        /* \"contracts/StableCoin.sol\":4500:4510  msg.sender */\n      caller\n        /* \"contracts/StableCoin.sol\":4487:4511  cBTCDeposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StableCoin.sol\":4487:4533  cBTCDeposits[msg.sender] >= requiredCollateral */\n      lt\n      iszero\n        /* \"contracts/StableCoin.sol\":4479:4559  require(cBTCDeposits[msg.sender] >= requiredCollateral, \"Not enough collateral\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap1\n      tag_172\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_304:\n        /* \"contracts/StableCoin.sol\":4569:4590  _mint(to, cUSDAmount) */\n      tag_306\n        /* \"contracts/StableCoin.sol\":4575:4577  to */\n      dup5\n        /* \"contracts/StableCoin.sol\":4579:4589  cUSDAmount */\n      dup5\n        /* \"contracts/StableCoin.sol\":4569:4574  _mint */\n      tag_250\n        /* \"contracts/StableCoin.sol\":4569:4590  _mint(to, cUSDAmount) */\n      jump\t// in\n    tag_306:\n        /* \"contracts/StableCoin.sol\":4612:4622  msg.sender */\n      caller\n        /* \"contracts/StableCoin.sol\":4605:4635  Minted(msg.sender, cUSDAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe\n        /* \"contracts/StableCoin.sol\":4624:4634  cUSDAmount */\n      dup5\n        /* \"contracts/StableCoin.sol\":4605:4635  Minted(msg.sender, cUSDAmount) */\n      mload(0x40)\n      tag_307\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StableCoin.sol\":4245:4642  {... */\n      pop\n      pop\n        /* \"contracts/StableCoin.sol\":4171:4642  function mintStableCoin(address to, uint256 cUSDAmount) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_309\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StableCoin.sol\":7024:7174  function setStabilityFee(uint256 _newFee) external onlyOwner {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_315\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_315:\n        /* \"contracts/StableCoin.sol\":7114:7118  2000 */\n      0x07d0\n        /* \"contracts/StableCoin.sol\":7103:7110  _newFee */\n      dup2\n        /* \"contracts/StableCoin.sol\":7103:7118  _newFee <= 2000 */\n      gt\n      iszero\n        /* \"contracts/StableCoin.sol\":7095:7135  require(_newFee <= 2000, \"Fee too high\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"contracts/StableCoin.sol\":7160:7167  _newFee */\n      dup1\n        /* \"contracts/StableCoin.sol\":7145:7157  stabilityFee */\n      0x09\n        /* \"contracts/StableCoin.sol\":7145:7167  stabilityFee = _newFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableCoin.sol\":7024:7174  function setStabilityFee(uint256 _newFee) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_322\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_330\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_343\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_344\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_346\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_359\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_359:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_362\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_362:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_363)\n    tag_361:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_365\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_366\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_367)\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_368\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_369:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_370:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_371:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_423:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_423)\n    tag_425:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_372:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_373:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_428\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_369\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":820:891   */\n      tag_429\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_370\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_430\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_371\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":990:1019   */\n      tag_431\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_372\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_41:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_433\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_373\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1432:1549   */\n    tag_375:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1538:1539   */\n      dup1\n        /* \"#utility.yul\":1531:1543   */\n      revert\n        /* \"#utility.yul\":1678:1804   */\n    tag_377:\n        /* \"#utility.yul\":1715:1722   */\n      0x00\n        /* \"#utility.yul\":1755:1797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1748:1753   */\n      dup3\n        /* \"#utility.yul\":1744:1798   */\n      and\n        /* \"#utility.yul\":1733:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1906   */\n    tag_378:\n        /* \"#utility.yul\":1847:1854   */\n      0x00\n        /* \"#utility.yul\":1876:1900   */\n      tag_439\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1876:1900   */\n      tag_377\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":1865:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1810:1906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1912:2034   */\n    tag_379:\n        /* \"#utility.yul\":1985:2009   */\n      tag_441\n        /* \"#utility.yul\":2003:2008   */\n      dup2\n        /* \"#utility.yul\":1985:2009   */\n      tag_378\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1975:2010   */\n      eq\n        /* \"#utility.yul\":1965:2028   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      dup1\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1965:2028   */\n    tag_442:\n        /* \"#utility.yul\":1912:2034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2179   */\n    tag_380:\n        /* \"#utility.yul\":2086:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2111:2131   */\n      calldataload\n        /* \"#utility.yul\":2102:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2173   */\n      tag_444\n        /* \"#utility.yul\":2167:2172   */\n      dup2\n        /* \"#utility.yul\":2140:2173   */\n      tag_379\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2040:2179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2262   */\n    tag_381:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2390   */\n    tag_382:\n        /* \"#utility.yul\":2341:2365   */\n      tag_447\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_381\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_448:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_383:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_450\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_382\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:3015   */\n    tag_44:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2617:2623   */\n      dup1\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2645:2652   */\n      dup6\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_453\n      tag_375\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":2634:2753   */\n    tag_452:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2870   */\n      tag_454\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_380\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":2807:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2763:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_455\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_383\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2541:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3111   */\n    tag_384:\n        /* \"#utility.yul\":3055:3062   */\n      0x00\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3073:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3226   */\n    tag_385:\n        /* \"#utility.yul\":3198:3219   */\n      tag_458\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3198:3219   */\n      tag_384\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3117:3226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3442   */\n    tag_47:\n        /* \"#utility.yul\":3319:3323   */\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3334:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3435   */\n      tag_460\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3370:3435   */\n      tag_385\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3232:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3508   */\n    tag_386:\n        /* \"#utility.yul\":3476:3479   */\n      0x00\n        /* \"#utility.yul\":3497:3502   */\n      dup2\n        /* \"#utility.yul\":3490:3502   */\n      swap1\n      pop\n        /* \"#utility.yul\":3448:3508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3514:3656   */\n    tag_387:\n        /* \"#utility.yul\":3564:3573   */\n      0x00\n        /* \"#utility.yul\":3597:3650   */\n      tag_463\n        /* \"#utility.yul\":3615:3649   */\n      tag_464\n        /* \"#utility.yul\":3624:3648   */\n      tag_465\n        /* \"#utility.yul\":3642:3647   */\n      dup5\n        /* \"#utility.yul\":3624:3648   */\n      tag_377\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":3615:3649   */\n      tag_386\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":3597:3650   */\n      tag_377\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":3584:3650   */\n      swap1\n      pop\n        /* \"#utility.yul\":3514:3656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3662:3788   */\n    tag_388:\n        /* \"#utility.yul\":3712:3721   */\n      0x00\n        /* \"#utility.yul\":3745:3782   */\n      tag_467\n        /* \"#utility.yul\":3776:3781   */\n      dup3\n        /* \"#utility.yul\":3745:3782   */\n      tag_387\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":3732:3782   */\n      swap1\n      pop\n        /* \"#utility.yul\":3662:3788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3794:3934   */\n    tag_389:\n        /* \"#utility.yul\":3858:3867   */\n      0x00\n        /* \"#utility.yul\":3891:3928   */\n      tag_469\n        /* \"#utility.yul\":3922:3927   */\n      dup3\n        /* \"#utility.yul\":3891:3928   */\n      tag_388\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3878:3928   */\n      swap1\n      pop\n        /* \"#utility.yul\":3794:3934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3940:4099   */\n    tag_390:\n        /* \"#utility.yul\":4041:4092   */\n      tag_471\n        /* \"#utility.yul\":4086:4091   */\n      dup2\n        /* \"#utility.yul\":4041:4092   */\n      tag_389\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4036:4039   */\n      dup3\n        /* \"#utility.yul\":4029:4093   */\n      mstore\n        /* \"#utility.yul\":3940:4099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4105:4355   */\n    tag_51:\n        /* \"#utility.yul\":4212:4216   */\n      0x00\n        /* \"#utility.yul\":4250:4252   */\n      0x20\n        /* \"#utility.yul\":4239:4248   */\n      dup3\n        /* \"#utility.yul\":4235:4253   */\n      add\n        /* \"#utility.yul\":4227:4253   */\n      swap1\n      pop\n        /* \"#utility.yul\":4263:4348   */\n      tag_473\n        /* \"#utility.yul\":4345:4346   */\n      0x00\n        /* \"#utility.yul\":4334:4343   */\n      dup4\n        /* \"#utility.yul\":4330:4347   */\n      add\n        /* \"#utility.yul\":4321:4327   */\n      dup5\n        /* \"#utility.yul\":4263:4348   */\n      tag_390\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":4105:4355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4361:4479   */\n    tag_391:\n        /* \"#utility.yul\":4448:4472   */\n      tag_475\n        /* \"#utility.yul\":4466:4471   */\n      dup2\n        /* \"#utility.yul\":4448:4472   */\n      tag_381\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":4443:4446   */\n      dup3\n        /* \"#utility.yul\":4436:4473   */\n      mstore\n        /* \"#utility.yul\":4361:4479   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4485:4707   */\n    tag_58:\n        /* \"#utility.yul\":4578:4582   */\n      0x00\n        /* \"#utility.yul\":4616:4618   */\n      0x20\n        /* \"#utility.yul\":4605:4614   */\n      dup3\n        /* \"#utility.yul\":4601:4619   */\n      add\n        /* \"#utility.yul\":4593:4619   */\n      swap1\n      pop\n        /* \"#utility.yul\":4629:4700   */\n      tag_477\n        /* \"#utility.yul\":4697:4698   */\n      0x00\n        /* \"#utility.yul\":4686:4695   */\n      dup4\n        /* \"#utility.yul\":4682:4699   */\n      add\n        /* \"#utility.yul\":4673:4679   */\n      dup5\n        /* \"#utility.yul\":4629:4700   */\n      tag_391\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":4485:4707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4713:5332   */\n    tag_61:\n        /* \"#utility.yul\":4790:4796   */\n      0x00\n        /* \"#utility.yul\":4798:4804   */\n      dup1\n        /* \"#utility.yul\":4806:4812   */\n      0x00\n        /* \"#utility.yul\":4855:4857   */\n      0x60\n        /* \"#utility.yul\":4843:4852   */\n      dup5\n        /* \"#utility.yul\":4834:4841   */\n      dup7\n        /* \"#utility.yul\":4830:4853   */\n      sub\n        /* \"#utility.yul\":4826:4858   */\n      slt\n        /* \"#utility.yul\":4823:4942   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":4861:4940   */\n      tag_480\n      tag_375\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":4823:4942   */\n    tag_479:\n        /* \"#utility.yul\":4981:4982   */\n      0x00\n        /* \"#utility.yul\":5006:5059   */\n      tag_481\n        /* \"#utility.yul\":5051:5058   */\n      dup7\n        /* \"#utility.yul\":5042:5048   */\n      dup3\n        /* \"#utility.yul\":5031:5040   */\n      dup8\n        /* \"#utility.yul\":5027:5049   */\n      add\n        /* \"#utility.yul\":5006:5059   */\n      tag_380\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":4996:5059   */\n      swap4\n      pop\n        /* \"#utility.yul\":4952:5069   */\n      pop\n        /* \"#utility.yul\":5108:5110   */\n      0x20\n        /* \"#utility.yul\":5134:5187   */\n      tag_482\n        /* \"#utility.yul\":5179:5186   */\n      dup7\n        /* \"#utility.yul\":5170:5176   */\n      dup3\n        /* \"#utility.yul\":5159:5168   */\n      dup8\n        /* \"#utility.yul\":5155:5177   */\n      add\n        /* \"#utility.yul\":5134:5187   */\n      tag_380\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":5124:5187   */\n      swap3\n      pop\n        /* \"#utility.yul\":5079:5197   */\n      pop\n        /* \"#utility.yul\":5236:5238   */\n      0x40\n        /* \"#utility.yul\":5262:5315   */\n      tag_483\n        /* \"#utility.yul\":5307:5314   */\n      dup7\n        /* \"#utility.yul\":5298:5304   */\n      dup3\n        /* \"#utility.yul\":5287:5296   */\n      dup8\n        /* \"#utility.yul\":5283:5305   */\n      add\n        /* \"#utility.yul\":5262:5315   */\n      tag_383\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5252:5315   */\n      swap2\n      pop\n        /* \"#utility.yul\":5207:5325   */\n      pop\n        /* \"#utility.yul\":4713:5332   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5338:5424   */\n    tag_392:\n        /* \"#utility.yul\":5373:5380   */\n      0x00\n        /* \"#utility.yul\":5413:5417   */\n      0xff\n        /* \"#utility.yul\":5406:5411   */\n      dup3\n        /* \"#utility.yul\":5402:5418   */\n      and\n        /* \"#utility.yul\":5391:5418   */\n      swap1\n      pop\n        /* \"#utility.yul\":5338:5424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5542   */\n    tag_393:\n        /* \"#utility.yul\":5513:5535   */\n      tag_486\n        /* \"#utility.yul\":5529:5534   */\n      dup2\n        /* \"#utility.yul\":5513:5535   */\n      tag_392\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":5508:5511   */\n      dup3\n        /* \"#utility.yul\":5501:5536   */\n      mstore\n        /* \"#utility.yul\":5430:5542   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5762   */\n    tag_67:\n        /* \"#utility.yul\":5637:5641   */\n      0x00\n        /* \"#utility.yul\":5675:5677   */\n      0x20\n        /* \"#utility.yul\":5664:5673   */\n      dup3\n        /* \"#utility.yul\":5660:5678   */\n      add\n        /* \"#utility.yul\":5652:5678   */\n      swap1\n      pop\n        /* \"#utility.yul\":5688:5755   */\n      tag_488\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5688:5755   */\n      tag_393\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":5548:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6097   */\n    tag_76:\n        /* \"#utility.yul\":5827:5833   */\n      0x00\n        /* \"#utility.yul\":5876:5878   */\n      0x20\n        /* \"#utility.yul\":5864:5873   */\n      dup3\n        /* \"#utility.yul\":5855:5862   */\n      dup5\n        /* \"#utility.yul\":5851:5874   */\n      sub\n        /* \"#utility.yul\":5847:5879   */\n      slt\n        /* \"#utility.yul\":5844:5963   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":5882:5961   */\n      tag_491\n      tag_375\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5844:5963   */\n    tag_490:\n        /* \"#utility.yul\":6002:6003   */\n      0x00\n        /* \"#utility.yul\":6027:6080   */\n      tag_492\n        /* \"#utility.yul\":6072:6079   */\n      dup5\n        /* \"#utility.yul\":6063:6069   */\n      dup3\n        /* \"#utility.yul\":6052:6061   */\n      dup6\n        /* \"#utility.yul\":6048:6070   */\n      add\n        /* \"#utility.yul\":6027:6080   */\n      tag_380\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":6017:6080   */\n      swap2\n      pop\n        /* \"#utility.yul\":5973:6090   */\n      pop\n        /* \"#utility.yul\":5768:6097   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6103:6432   */\n    tag_81:\n        /* \"#utility.yul\":6162:6168   */\n      0x00\n        /* \"#utility.yul\":6211:6213   */\n      0x20\n        /* \"#utility.yul\":6199:6208   */\n      dup3\n        /* \"#utility.yul\":6190:6197   */\n      dup5\n        /* \"#utility.yul\":6186:6209   */\n      sub\n        /* \"#utility.yul\":6182:6214   */\n      slt\n        /* \"#utility.yul\":6179:6298   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":6217:6296   */\n      tag_495\n      tag_375\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":6179:6298   */\n    tag_494:\n        /* \"#utility.yul\":6337:6338   */\n      0x00\n        /* \"#utility.yul\":6362:6415   */\n      tag_496\n        /* \"#utility.yul\":6407:6414   */\n      dup5\n        /* \"#utility.yul\":6398:6404   */\n      dup3\n        /* \"#utility.yul\":6387:6396   */\n      dup6\n        /* \"#utility.yul\":6383:6405   */\n      add\n        /* \"#utility.yul\":6362:6415   */\n      tag_383\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":6352:6415   */\n      swap2\n      pop\n        /* \"#utility.yul\":6308:6425   */\n      pop\n        /* \"#utility.yul\":6103:6432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6438:6585   */\n    tag_394:\n        /* \"#utility.yul\":6509:6518   */\n      0x00\n        /* \"#utility.yul\":6542:6579   */\n      tag_498\n        /* \"#utility.yul\":6573:6578   */\n      dup3\n        /* \"#utility.yul\":6542:6579   */\n      tag_388\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":6529:6579   */\n      swap1\n      pop\n        /* \"#utility.yul\":6438:6585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6591:6764   */\n    tag_395:\n        /* \"#utility.yul\":6699:6757   */\n      tag_500\n        /* \"#utility.yul\":6751:6756   */\n      dup2\n        /* \"#utility.yul\":6699:6757   */\n      tag_394\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":6694:6697   */\n      dup3\n        /* \"#utility.yul\":6687:6758   */\n      mstore\n        /* \"#utility.yul\":6591:6764   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:7034   */\n    tag_92:\n        /* \"#utility.yul\":6884:6888   */\n      0x00\n        /* \"#utility.yul\":6922:6924   */\n      0x20\n        /* \"#utility.yul\":6911:6920   */\n      dup3\n        /* \"#utility.yul\":6907:6925   */\n      add\n        /* \"#utility.yul\":6899:6925   */\n      swap1\n      pop\n        /* \"#utility.yul\":6935:7027   */\n      tag_502\n        /* \"#utility.yul\":7024:7025   */\n      0x00\n        /* \"#utility.yul\":7013:7022   */\n      dup4\n        /* \"#utility.yul\":7009:7026   */\n      add\n        /* \"#utility.yul\":7000:7006   */\n      dup5\n        /* \"#utility.yul\":6935:7027   */\n      tag_395\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":6770:7034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7040:7158   */\n    tag_396:\n        /* \"#utility.yul\":7127:7151   */\n      tag_504\n        /* \"#utility.yul\":7145:7150   */\n      dup2\n        /* \"#utility.yul\":7127:7151   */\n      tag_378\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":7122:7125   */\n      dup3\n        /* \"#utility.yul\":7115:7152   */\n      mstore\n        /* \"#utility.yul\":7040:7158   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7164:7386   */\n    tag_96:\n        /* \"#utility.yul\":7257:7261   */\n      0x00\n        /* \"#utility.yul\":7295:7297   */\n      0x20\n        /* \"#utility.yul\":7284:7293   */\n      dup3\n        /* \"#utility.yul\":7280:7298   */\n      add\n        /* \"#utility.yul\":7272:7298   */\n      swap1\n      pop\n        /* \"#utility.yul\":7308:7379   */\n      tag_506\n        /* \"#utility.yul\":7376:7377   */\n      0x00\n        /* \"#utility.yul\":7365:7374   */\n      dup4\n        /* \"#utility.yul\":7361:7378   */\n      add\n        /* \"#utility.yul\":7352:7358   */\n      dup5\n        /* \"#utility.yul\":7308:7379   */\n      tag_396\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":7164:7386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7392:7866   */\n    tag_127:\n        /* \"#utility.yul\":7460:7466   */\n      0x00\n        /* \"#utility.yul\":7468:7474   */\n      dup1\n        /* \"#utility.yul\":7517:7519   */\n      0x40\n        /* \"#utility.yul\":7505:7514   */\n      dup4\n        /* \"#utility.yul\":7496:7503   */\n      dup6\n        /* \"#utility.yul\":7492:7515   */\n      sub\n        /* \"#utility.yul\":7488:7520   */\n      slt\n        /* \"#utility.yul\":7485:7604   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":7523:7602   */\n      tag_509\n      tag_375\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":7485:7604   */\n    tag_508:\n        /* \"#utility.yul\":7643:7644   */\n      0x00\n        /* \"#utility.yul\":7668:7721   */\n      tag_510\n        /* \"#utility.yul\":7713:7720   */\n      dup6\n        /* \"#utility.yul\":7704:7710   */\n      dup3\n        /* \"#utility.yul\":7693:7702   */\n      dup7\n        /* \"#utility.yul\":7689:7711   */\n      add\n        /* \"#utility.yul\":7668:7721   */\n      tag_380\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":7658:7721   */\n      swap3\n      pop\n        /* \"#utility.yul\":7614:7731   */\n      pop\n        /* \"#utility.yul\":7770:7772   */\n      0x20\n        /* \"#utility.yul\":7796:7849   */\n      tag_511\n        /* \"#utility.yul\":7841:7848   */\n      dup6\n        /* \"#utility.yul\":7832:7838   */\n      dup3\n        /* \"#utility.yul\":7821:7830   */\n      dup7\n        /* \"#utility.yul\":7817:7839   */\n      add\n        /* \"#utility.yul\":7796:7849   */\n      tag_380\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":7786:7849   */\n      swap2\n      pop\n        /* \"#utility.yul\":7741:7859   */\n      pop\n        /* \"#utility.yul\":7392:7866   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7872:8052   */\n    tag_397:\n        /* \"#utility.yul\":7920:7997   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7917:7918   */\n      0x00\n        /* \"#utility.yul\":7910:7998   */\n      mstore\n        /* \"#utility.yul\":8017:8021   */\n      0x22\n        /* \"#utility.yul\":8014:8015   */\n      0x04\n        /* \"#utility.yul\":8007:8022   */\n      mstore\n        /* \"#utility.yul\":8041:8045   */\n      0x24\n        /* \"#utility.yul\":8038:8039   */\n      0x00\n        /* \"#utility.yul\":8031:8046   */\n      revert\n        /* \"#utility.yul\":8058:8378   */\n    tag_141:\n        /* \"#utility.yul\":8102:8108   */\n      0x00\n        /* \"#utility.yul\":8139:8140   */\n      0x02\n        /* \"#utility.yul\":8133:8137   */\n      dup3\n        /* \"#utility.yul\":8129:8141   */\n      div\n        /* \"#utility.yul\":8119:8141   */\n      swap1\n      pop\n        /* \"#utility.yul\":8186:8187   */\n      0x01\n        /* \"#utility.yul\":8180:8184   */\n      dup3\n        /* \"#utility.yul\":8176:8188   */\n      and\n        /* \"#utility.yul\":8207:8225   */\n      dup1\n        /* \"#utility.yul\":8197:8278   */\n      tag_514\n      jumpi\n        /* \"#utility.yul\":8263:8267   */\n      0x7f\n        /* \"#utility.yul\":8255:8261   */\n      dup3\n        /* \"#utility.yul\":8251:8268   */\n      and\n        /* \"#utility.yul\":8241:8268   */\n      swap2\n      pop\n        /* \"#utility.yul\":8197:8278   */\n    tag_514:\n        /* \"#utility.yul\":8325:8327   */\n      0x20\n        /* \"#utility.yul\":8317:8323   */\n      dup3\n        /* \"#utility.yul\":8314:8328   */\n      lt\n        /* \"#utility.yul\":8294:8312   */\n      dup2\n        /* \"#utility.yul\":8291:8329   */\n      sub\n        /* \"#utility.yul\":8288:8372   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":8344:8362   */\n      tag_516\n      tag_397\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":8288:8372   */\n    tag_515:\n        /* \"#utility.yul\":8109:8378   */\n      pop\n        /* \"#utility.yul\":8058:8378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8384:8549   */\n    tag_398:\n        /* \"#utility.yul\":8524:8541   */\n      0x4e6f7420656e6f75676820635553440000000000000000000000000000000000\n        /* \"#utility.yul\":8520:8521   */\n      0x00\n        /* \"#utility.yul\":8512:8518   */\n      dup3\n        /* \"#utility.yul\":8508:8522   */\n      add\n        /* \"#utility.yul\":8501:8542   */\n      mstore\n        /* \"#utility.yul\":8384:8549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8555:8921   */\n    tag_399:\n        /* \"#utility.yul\":8697:8700   */\n      0x00\n        /* \"#utility.yul\":8718:8785   */\n      tag_519\n        /* \"#utility.yul\":8782:8784   */\n      0x0f\n        /* \"#utility.yul\":8777:8780   */\n      dup4\n        /* \"#utility.yul\":8718:8785   */\n      tag_370\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":8711:8785   */\n      swap2\n      pop\n        /* \"#utility.yul\":8794:8887   */\n      tag_520\n        /* \"#utility.yul\":8883:8886   */\n      dup3\n        /* \"#utility.yul\":8794:8887   */\n      tag_398\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":8912:8914   */\n      0x20\n        /* \"#utility.yul\":8907:8910   */\n      dup3\n        /* \"#utility.yul\":8903:8915   */\n      add\n        /* \"#utility.yul\":8896:8915   */\n      swap1\n      pop\n        /* \"#utility.yul\":8555:8921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8927:9346   */\n    tag_156:\n        /* \"#utility.yul\":9093:9097   */\n      0x00\n        /* \"#utility.yul\":9131:9133   */\n      0x20\n        /* \"#utility.yul\":9120:9129   */\n      dup3\n        /* \"#utility.yul\":9116:9134   */\n      add\n        /* \"#utility.yul\":9108:9134   */\n      swap1\n      pop\n        /* \"#utility.yul\":9180:9189   */\n      dup2\n        /* \"#utility.yul\":9174:9178   */\n      dup2\n        /* \"#utility.yul\":9170:9190   */\n      sub\n        /* \"#utility.yul\":9166:9167   */\n      0x00\n        /* \"#utility.yul\":9155:9164   */\n      dup4\n        /* \"#utility.yul\":9151:9168   */\n      add\n        /* \"#utility.yul\":9144:9191   */\n      mstore\n        /* \"#utility.yul\":9208:9339   */\n      tag_522\n        /* \"#utility.yul\":9334:9338   */\n      dup2\n        /* \"#utility.yul\":9208:9339   */\n      tag_399\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":9200:9339   */\n      swap1\n      pop\n        /* \"#utility.yul\":8927:9346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9352:9523   */\n    tag_400:\n        /* \"#utility.yul\":9492:9515   */\n      0x4e6f7420656e6f75676820636f6c6c61746572616c0000000000000000000000\n        /* \"#utility.yul\":9488:9489   */\n      0x00\n        /* \"#utility.yul\":9480:9486   */\n      dup3\n        /* \"#utility.yul\":9476:9490   */\n      add\n        /* \"#utility.yul\":9469:9516   */\n      mstore\n        /* \"#utility.yul\":9352:9523   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9529:9895   */\n    tag_401:\n        /* \"#utility.yul\":9671:9674   */\n      0x00\n        /* \"#utility.yul\":9692:9759   */\n      tag_525\n        /* \"#utility.yul\":9756:9758   */\n      0x15\n        /* \"#utility.yul\":9751:9754   */\n      dup4\n        /* \"#utility.yul\":9692:9759   */\n      tag_370\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":9685:9759   */\n      swap2\n      pop\n        /* \"#utility.yul\":9768:9861   */\n      tag_526\n        /* \"#utility.yul\":9857:9860   */\n      dup3\n        /* \"#utility.yul\":9768:9861   */\n      tag_400\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":9886:9888   */\n      0x20\n        /* \"#utility.yul\":9881:9884   */\n      dup3\n        /* \"#utility.yul\":9877:9889   */\n      add\n        /* \"#utility.yul\":9870:9889   */\n      swap1\n      pop\n        /* \"#utility.yul\":9529:9895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9901:10320   */\n    tag_172:\n        /* \"#utility.yul\":10067:10071   */\n      0x00\n        /* \"#utility.yul\":10105:10107   */\n      0x20\n        /* \"#utility.yul\":10094:10103   */\n      dup3\n        /* \"#utility.yul\":10090:10108   */\n      add\n        /* \"#utility.yul\":10082:10108   */\n      swap1\n      pop\n        /* \"#utility.yul\":10154:10163   */\n      dup2\n        /* \"#utility.yul\":10148:10152   */\n      dup2\n        /* \"#utility.yul\":10144:10164   */\n      sub\n        /* \"#utility.yul\":10140:10141   */\n      0x00\n        /* \"#utility.yul\":10129:10138   */\n      dup4\n        /* \"#utility.yul\":10125:10142   */\n      add\n        /* \"#utility.yul\":10118:10165   */\n      mstore\n        /* \"#utility.yul\":10182:10313   */\n      tag_528\n        /* \"#utility.yul\":10308:10312   */\n      dup2\n        /* \"#utility.yul\":10182:10313   */\n      tag_401\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10174:10313   */\n      swap1\n      pop\n        /* \"#utility.yul\":9901:10320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10326:10469   */\n    tag_402:\n        /* \"#utility.yul\":10383:10388   */\n      0x00\n        /* \"#utility.yul\":10414:10420   */\n      dup2\n        /* \"#utility.yul\":10408:10421   */\n      mload\n        /* \"#utility.yul\":10399:10421   */\n      swap1\n      pop\n        /* \"#utility.yul\":10430:10463   */\n      tag_530\n        /* \"#utility.yul\":10457:10462   */\n      dup2\n        /* \"#utility.yul\":10430:10463   */\n      tag_382\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":10326:10469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10475:10826   */\n    tag_178:\n        /* \"#utility.yul\":10545:10551   */\n      0x00\n        /* \"#utility.yul\":10594:10596   */\n      0x20\n        /* \"#utility.yul\":10582:10591   */\n      dup3\n        /* \"#utility.yul\":10573:10580   */\n      dup5\n        /* \"#utility.yul\":10569:10592   */\n      sub\n        /* \"#utility.yul\":10565:10597   */\n      slt\n        /* \"#utility.yul\":10562:10681   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":10600:10679   */\n      tag_533\n      tag_375\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10562:10681   */\n    tag_532:\n        /* \"#utility.yul\":10720:10721   */\n      0x00\n        /* \"#utility.yul\":10745:10809   */\n      tag_534\n        /* \"#utility.yul\":10801:10808   */\n      dup5\n        /* \"#utility.yul\":10792:10798   */\n      dup3\n        /* \"#utility.yul\":10781:10790   */\n      dup6\n        /* \"#utility.yul\":10777:10799   */\n      add\n        /* \"#utility.yul\":10745:10809   */\n      tag_402\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":10735:10809   */\n      swap2\n      pop\n        /* \"#utility.yul\":10691:10819   */\n      pop\n        /* \"#utility.yul\":10475:10826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10832:11012   */\n    tag_403:\n        /* \"#utility.yul\":10880:10957   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10877:10878   */\n      0x00\n        /* \"#utility.yul\":10870:10958   */\n      mstore\n        /* \"#utility.yul\":10977:10981   */\n      0x11\n        /* \"#utility.yul\":10974:10975   */\n      0x04\n        /* \"#utility.yul\":10967:10982   */\n      mstore\n        /* \"#utility.yul\":11001:11005   */\n      0x24\n        /* \"#utility.yul\":10998:10999   */\n      0x00\n        /* \"#utility.yul\":10991:11006   */\n      revert\n        /* \"#utility.yul\":11018:11428   */\n    tag_180:\n        /* \"#utility.yul\":11058:11065   */\n      0x00\n        /* \"#utility.yul\":11081:11101   */\n      tag_537\n        /* \"#utility.yul\":11099:11100   */\n      dup3\n        /* \"#utility.yul\":11081:11101   */\n      tag_381\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11076:11101   */\n      swap2\n      pop\n        /* \"#utility.yul\":11115:11135   */\n      tag_538\n        /* \"#utility.yul\":11133:11134   */\n      dup4\n        /* \"#utility.yul\":11115:11135   */\n      tag_381\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":11110:11135   */\n      swap3\n      pop\n        /* \"#utility.yul\":11170:11171   */\n      dup3\n        /* \"#utility.yul\":11167:11168   */\n      dup3\n        /* \"#utility.yul\":11163:11172   */\n      mul\n        /* \"#utility.yul\":11192:11222   */\n      tag_539\n        /* \"#utility.yul\":11210:11221   */\n      dup2\n        /* \"#utility.yul\":11192:11222   */\n      tag_381\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11181:11222   */\n      swap2\n      pop\n        /* \"#utility.yul\":11371:11372   */\n      dup3\n        /* \"#utility.yul\":11362:11369   */\n      dup3\n        /* \"#utility.yul\":11358:11373   */\n      div\n        /* \"#utility.yul\":11355:11356   */\n      dup5\n        /* \"#utility.yul\":11352:11374   */\n      eq\n        /* \"#utility.yul\":11332:11333   */\n      dup4\n        /* \"#utility.yul\":11325:11334   */\n      iszero\n        /* \"#utility.yul\":11305:11388   */\n      or\n        /* \"#utility.yul\":11282:11421   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":11401:11419   */\n      tag_541\n      tag_403\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":11282:11421   */\n    tag_540:\n        /* \"#utility.yul\":11066:11428   */\n      pop\n        /* \"#utility.yul\":11018:11428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11434:11614   */\n    tag_404:\n        /* \"#utility.yul\":11482:11559   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11479:11480   */\n      0x00\n        /* \"#utility.yul\":11472:11560   */\n      mstore\n        /* \"#utility.yul\":11579:11583   */\n      0x12\n        /* \"#utility.yul\":11576:11577   */\n      0x04\n        /* \"#utility.yul\":11569:11584   */\n      mstore\n        /* \"#utility.yul\":11603:11607   */\n      0x24\n        /* \"#utility.yul\":11600:11601   */\n      0x00\n        /* \"#utility.yul\":11593:11608   */\n      revert\n        /* \"#utility.yul\":11620:11805   */\n    tag_182:\n        /* \"#utility.yul\":11660:11661   */\n      0x00\n        /* \"#utility.yul\":11677:11697   */\n      tag_544\n        /* \"#utility.yul\":11695:11696   */\n      dup3\n        /* \"#utility.yul\":11677:11697   */\n      tag_381\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":11672:11697   */\n      swap2\n      pop\n        /* \"#utility.yul\":11711:11731   */\n      tag_545\n        /* \"#utility.yul\":11729:11730   */\n      dup4\n        /* \"#utility.yul\":11711:11731   */\n      tag_381\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":11706:11731   */\n      swap3\n      pop\n        /* \"#utility.yul\":11750:11751   */\n      dup3\n        /* \"#utility.yul\":11740:11775   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":11755:11773   */\n      tag_547\n      tag_404\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":11740:11775   */\n    tag_546:\n        /* \"#utility.yul\":11797:11798   */\n      dup3\n        /* \"#utility.yul\":11794:11795   */\n      dup3\n        /* \"#utility.yul\":11790:11799   */\n      div\n        /* \"#utility.yul\":11785:11799   */\n      swap1\n      pop\n        /* \"#utility.yul\":11620:11805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11811:12005   */\n    tag_188:\n        /* \"#utility.yul\":11851:11855   */\n      0x00\n        /* \"#utility.yul\":11871:11891   */\n      tag_549\n        /* \"#utility.yul\":11889:11890   */\n      dup3\n        /* \"#utility.yul\":11871:11891   */\n      tag_381\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":11866:11891   */\n      swap2\n      pop\n        /* \"#utility.yul\":11905:11925   */\n      tag_550\n        /* \"#utility.yul\":11923:11924   */\n      dup4\n        /* \"#utility.yul\":11905:11925   */\n      tag_381\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":11900:11925   */\n      swap3\n      pop\n        /* \"#utility.yul\":11949:11950   */\n      dup3\n        /* \"#utility.yul\":11946:11947   */\n      dup3\n        /* \"#utility.yul\":11942:11951   */\n      sub\n        /* \"#utility.yul\":11934:11951   */\n      swap1\n      pop\n        /* \"#utility.yul\":11973:11974   */\n      dup2\n        /* \"#utility.yul\":11967:11971   */\n      dup2\n        /* \"#utility.yul\":11964:11975   */\n      gt\n        /* \"#utility.yul\":11961:11998   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":11978:11996   */\n      tag_552\n      tag_403\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":11961:11998   */\n    tag_551:\n        /* \"#utility.yul\":11811:12005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12011:12233   */\n    tag_405:\n        /* \"#utility.yul\":12151:12185   */\n      0x5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c\n        /* \"#utility.yul\":12147:12148   */\n      0x00\n        /* \"#utility.yul\":12139:12145   */\n      dup3\n        /* \"#utility.yul\":12135:12149   */\n      add\n        /* \"#utility.yul\":12128:12186   */\n      mstore\n        /* \"#utility.yul\":12220:12225   */\n      0x697a650000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12215:12217   */\n      0x20\n        /* \"#utility.yul\":12207:12213   */\n      dup3\n        /* \"#utility.yul\":12203:12218   */\n      add\n        /* \"#utility.yul\":12196:12226   */\n      mstore\n        /* \"#utility.yul\":12011:12233   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12239:12605   */\n    tag_406:\n        /* \"#utility.yul\":12381:12384   */\n      0x00\n        /* \"#utility.yul\":12402:12469   */\n      tag_555\n        /* \"#utility.yul\":12466:12468   */\n      0x23\n        /* \"#utility.yul\":12461:12464   */\n      dup4\n        /* \"#utility.yul\":12402:12469   */\n      tag_370\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":12395:12469   */\n      swap2\n      pop\n        /* \"#utility.yul\":12478:12571   */\n      tag_556\n        /* \"#utility.yul\":12567:12570   */\n      dup3\n        /* \"#utility.yul\":12478:12571   */\n      tag_405\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":12596:12598   */\n      0x40\n        /* \"#utility.yul\":12591:12594   */\n      dup3\n        /* \"#utility.yul\":12587:12599   */\n      add\n        /* \"#utility.yul\":12580:12599   */\n      swap1\n      pop\n        /* \"#utility.yul\":12239:12605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12611:13030   */\n    tag_191:\n        /* \"#utility.yul\":12777:12781   */\n      0x00\n        /* \"#utility.yul\":12815:12817   */\n      0x20\n        /* \"#utility.yul\":12804:12813   */\n      dup3\n        /* \"#utility.yul\":12800:12818   */\n      add\n        /* \"#utility.yul\":12792:12818   */\n      swap1\n      pop\n        /* \"#utility.yul\":12864:12873   */\n      dup2\n        /* \"#utility.yul\":12858:12862   */\n      dup2\n        /* \"#utility.yul\":12854:12874   */\n      sub\n        /* \"#utility.yul\":12850:12851   */\n      0x00\n        /* \"#utility.yul\":12839:12848   */\n      dup4\n        /* \"#utility.yul\":12835:12852   */\n      add\n        /* \"#utility.yul\":12828:12875   */\n      mstore\n        /* \"#utility.yul\":12892:13023   */\n      tag_558\n        /* \"#utility.yul\":13018:13022   */\n      dup2\n        /* \"#utility.yul\":12892:13023   */\n      tag_406\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":12884:13023   */\n      swap1\n      pop\n        /* \"#utility.yul\":12611:13030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13036:13368   */\n    tag_194:\n        /* \"#utility.yul\":13157:13161   */\n      0x00\n        /* \"#utility.yul\":13195:13197   */\n      0x40\n        /* \"#utility.yul\":13184:13193   */\n      dup3\n        /* \"#utility.yul\":13180:13198   */\n      add\n        /* \"#utility.yul\":13172:13198   */\n      swap1\n      pop\n        /* \"#utility.yul\":13208:13279   */\n      tag_560\n        /* \"#utility.yul\":13276:13277   */\n      0x00\n        /* \"#utility.yul\":13265:13274   */\n      dup4\n        /* \"#utility.yul\":13261:13278   */\n      add\n        /* \"#utility.yul\":13252:13258   */\n      dup6\n        /* \"#utility.yul\":13208:13279   */\n      tag_396\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":13289:13361   */\n      tag_561\n        /* \"#utility.yul\":13357:13359   */\n      0x20\n        /* \"#utility.yul\":13346:13355   */\n      dup4\n        /* \"#utility.yul\":13342:13360   */\n      add\n        /* \"#utility.yul\":13333:13339   */\n      dup5\n        /* \"#utility.yul\":13289:13361   */\n      tag_391\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":13036:13368   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13374:13490   */\n    tag_407:\n        /* \"#utility.yul\":13444:13465   */\n      tag_563\n        /* \"#utility.yul\":13459:13464   */\n      dup2\n        /* \"#utility.yul\":13444:13465   */\n      tag_384\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":13437:13442   */\n      dup2\n        /* \"#utility.yul\":13434:13466   */\n      eq\n        /* \"#utility.yul\":13424:13484   */\n      tag_564\n      jumpi\n        /* \"#utility.yul\":13480:13481   */\n      0x00\n        /* \"#utility.yul\":13477:13478   */\n      dup1\n        /* \"#utility.yul\":13470:13482   */\n      revert\n        /* \"#utility.yul\":13424:13484   */\n    tag_564:\n        /* \"#utility.yul\":13374:13490   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13496:13633   */\n    tag_408:\n        /* \"#utility.yul\":13550:13555   */\n      0x00\n        /* \"#utility.yul\":13581:13587   */\n      dup2\n        /* \"#utility.yul\":13575:13588   */\n      mload\n        /* \"#utility.yul\":13566:13588   */\n      swap1\n      pop\n        /* \"#utility.yul\":13597:13627   */\n      tag_566\n        /* \"#utility.yul\":13621:13626   */\n      dup2\n        /* \"#utility.yul\":13597:13627   */\n      tag_407\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":13496:13633   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13639:13984   */\n    tag_198:\n        /* \"#utility.yul\":13706:13712   */\n      0x00\n        /* \"#utility.yul\":13755:13757   */\n      0x20\n        /* \"#utility.yul\":13743:13752   */\n      dup3\n        /* \"#utility.yul\":13734:13741   */\n      dup5\n        /* \"#utility.yul\":13730:13753   */\n      sub\n        /* \"#utility.yul\":13726:13758   */\n      slt\n        /* \"#utility.yul\":13723:13842   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":13761:13840   */\n      tag_569\n      tag_375\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":13723:13842   */\n    tag_568:\n        /* \"#utility.yul\":13881:13882   */\n      0x00\n        /* \"#utility.yul\":13906:13967   */\n      tag_570\n        /* \"#utility.yul\":13959:13966   */\n      dup5\n        /* \"#utility.yul\":13950:13956   */\n      dup3\n        /* \"#utility.yul\":13939:13948   */\n      dup6\n        /* \"#utility.yul\":13935:13957   */\n      add\n        /* \"#utility.yul\":13906:13967   */\n      tag_408\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":13896:13967   */\n      swap2\n      pop\n        /* \"#utility.yul\":13852:13977   */\n      pop\n        /* \"#utility.yul\":13639:13984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13990:14160   */\n    tag_409:\n        /* \"#utility.yul\":14130:14152   */\n      0x63425443207472616e73666572206661696c6564000000000000000000000000\n        /* \"#utility.yul\":14126:14127   */\n      0x00\n        /* \"#utility.yul\":14118:14124   */\n      dup3\n        /* \"#utility.yul\":14114:14128   */\n      add\n        /* \"#utility.yul\":14107:14153   */\n      mstore\n        /* \"#utility.yul\":13990:14160   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14166:14532   */\n    tag_410:\n        /* \"#utility.yul\":14308:14311   */\n      0x00\n        /* \"#utility.yul\":14329:14396   */\n      tag_573\n        /* \"#utility.yul\":14393:14395   */\n      0x14\n        /* \"#utility.yul\":14388:14391   */\n      dup4\n        /* \"#utility.yul\":14329:14396   */\n      tag_370\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":14322:14396   */\n      swap2\n      pop\n        /* \"#utility.yul\":14405:14498   */\n      tag_574\n        /* \"#utility.yul\":14494:14497   */\n      dup3\n        /* \"#utility.yul\":14405:14498   */\n      tag_409\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":14523:14525   */\n      0x20\n        /* \"#utility.yul\":14518:14521   */\n      dup3\n        /* \"#utility.yul\":14514:14526   */\n      add\n        /* \"#utility.yul\":14507:14526   */\n      swap1\n      pop\n        /* \"#utility.yul\":14166:14532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14538:14957   */\n    tag_201:\n        /* \"#utility.yul\":14704:14708   */\n      0x00\n        /* \"#utility.yul\":14742:14744   */\n      0x20\n        /* \"#utility.yul\":14731:14740   */\n      dup3\n        /* \"#utility.yul\":14727:14745   */\n      add\n        /* \"#utility.yul\":14719:14745   */\n      swap1\n      pop\n        /* \"#utility.yul\":14791:14800   */\n      dup2\n        /* \"#utility.yul\":14785:14789   */\n      dup2\n        /* \"#utility.yul\":14781:14801   */\n      sub\n        /* \"#utility.yul\":14777:14778   */\n      0x00\n        /* \"#utility.yul\":14766:14775   */\n      dup4\n        /* \"#utility.yul\":14762:14779   */\n      add\n        /* \"#utility.yul\":14755:14802   */\n      mstore\n        /* \"#utility.yul\":14819:14950   */\n      tag_576\n        /* \"#utility.yul\":14945:14949   */\n      dup2\n        /* \"#utility.yul\":14819:14950   */\n      tag_410\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":14811:14950   */\n      swap1\n      pop\n        /* \"#utility.yul\":14538:14957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14963:15134   */\n    tag_411:\n        /* \"#utility.yul\":15103:15126   */\n      0x526174696f206d757374206265203e3d20313030250000000000000000000000\n        /* \"#utility.yul\":15099:15100   */\n      0x00\n        /* \"#utility.yul\":15091:15097   */\n      dup3\n        /* \"#utility.yul\":15087:15101   */\n      add\n        /* \"#utility.yul\":15080:15127   */\n      mstore\n        /* \"#utility.yul\":14963:15134   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15140:15506   */\n    tag_412:\n        /* \"#utility.yul\":15282:15285   */\n      0x00\n        /* \"#utility.yul\":15303:15370   */\n      tag_579\n        /* \"#utility.yul\":15367:15369   */\n      0x15\n        /* \"#utility.yul\":15362:15365   */\n      dup4\n        /* \"#utility.yul\":15303:15370   */\n      tag_370\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":15296:15370   */\n      swap2\n      pop\n        /* \"#utility.yul\":15379:15472   */\n      tag_580\n        /* \"#utility.yul\":15468:15471   */\n      dup3\n        /* \"#utility.yul\":15379:15472   */\n      tag_411\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":15497:15499   */\n      0x20\n        /* \"#utility.yul\":15492:15495   */\n      dup3\n        /* \"#utility.yul\":15488:15500   */\n      add\n        /* \"#utility.yul\":15481:15500   */\n      swap1\n      pop\n        /* \"#utility.yul\":15140:15506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15512:15931   */\n    tag_209:\n        /* \"#utility.yul\":15678:15682   */\n      0x00\n        /* \"#utility.yul\":15716:15718   */\n      0x20\n        /* \"#utility.yul\":15705:15714   */\n      dup3\n        /* \"#utility.yul\":15701:15719   */\n      add\n        /* \"#utility.yul\":15693:15719   */\n      swap1\n      pop\n        /* \"#utility.yul\":15765:15774   */\n      dup2\n        /* \"#utility.yul\":15759:15763   */\n      dup2\n        /* \"#utility.yul\":15755:15775   */\n      sub\n        /* \"#utility.yul\":15751:15752   */\n      0x00\n        /* \"#utility.yul\":15740:15749   */\n      dup4\n        /* \"#utility.yul\":15736:15753   */\n      add\n        /* \"#utility.yul\":15729:15776   */\n      mstore\n        /* \"#utility.yul\":15793:15924   */\n      tag_582\n        /* \"#utility.yul\":15919:15923   */\n      dup2\n        /* \"#utility.yul\":15793:15924   */\n      tag_412\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":15785:15924   */\n      swap1\n      pop\n        /* \"#utility.yul\":15512:15931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15937:16105   */\n    tag_413:\n        /* \"#utility.yul\":16077:16097   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":16073:16074   */\n      0x00\n        /* \"#utility.yul\":16065:16071   */\n      dup3\n        /* \"#utility.yul\":16061:16075   */\n      add\n        /* \"#utility.yul\":16054:16098   */\n      mstore\n        /* \"#utility.yul\":15937:16105   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16111:16477   */\n    tag_414:\n        /* \"#utility.yul\":16253:16256   */\n      0x00\n        /* \"#utility.yul\":16274:16341   */\n      tag_585\n        /* \"#utility.yul\":16338:16340   */\n      0x12\n        /* \"#utility.yul\":16333:16336   */\n      dup4\n        /* \"#utility.yul\":16274:16341   */\n      tag_370\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":16267:16341   */\n      swap2\n      pop\n        /* \"#utility.yul\":16350:16443   */\n      tag_586\n        /* \"#utility.yul\":16439:16442   */\n      dup3\n        /* \"#utility.yul\":16350:16443   */\n      tag_413\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16468:16470   */\n      0x20\n        /* \"#utility.yul\":16463:16466   */\n      dup3\n        /* \"#utility.yul\":16459:16471   */\n      add\n        /* \"#utility.yul\":16452:16471   */\n      swap1\n      pop\n        /* \"#utility.yul\":16111:16477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16483:16902   */\n    tag_226:\n        /* \"#utility.yul\":16649:16653   */\n      0x00\n        /* \"#utility.yul\":16687:16689   */\n      0x20\n        /* \"#utility.yul\":16676:16685   */\n      dup3\n        /* \"#utility.yul\":16672:16690   */\n      add\n        /* \"#utility.yul\":16664:16690   */\n      swap1\n      pop\n        /* \"#utility.yul\":16736:16745   */\n      dup2\n        /* \"#utility.yul\":16730:16734   */\n      dup2\n        /* \"#utility.yul\":16726:16746   */\n      sub\n        /* \"#utility.yul\":16722:16723   */\n      0x00\n        /* \"#utility.yul\":16711:16720   */\n      dup4\n        /* \"#utility.yul\":16707:16724   */\n      add\n        /* \"#utility.yul\":16700:16747   */\n      mstore\n        /* \"#utility.yul\":16764:16895   */\n      tag_588\n        /* \"#utility.yul\":16890:16894   */\n      dup2\n        /* \"#utility.yul\":16764:16895   */\n      tag_414\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":16756:16895   */\n      swap1\n      pop\n        /* \"#utility.yul\":16483:16902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16908:17350   */\n    tag_228:\n        /* \"#utility.yul\":17057:17061   */\n      0x00\n        /* \"#utility.yul\":17095:17097   */\n      0x60\n        /* \"#utility.yul\":17084:17093   */\n      dup3\n        /* \"#utility.yul\":17080:17098   */\n      add\n        /* \"#utility.yul\":17072:17098   */\n      swap1\n      pop\n        /* \"#utility.yul\":17108:17179   */\n      tag_590\n        /* \"#utility.yul\":17176:17177   */\n      0x00\n        /* \"#utility.yul\":17165:17174   */\n      dup4\n        /* \"#utility.yul\":17161:17178   */\n      add\n        /* \"#utility.yul\":17152:17158   */\n      dup7\n        /* \"#utility.yul\":17108:17179   */\n      tag_396\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":17189:17261   */\n      tag_591\n        /* \"#utility.yul\":17257:17259   */\n      0x20\n        /* \"#utility.yul\":17246:17255   */\n      dup4\n        /* \"#utility.yul\":17242:17260   */\n      add\n        /* \"#utility.yul\":17233:17239   */\n      dup6\n        /* \"#utility.yul\":17189:17261   */\n      tag_396\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":17271:17343   */\n      tag_592\n        /* \"#utility.yul\":17339:17341   */\n      0x40\n        /* \"#utility.yul\":17328:17337   */\n      dup4\n        /* \"#utility.yul\":17324:17342   */\n      add\n        /* \"#utility.yul\":17315:17321   */\n      dup5\n        /* \"#utility.yul\":17271:17343   */\n      tag_391\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":16908:17350   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17356:17547   */\n    tag_235:\n        /* \"#utility.yul\":17396:17399   */\n      0x00\n        /* \"#utility.yul\":17415:17435   */\n      tag_594\n        /* \"#utility.yul\":17433:17434   */\n      dup3\n        /* \"#utility.yul\":17415:17435   */\n      tag_381\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":17410:17435   */\n      swap2\n      pop\n        /* \"#utility.yul\":17449:17469   */\n      tag_595\n        /* \"#utility.yul\":17467:17468   */\n      dup4\n        /* \"#utility.yul\":17449:17469   */\n      tag_381\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":17444:17469   */\n      swap3\n      pop\n        /* \"#utility.yul\":17492:17493   */\n      dup3\n        /* \"#utility.yul\":17489:17490   */\n      dup3\n        /* \"#utility.yul\":17485:17494   */\n      add\n        /* \"#utility.yul\":17478:17494   */\n      swap1\n      pop\n        /* \"#utility.yul\":17513:17516   */\n      dup1\n        /* \"#utility.yul\":17510:17511   */\n      dup3\n        /* \"#utility.yul\":17507:17517   */\n      gt\n        /* \"#utility.yul\":17504:17540   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":17520:17538   */\n      tag_597\n      tag_403\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":17504:17540   */\n    tag_596:\n        /* \"#utility.yul\":17356:17547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17553:17729   */\n    tag_415:\n        /* \"#utility.yul\":17693:17721   */\n      0x4c697175696461746f72206e6f7420656e6f7567682063555344000000000000\n        /* \"#utility.yul\":17689:17690   */\n      0x00\n        /* \"#utility.yul\":17681:17687   */\n      dup3\n        /* \"#utility.yul\":17677:17691   */\n      add\n        /* \"#utility.yul\":17670:17722   */\n      mstore\n        /* \"#utility.yul\":17553:17729   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17735:18101   */\n    tag_416:\n        /* \"#utility.yul\":17877:17880   */\n      0x00\n        /* \"#utility.yul\":17898:17965   */\n      tag_600\n        /* \"#utility.yul\":17962:17964   */\n      0x1a\n        /* \"#utility.yul\":17957:17960   */\n      dup4\n        /* \"#utility.yul\":17898:17965   */\n      tag_370\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":17891:17965   */\n      swap2\n      pop\n        /* \"#utility.yul\":17974:18067   */\n      tag_601\n        /* \"#utility.yul\":18063:18066   */\n      dup3\n        /* \"#utility.yul\":17974:18067   */\n      tag_415\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":18092:18094   */\n      0x20\n        /* \"#utility.yul\":18087:18090   */\n      dup3\n        /* \"#utility.yul\":18083:18095   */\n      add\n        /* \"#utility.yul\":18076:18095   */\n      swap1\n      pop\n        /* \"#utility.yul\":17735:18101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18107:18526   */\n    tag_273:\n        /* \"#utility.yul\":18273:18277   */\n      0x00\n        /* \"#utility.yul\":18311:18313   */\n      0x20\n        /* \"#utility.yul\":18300:18309   */\n      dup3\n        /* \"#utility.yul\":18296:18314   */\n      add\n        /* \"#utility.yul\":18288:18314   */\n      swap1\n      pop\n        /* \"#utility.yul\":18360:18369   */\n      dup2\n        /* \"#utility.yul\":18354:18358   */\n      dup2\n        /* \"#utility.yul\":18350:18370   */\n      sub\n        /* \"#utility.yul\":18346:18347   */\n      0x00\n        /* \"#utility.yul\":18335:18344   */\n      dup4\n        /* \"#utility.yul\":18331:18348   */\n      add\n        /* \"#utility.yul\":18324:18371   */\n      mstore\n        /* \"#utility.yul\":18388:18519   */\n      tag_603\n        /* \"#utility.yul\":18514:18518   */\n      dup2\n        /* \"#utility.yul\":18388:18519   */\n      tag_416\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":18380:18519   */\n      swap1\n      pop\n        /* \"#utility.yul\":18107:18526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18532:18864   */\n    tag_291:\n        /* \"#utility.yul\":18653:18657   */\n      0x00\n        /* \"#utility.yul\":18691:18693   */\n      0x40\n        /* \"#utility.yul\":18680:18689   */\n      dup3\n        /* \"#utility.yul\":18676:18694   */\n      add\n        /* \"#utility.yul\":18668:18694   */\n      swap1\n      pop\n        /* \"#utility.yul\":18704:18775   */\n      tag_605\n        /* \"#utility.yul\":18772:18773   */\n      0x00\n        /* \"#utility.yul\":18761:18770   */\n      dup4\n        /* \"#utility.yul\":18757:18774   */\n      add\n        /* \"#utility.yul\":18748:18754   */\n      dup6\n        /* \"#utility.yul\":18704:18775   */\n      tag_391\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":18785:18857   */\n      tag_606\n        /* \"#utility.yul\":18853:18855   */\n      0x20\n        /* \"#utility.yul\":18842:18851   */\n      dup4\n        /* \"#utility.yul\":18838:18856   */\n      add\n        /* \"#utility.yul\":18829:18835   */\n      dup5\n        /* \"#utility.yul\":18785:18857   */\n      tag_391\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":18532:18864   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18870:19032   */\n    tag_417:\n        /* \"#utility.yul\":19010:19024   */\n      0x46656520746f6f20686967680000000000000000000000000000000000000000\n        /* \"#utility.yul\":19006:19007   */\n      0x00\n        /* \"#utility.yul\":18998:19004   */\n      dup3\n        /* \"#utility.yul\":18994:19008   */\n      add\n        /* \"#utility.yul\":18987:19025   */\n      mstore\n        /* \"#utility.yul\":18870:19032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19038:19404   */\n    tag_418:\n        /* \"#utility.yul\":19180:19183   */\n      0x00\n        /* \"#utility.yul\":19201:19268   */\n      tag_609\n        /* \"#utility.yul\":19265:19267   */\n      0x0c\n        /* \"#utility.yul\":19260:19263   */\n      dup4\n        /* \"#utility.yul\":19201:19268   */\n      tag_370\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":19194:19268   */\n      swap2\n      pop\n        /* \"#utility.yul\":19277:19370   */\n      tag_610\n        /* \"#utility.yul\":19366:19369   */\n      dup3\n        /* \"#utility.yul\":19277:19370   */\n      tag_417\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":19395:19397   */\n      0x20\n        /* \"#utility.yul\":19390:19393   */\n      dup3\n        /* \"#utility.yul\":19386:19398   */\n      add\n        /* \"#utility.yul\":19379:19398   */\n      swap1\n      pop\n        /* \"#utility.yul\":19038:19404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19410:19829   */\n    tag_319:\n        /* \"#utility.yul\":19576:19580   */\n      0x00\n        /* \"#utility.yul\":19614:19616   */\n      0x20\n        /* \"#utility.yul\":19603:19612   */\n      dup3\n        /* \"#utility.yul\":19599:19617   */\n      add\n        /* \"#utility.yul\":19591:19617   */\n      swap1\n      pop\n        /* \"#utility.yul\":19663:19672   */\n      dup2\n        /* \"#utility.yul\":19657:19661   */\n      dup2\n        /* \"#utility.yul\":19653:19673   */\n      sub\n        /* \"#utility.yul\":19649:19650   */\n      0x00\n        /* \"#utility.yul\":19638:19647   */\n      dup4\n        /* \"#utility.yul\":19634:19651   */\n      add\n        /* \"#utility.yul\":19627:19674   */\n      mstore\n        /* \"#utility.yul\":19691:19822   */\n      tag_612\n        /* \"#utility.yul\":19817:19821   */\n      dup2\n        /* \"#utility.yul\":19691:19822   */\n      tag_418\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":19683:19822   */\n      swap1\n      pop\n        /* \"#utility.yul\":19410:19829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19835:20277   */\n    tag_334:\n        /* \"#utility.yul\":19984:19988   */\n      0x00\n        /* \"#utility.yul\":20022:20024   */\n      0x60\n        /* \"#utility.yul\":20011:20020   */\n      dup3\n        /* \"#utility.yul\":20007:20025   */\n      add\n        /* \"#utility.yul\":19999:20025   */\n      swap1\n      pop\n        /* \"#utility.yul\":20035:20106   */\n      tag_614\n        /* \"#utility.yul\":20103:20104   */\n      0x00\n        /* \"#utility.yul\":20092:20101   */\n      dup4\n        /* \"#utility.yul\":20088:20105   */\n      add\n        /* \"#utility.yul\":20079:20085   */\n      dup7\n        /* \"#utility.yul\":20035:20106   */\n      tag_396\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":20116:20188   */\n      tag_615\n        /* \"#utility.yul\":20184:20186   */\n      0x20\n        /* \"#utility.yul\":20173:20182   */\n      dup4\n        /* \"#utility.yul\":20169:20187   */\n      add\n        /* \"#utility.yul\":20160:20166   */\n      dup6\n        /* \"#utility.yul\":20116:20188   */\n      tag_391\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":20198:20270   */\n      tag_616\n        /* \"#utility.yul\":20266:20268   */\n      0x40\n        /* \"#utility.yul\":20255:20264   */\n      dup4\n        /* \"#utility.yul\":20251:20269   */\n      add\n        /* \"#utility.yul\":20242:20248   */\n      dup5\n        /* \"#utility.yul\":20198:20270   */\n      tag_391\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":19835:20277   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220114ab43328aaca5c3f2996a132a5ff5dc3d383dc4267e9a438d4ba8f9239f2c164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1067": {
									"entryPoint": null,
									"id": 1067,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 773,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_addresst_uint256_fromMemory": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10613:9",
										"nodeType": "YulBlock",
										"src": "0:10613:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "890:32:9",
													"nodeType": "YulBlock",
													"src": "890:32:9",
													"statements": [
														{
															"nativeSrc": "900:16:9",
															"nodeType": "YulAssignment",
															"src": "900:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:9",
																"nodeType": "YulIdentifier",
																"src": "911:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:9",
														"nodeType": "YulTypedName",
														"src": "872:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:9",
														"nodeType": "YulTypedName",
														"src": "882:7:9",
														"type": ""
													}
												],
												"src": "845:77:9"
											},
											{
												"body": {
													"nativeSrc": "971:79:9",
													"nodeType": "YulBlock",
													"src": "971:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:9",
																"nodeType": "YulBlock",
																"src": "1028:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:9"
																			},
																			"nativeSrc": "1030:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:9"
																		},
																		"nativeSrc": "1030:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:9"
																				},
																				"nativeSrc": "1001:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:9"
																		},
																		"nativeSrc": "991:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:9"
																},
																"nativeSrc": "984:43:9",
																"nodeType": "YulFunctionCall",
																"src": "984:43:9"
															},
															"nativeSrc": "981:63:9",
															"nodeType": "YulIf",
															"src": "981:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:9",
														"nodeType": "YulTypedName",
														"src": "964:5:9",
														"type": ""
													}
												],
												"src": "928:122:9"
											},
											{
												"body": {
													"nativeSrc": "1119:80:9",
													"nodeType": "YulBlock",
													"src": "1119:80:9",
													"statements": [
														{
															"nativeSrc": "1129:22:9",
															"nodeType": "YulAssignment",
															"src": "1129:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:9"
																},
																"nativeSrc": "1138:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:9"
																},
																"nativeSrc": "1160:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:9"
															},
															"nativeSrc": "1160:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:9",
														"nodeType": "YulTypedName",
														"src": "1097:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:9",
														"nodeType": "YulTypedName",
														"src": "1105:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:9",
														"nodeType": "YulTypedName",
														"src": "1113:5:9",
														"type": ""
													}
												],
												"src": "1056:143:9"
											},
											{
												"body": {
													"nativeSrc": "1333:692:9",
													"nodeType": "YulBlock",
													"src": "1333:692:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1380:83:9",
																"nodeType": "YulBlock",
																"src": "1380:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1382:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:9"
																			},
																			"nativeSrc": "1382:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:9"
																		},
																		"nativeSrc": "1382:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1354:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1354:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1363:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1350:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:9"
																		},
																		"nativeSrc": "1350:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1350:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1375:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1375:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1346:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:9"
																},
																"nativeSrc": "1346:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1346:33:9"
															},
															"nativeSrc": "1343:120:9",
															"nodeType": "YulIf",
															"src": "1343:120:9"
														},
														{
															"nativeSrc": "1473:128:9",
															"nodeType": "YulBlock",
															"src": "1473:128:9",
															"statements": [
																{
																	"nativeSrc": "1488:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1502:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1492:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1517:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1517:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1563:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1563:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1574:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1574:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1559:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1559:3:9"
																				},
																				"nativeSrc": "1559:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1559:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1583:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1527:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1527:31:9"
																		},
																		"nativeSrc": "1527:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1517:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1611:129:9",
															"nodeType": "YulBlock",
															"src": "1611:129:9",
															"statements": [
																{
																	"nativeSrc": "1626:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1626:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1640:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1630:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1630:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1656:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1656:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1702:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1702:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1713:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1698:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:9"
																				},
																				"nativeSrc": "1698:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1698:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1722:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1666:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1666:31:9"
																		},
																		"nativeSrc": "1666:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1666:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1656:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1750:129:9",
															"nodeType": "YulBlock",
															"src": "1750:129:9",
															"statements": [
																{
																	"nativeSrc": "1765:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1779:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1769:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1795:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1795:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1841:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1841:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1852:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1852:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1837:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:9"
																				},
																				"nativeSrc": "1837:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1861:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1805:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1805:31:9"
																		},
																		"nativeSrc": "1805:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1805:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1795:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1795:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1889:129:9",
															"nodeType": "YulBlock",
															"src": "1889:129:9",
															"statements": [
																{
																	"nativeSrc": "1904:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1904:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1918:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1908:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1908:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1934:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1934:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1980:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1980:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1991:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1991:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1976:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1976:3:9"
																				},
																				"nativeSrc": "1976:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1976:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2000:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2000:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1944:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1944:31:9"
																		},
																		"nativeSrc": "1944:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1944:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1934:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1934:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:820:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1279:9:9",
														"nodeType": "YulTypedName",
														"src": "1279:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1290:7:9",
														"nodeType": "YulTypedName",
														"src": "1290:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1302:6:9",
														"nodeType": "YulTypedName",
														"src": "1302:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1310:6:9",
														"nodeType": "YulTypedName",
														"src": "1310:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1318:6:9",
														"nodeType": "YulTypedName",
														"src": "1318:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1326:6:9",
														"nodeType": "YulTypedName",
														"src": "1326:6:9",
														"type": ""
													}
												],
												"src": "1205:820:9"
											},
											{
												"body": {
													"nativeSrc": "2090:40:9",
													"nodeType": "YulBlock",
													"src": "2090:40:9",
													"statements": [
														{
															"nativeSrc": "2101:22:9",
															"nodeType": "YulAssignment",
															"src": "2101:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2117:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2117:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2111:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2111:5:9"
																},
																"nativeSrc": "2111:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2111:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2101:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2101:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2031:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2073:5:9",
														"nodeType": "YulTypedName",
														"src": "2073:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2083:6:9",
														"nodeType": "YulTypedName",
														"src": "2083:6:9",
														"type": ""
													}
												],
												"src": "2031:99:9"
											},
											{
												"body": {
													"nativeSrc": "2164:152:9",
													"nodeType": "YulBlock",
													"src": "2164:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2181:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2181:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2184:77:9",
																		"nodeType": "YulLiteral",
																		"src": "2184:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2174:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2174:6:9"
																},
																"nativeSrc": "2174:88:9",
																"nodeType": "YulFunctionCall",
																"src": "2174:88:9"
															},
															"nativeSrc": "2174:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "2174:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2278:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2278:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2281:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2281:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2271:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:9"
																},
																"nativeSrc": "2271:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2271:15:9"
															},
															"nativeSrc": "2271:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2271:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2302:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2302:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2305:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2305:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2295:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:9"
																},
																"nativeSrc": "2295:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2295:15:9"
															},
															"nativeSrc": "2295:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2295:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2136:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2136:180:9"
											},
											{
												"body": {
													"nativeSrc": "2350:152:9",
													"nodeType": "YulBlock",
													"src": "2350:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2367:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2367:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2370:77:9",
																		"nodeType": "YulLiteral",
																		"src": "2370:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2360:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2360:6:9"
																},
																"nativeSrc": "2360:88:9",
																"nodeType": "YulFunctionCall",
																"src": "2360:88:9"
															},
															"nativeSrc": "2360:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "2360:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2464:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2464:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2467:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2467:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2457:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:9"
																},
																"nativeSrc": "2457:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2457:15:9"
															},
															"nativeSrc": "2457:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2457:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2491:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2491:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2481:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2481:6:9"
																},
																"nativeSrc": "2481:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2481:15:9"
															},
															"nativeSrc": "2481:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2481:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2322:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2322:180:9"
											},
											{
												"body": {
													"nativeSrc": "2559:269:9",
													"nodeType": "YulBlock",
													"src": "2559:269:9",
													"statements": [
														{
															"nativeSrc": "2569:22:9",
															"nodeType": "YulAssignment",
															"src": "2569:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2583:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2583:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2589:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2589:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:9"
																},
																"nativeSrc": "2579:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2579:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2569:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2569:6:9"
																}
															]
														},
														{
															"nativeSrc": "2600:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2600:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2630:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2630:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2636:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2636:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2626:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2626:3:9"
																},
																"nativeSrc": "2626:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2626:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2604:18:9",
																	"nodeType": "YulTypedName",
																	"src": "2604:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2677:51:9",
																"nodeType": "YulBlock",
																"src": "2677:51:9",
																"statements": [
																	{
																		"nativeSrc": "2691:27:9",
																		"nodeType": "YulAssignment",
																		"src": "2691:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2705:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2705:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2713:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2713:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2701:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2701:3:9"
																			},
																			"nativeSrc": "2701:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2701:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2691:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2691:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2657:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2657:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2650:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:9"
																},
																"nativeSrc": "2650:26:9",
																"nodeType": "YulFunctionCall",
																"src": "2650:26:9"
															},
															"nativeSrc": "2647:81:9",
															"nodeType": "YulIf",
															"src": "2647:81:9"
														},
														{
															"body": {
																"nativeSrc": "2780:42:9",
																"nodeType": "YulBlock",
																"src": "2780:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2794:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2794:16:9"
																			},
																			"nativeSrc": "2794:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2794:18:9"
																		},
																		"nativeSrc": "2794:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2794:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2744:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2744:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2767:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2767:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2775:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2775:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2764:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2764:2:9"
																		},
																		"nativeSrc": "2764:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2741:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2741:2:9"
																},
																"nativeSrc": "2741:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2741:38:9"
															},
															"nativeSrc": "2738:84:9",
															"nodeType": "YulIf",
															"src": "2738:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2508:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2543:4:9",
														"nodeType": "YulTypedName",
														"src": "2543:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2552:6:9",
														"nodeType": "YulTypedName",
														"src": "2552:6:9",
														"type": ""
													}
												],
												"src": "2508:320:9"
											},
											{
												"body": {
													"nativeSrc": "2888:87:9",
													"nodeType": "YulBlock",
													"src": "2888:87:9",
													"statements": [
														{
															"nativeSrc": "2898:11:9",
															"nodeType": "YulAssignment",
															"src": "2898:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "2906:3:9",
																"nodeType": "YulIdentifier",
																"src": "2906:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2898:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2898:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2926:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2926:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2929:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2929:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2919:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2919:6:9"
																},
																"nativeSrc": "2919:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2919:14:9"
															},
															"nativeSrc": "2919:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "2919:14:9"
														},
														{
															"nativeSrc": "2942:26:9",
															"nodeType": "YulAssignment",
															"src": "2942:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2960:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2960:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2963:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2963:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2950:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2950:9:9"
																},
																"nativeSrc": "2950:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2950:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2942:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2942:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2834:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2875:3:9",
														"nodeType": "YulTypedName",
														"src": "2875:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2883:4:9",
														"nodeType": "YulTypedName",
														"src": "2883:4:9",
														"type": ""
													}
												],
												"src": "2834:141:9"
											},
											{
												"body": {
													"nativeSrc": "3025:49:9",
													"nodeType": "YulBlock",
													"src": "3025:49:9",
													"statements": [
														{
															"nativeSrc": "3035:33:9",
															"nodeType": "YulAssignment",
															"src": "3035:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3060:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3060:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3049:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3049:3:9"
																		},
																		"nativeSrc": "3049:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3049:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3065:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3065:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3045:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3045:3:9"
																},
																"nativeSrc": "3045:23:9",
																"nodeType": "YulFunctionCall",
																"src": "3045:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3035:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3035:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2981:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3008:5:9",
														"nodeType": "YulTypedName",
														"src": "3008:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3018:6:9",
														"nodeType": "YulTypedName",
														"src": "3018:6:9",
														"type": ""
													}
												],
												"src": "2981:93:9"
											},
											{
												"body": {
													"nativeSrc": "3133:54:9",
													"nodeType": "YulBlock",
													"src": "3133:54:9",
													"statements": [
														{
															"nativeSrc": "3143:37:9",
															"nodeType": "YulAssignment",
															"src": "3143:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3168:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3168:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3174:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3174:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3164:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:9"
																},
																"nativeSrc": "3164:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3164:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3143:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "3143:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3080:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3108:4:9",
														"nodeType": "YulTypedName",
														"src": "3108:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3114:5:9",
														"nodeType": "YulTypedName",
														"src": "3114:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3124:8:9",
														"nodeType": "YulTypedName",
														"src": "3124:8:9",
														"type": ""
													}
												],
												"src": "3080:107:9"
											},
											{
												"body": {
													"nativeSrc": "3269:317:9",
													"nodeType": "YulBlock",
													"src": "3269:317:9",
													"statements": [
														{
															"nativeSrc": "3279:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3279:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3300:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "3300:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3312:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3312:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3296:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:9"
																},
																"nativeSrc": "3296:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3296:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3283:9:9",
																	"nodeType": "YulTypedName",
																	"src": "3283:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3323:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3323:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3354:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3354:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3365:66:9",
																		"nodeType": "YulLiteral",
																		"src": "3365:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3335:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3335:18:9"
																},
																"nativeSrc": "3335:97:9",
																"nodeType": "YulFunctionCall",
																"src": "3335:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3327:4:9",
																	"nodeType": "YulTypedName",
																	"src": "3327:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3441:51:9",
															"nodeType": "YulAssignment",
															"src": "3441:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3472:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3472:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3483:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "3483:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3453:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3453:18:9"
																},
																"nativeSrc": "3453:39:9",
																"nodeType": "YulFunctionCall",
																"src": "3453:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3441:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "3441:8:9"
																}
															]
														},
														{
															"nativeSrc": "3501:30:9",
															"nodeType": "YulAssignment",
															"src": "3501:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3525:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3525:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3521:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3521:3:9"
																		},
																		"nativeSrc": "3521:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3521:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:9"
																},
																"nativeSrc": "3510:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3510:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3501:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3501:5:9"
																}
															]
														},
														{
															"nativeSrc": "3540:40:9",
															"nodeType": "YulAssignment",
															"src": "3540:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3553:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3553:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3564:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "3564:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3574:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3574:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3560:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3560:3:9"
																		},
																		"nativeSrc": "3560:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3560:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3550:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3550:2:9"
																},
																"nativeSrc": "3550:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3550:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3540:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3540:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3193:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3230:5:9",
														"nodeType": "YulTypedName",
														"src": "3230:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3237:10:9",
														"nodeType": "YulTypedName",
														"src": "3237:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3249:8:9",
														"nodeType": "YulTypedName",
														"src": "3249:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3262:6:9",
														"nodeType": "YulTypedName",
														"src": "3262:6:9",
														"type": ""
													}
												],
												"src": "3193:393:9"
											},
											{
												"body": {
													"nativeSrc": "3624:28:9",
													"nodeType": "YulBlock",
													"src": "3624:28:9",
													"statements": [
														{
															"nativeSrc": "3634:12:9",
															"nodeType": "YulAssignment",
															"src": "3634:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3641:5:9",
																"nodeType": "YulIdentifier",
																"src": "3641:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3634:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3634:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3592:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3610:5:9",
														"nodeType": "YulTypedName",
														"src": "3610:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3620:3:9",
														"nodeType": "YulTypedName",
														"src": "3620:3:9",
														"type": ""
													}
												],
												"src": "3592:60:9"
											},
											{
												"body": {
													"nativeSrc": "3718:82:9",
													"nodeType": "YulBlock",
													"src": "3718:82:9",
													"statements": [
														{
															"nativeSrc": "3728:66:9",
															"nodeType": "YulAssignment",
															"src": "3728:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3786:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3786:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3768:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3768:17:9"
																				},
																				"nativeSrc": "3768:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3768:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3759:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "3759:8:9"
																		},
																		"nativeSrc": "3759:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3759:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3741:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3741:17:9"
																},
																"nativeSrc": "3741:53:9",
																"nodeType": "YulFunctionCall",
																"src": "3741:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3728:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3728:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3658:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3698:5:9",
														"nodeType": "YulTypedName",
														"src": "3698:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3708:9:9",
														"nodeType": "YulTypedName",
														"src": "3708:9:9",
														"type": ""
													}
												],
												"src": "3658:142:9"
											},
											{
												"body": {
													"nativeSrc": "3853:28:9",
													"nodeType": "YulBlock",
													"src": "3853:28:9",
													"statements": [
														{
															"nativeSrc": "3863:12:9",
															"nodeType": "YulAssignment",
															"src": "3863:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3870:5:9",
																"nodeType": "YulIdentifier",
																"src": "3870:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3863:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3863:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3806:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3839:5:9",
														"nodeType": "YulTypedName",
														"src": "3839:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3849:3:9",
														"nodeType": "YulTypedName",
														"src": "3849:3:9",
														"type": ""
													}
												],
												"src": "3806:75:9"
											},
											{
												"body": {
													"nativeSrc": "3963:193:9",
													"nodeType": "YulBlock",
													"src": "3963:193:9",
													"statements": [
														{
															"nativeSrc": "3973:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3973:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4028:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "4028:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3997:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3997:30:9"
																},
																"nativeSrc": "3997:39:9",
																"nodeType": "YulFunctionCall",
																"src": "3997:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3977:16:9",
																	"nodeType": "YulTypedName",
																	"src": "3977:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4052:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4052:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4092:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "4092:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4086:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4086:5:9"
																				},
																				"nativeSrc": "4086:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4086:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4099:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4099:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "4131:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "4131:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "4107:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "4107:23:9"
																				},
																				"nativeSrc": "4107:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4107:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "4058:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "4058:27:9"
																		},
																		"nativeSrc": "4058:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4058:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4045:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:9"
																},
																"nativeSrc": "4045:105:9",
																"nodeType": "YulFunctionCall",
																"src": "4045:105:9"
															},
															"nativeSrc": "4045:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "4045:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3887:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3940:4:9",
														"nodeType": "YulTypedName",
														"src": "3940:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3946:6:9",
														"nodeType": "YulTypedName",
														"src": "3946:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3954:7:9",
														"nodeType": "YulTypedName",
														"src": "3954:7:9",
														"type": ""
													}
												],
												"src": "3887:269:9"
											},
											{
												"body": {
													"nativeSrc": "4211:24:9",
													"nodeType": "YulBlock",
													"src": "4211:24:9",
													"statements": [
														{
															"nativeSrc": "4221:8:9",
															"nodeType": "YulAssignment",
															"src": "4221:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4228:1:9",
																"nodeType": "YulLiteral",
																"src": "4228:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4221:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4221:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4162:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4207:3:9",
														"nodeType": "YulTypedName",
														"src": "4207:3:9",
														"type": ""
													}
												],
												"src": "4162:73:9"
											},
											{
												"body": {
													"nativeSrc": "4294:136:9",
													"nodeType": "YulBlock",
													"src": "4294:136:9",
													"statements": [
														{
															"nativeSrc": "4304:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4304:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4318:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "4318:30:9"
																},
																"nativeSrc": "4318:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4318:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4308:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4308:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4403:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4403:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4409:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4409:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4417:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4417:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4359:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4359:43:9"
																},
																"nativeSrc": "4359:65:9",
																"nodeType": "YulFunctionCall",
																"src": "4359:65:9"
															},
															"nativeSrc": "4359:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "4359:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4241:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4280:4:9",
														"nodeType": "YulTypedName",
														"src": "4280:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4286:6:9",
														"nodeType": "YulTypedName",
														"src": "4286:6:9",
														"type": ""
													}
												],
												"src": "4241:189:9"
											},
											{
												"body": {
													"nativeSrc": "4486:136:9",
													"nodeType": "YulBlock",
													"src": "4486:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4553:63:9",
																"nodeType": "YulBlock",
																"src": "4553:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4597:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4597:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4604:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4604:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4567:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "4567:29:9"
																			},
																			"nativeSrc": "4567:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4567:39:9"
																		},
																		"nativeSrc": "4567:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4567:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4506:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4506:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4513:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4513:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4503:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4503:2:9"
																},
																"nativeSrc": "4503:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4503:14:9"
															},
															"nativeSrc": "4496:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4518:26:9",
																"nodeType": "YulBlock",
																"src": "4518:26:9",
																"statements": [
																	{
																		"nativeSrc": "4520:22:9",
																		"nodeType": "YulAssignment",
																		"src": "4520:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4533:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4533:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4540:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4540:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4529:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4529:3:9"
																			},
																			"nativeSrc": "4529:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4529:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4520:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4520:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4500:2:9",
																"nodeType": "YulBlock",
																"src": "4500:2:9",
																"statements": []
															},
															"src": "4496:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4436:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4474:5:9",
														"nodeType": "YulTypedName",
														"src": "4474:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4481:3:9",
														"nodeType": "YulTypedName",
														"src": "4481:3:9",
														"type": ""
													}
												],
												"src": "4436:186:9"
											},
											{
												"body": {
													"nativeSrc": "4707:464:9",
													"nodeType": "YulBlock",
													"src": "4707:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4733:431:9",
																"nodeType": "YulBlock",
																"src": "4733:431:9",
																"statements": [
																	{
																		"nativeSrc": "4747:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4747:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4795:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4795:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4763:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "4763:31:9"
																			},
																			"nativeSrc": "4763:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4763:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4751:8:9",
																				"nodeType": "YulTypedName",
																				"src": "4751:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4814:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4814:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4837:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "4837:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4865:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "4865:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4847:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "4847:17:9"
																					},
																					"nativeSrc": "4847:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4847:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4833:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4833:3:9"
																			},
																			"nativeSrc": "4833:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4833:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4818:11:9",
																				"nodeType": "YulTypedName",
																				"src": "4818:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5034:27:9",
																			"nodeType": "YulBlock",
																			"src": "5034:27:9",
																			"statements": [
																				{
																					"nativeSrc": "5036:23:9",
																					"nodeType": "YulAssignment",
																					"src": "5036:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "5051:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "5051:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5036:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "5036:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5018:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5018:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5030:2:9",
																					"nodeType": "YulLiteral",
																					"src": "5030:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5015:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "5015:2:9"
																			},
																			"nativeSrc": "5015:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5015:18:9"
																		},
																		"nativeSrc": "5012:49:9",
																		"nodeType": "YulIf",
																		"src": "5012:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "5103:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "5103:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "5120:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "5120:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5148:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5148:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "5130:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "5130:17:9"
																							},
																							"nativeSrc": "5130:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5130:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5116:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5116:3:9"
																					},
																					"nativeSrc": "5116:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5116:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "5074:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "5074:28:9"
																			},
																			"nativeSrc": "5074:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5074:80:9"
																		},
																		"nativeSrc": "5074:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5074:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4724:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4724:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4729:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4729:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4721:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4721:2:9"
																},
																"nativeSrc": "4721:11:9",
																"nodeType": "YulFunctionCall",
																"src": "4721:11:9"
															},
															"nativeSrc": "4718:446:9",
															"nodeType": "YulIf",
															"src": "4718:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4628:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4683:5:9",
														"nodeType": "YulTypedName",
														"src": "4683:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4690:3:9",
														"nodeType": "YulTypedName",
														"src": "4690:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4695:10:9",
														"nodeType": "YulTypedName",
														"src": "4695:10:9",
														"type": ""
													}
												],
												"src": "4628:543:9"
											},
											{
												"body": {
													"nativeSrc": "5240:54:9",
													"nodeType": "YulBlock",
													"src": "5240:54:9",
													"statements": [
														{
															"nativeSrc": "5250:37:9",
															"nodeType": "YulAssignment",
															"src": "5250:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5275:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5275:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5281:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5281:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5271:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5271:3:9"
																},
																"nativeSrc": "5271:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5271:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5250:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "5250:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5177:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5215:4:9",
														"nodeType": "YulTypedName",
														"src": "5215:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5221:5:9",
														"nodeType": "YulTypedName",
														"src": "5221:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5231:8:9",
														"nodeType": "YulTypedName",
														"src": "5231:8:9",
														"type": ""
													}
												],
												"src": "5177:117:9"
											},
											{
												"body": {
													"nativeSrc": "5351:118:9",
													"nodeType": "YulBlock",
													"src": "5351:118:9",
													"statements": [
														{
															"nativeSrc": "5361:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5361:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5410:1:9",
																						"nodeType": "YulLiteral",
																						"src": "5410:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5413:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5413:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5406:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5406:3:9"
																				},
																				"nativeSrc": "5406:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5406:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5425:1:9",
																						"nodeType": "YulLiteral",
																						"src": "5425:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5421:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5421:3:9"
																				},
																				"nativeSrc": "5421:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5421:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5377:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "5377:28:9"
																		},
																		"nativeSrc": "5377:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5377:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5373:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:9"
																},
																"nativeSrc": "5373:56:9",
																"nodeType": "YulFunctionCall",
																"src": "5373:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5365:4:9",
																	"nodeType": "YulTypedName",
																	"src": "5365:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5438:25:9",
															"nodeType": "YulAssignment",
															"src": "5438:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5452:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5452:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5458:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5458:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5448:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5448:3:9"
																},
																"nativeSrc": "5448:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5448:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5438:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5438:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5300:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5328:4:9",
														"nodeType": "YulTypedName",
														"src": "5328:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5334:5:9",
														"nodeType": "YulTypedName",
														"src": "5334:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5344:6:9",
														"nodeType": "YulTypedName",
														"src": "5344:6:9",
														"type": ""
													}
												],
												"src": "5300:169:9"
											},
											{
												"body": {
													"nativeSrc": "5555:214:9",
													"nodeType": "YulBlock",
													"src": "5555:214:9",
													"statements": [
														{
															"nativeSrc": "5688:37:9",
															"nodeType": "YulAssignment",
															"src": "5688:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5715:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5715:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5721:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5721:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5696:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "5696:18:9"
																},
																"nativeSrc": "5696:29:9",
																"nodeType": "YulFunctionCall",
																"src": "5696:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5688:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5688:4:9"
																}
															]
														},
														{
															"nativeSrc": "5734:29:9",
															"nodeType": "YulAssignment",
															"src": "5734:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5745:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5745:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5755:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5755:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5758:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5758:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5751:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5751:3:9"
																		},
																		"nativeSrc": "5751:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5751:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5742:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5742:2:9"
																},
																"nativeSrc": "5742:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5742:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5734:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5734:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5474:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5536:4:9",
														"nodeType": "YulTypedName",
														"src": "5536:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5542:3:9",
														"nodeType": "YulTypedName",
														"src": "5542:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5550:4:9",
														"nodeType": "YulTypedName",
														"src": "5550:4:9",
														"type": ""
													}
												],
												"src": "5474:295:9"
											},
											{
												"body": {
													"nativeSrc": "5866:1303:9",
													"nodeType": "YulBlock",
													"src": "5866:1303:9",
													"statements": [
														{
															"nativeSrc": "5877:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5877:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5924:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5924:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5891:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "5891:32:9"
																},
																"nativeSrc": "5891:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5891:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5881:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5881:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6013:22:9",
																"nodeType": "YulBlock",
																"src": "6013:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6015:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6015:16:9"
																			},
																			"nativeSrc": "6015:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6015:18:9"
																		},
																		"nativeSrc": "6015:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6015:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5985:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5985:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5993:18:9",
																		"nodeType": "YulLiteral",
																		"src": "5993:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5982:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5982:2:9"
																},
																"nativeSrc": "5982:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5982:30:9"
															},
															"nativeSrc": "5979:56:9",
															"nodeType": "YulIf",
															"src": "5979:56:9"
														},
														{
															"nativeSrc": "6045:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6045:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "6091:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6091:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "6085:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "6085:5:9"
																		},
																		"nativeSrc": "6085:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "6059:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "6059:25:9"
																},
																"nativeSrc": "6059:38:9",
																"nodeType": "YulFunctionCall",
																"src": "6059:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "6049:6:9",
																	"nodeType": "YulTypedName",
																	"src": "6049:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6190:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6190:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6196:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6196:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6204:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6204:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "6144:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "6144:45:9"
																},
																"nativeSrc": "6144:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6144:67:9"
															},
															"nativeSrc": "6144:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "6144:67:9"
														},
														{
															"nativeSrc": "6221:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6221:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "6238:1:9",
																"nodeType": "YulLiteral",
																"src": "6238:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6225:9:9",
																	"nodeType": "YulTypedName",
																	"src": "6225:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6249:17:9",
															"nodeType": "YulAssignment",
															"src": "6249:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "6262:4:9",
																"nodeType": "YulLiteral",
																"src": "6262:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6249:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "6249:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6313:611:9",
																		"nodeType": "YulBlock",
																		"src": "6313:611:9",
																		"statements": [
																			{
																				"nativeSrc": "6327:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6327:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6346:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "6346:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6358:4:9",
																									"nodeType": "YulLiteral",
																									"src": "6358:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6354:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "6354:3:9"
																							},
																							"nativeSrc": "6354:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6354:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6342:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6342:3:9"
																					},
																					"nativeSrc": "6342:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6342:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6331:7:9",
																						"nodeType": "YulTypedName",
																						"src": "6331:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6378:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6378:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6424:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6424:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6392:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "6392:31:9"
																					},
																					"nativeSrc": "6392:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6392:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6382:6:9",
																						"nodeType": "YulTypedName",
																						"src": "6382:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6442:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6442:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6451:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6451:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6446:1:9",
																						"nodeType": "YulTypedName",
																						"src": "6446:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6510:163:9",
																					"nodeType": "YulBlock",
																					"src": "6510:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6535:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6535:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6553:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "6553:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6558:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "6558:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6549:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "6549:3:9"
																												},
																												"nativeSrc": "6549:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "6549:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6543:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "6543:5:9"
																										},
																										"nativeSrc": "6543:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6543:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6528:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6528:6:9"
																								},
																								"nativeSrc": "6528:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6528:42:9"
																							},
																							"nativeSrc": "6528:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "6528:42:9"
																						},
																						{
																							"nativeSrc": "6587:24:9",
																							"nodeType": "YulAssignment",
																							"src": "6587:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6601:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6601:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6609:1:9",
																										"nodeType": "YulLiteral",
																										"src": "6609:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6597:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6597:3:9"
																								},
																								"nativeSrc": "6597:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6597:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6587:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6587:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6628:31:9",
																							"nodeType": "YulAssignment",
																							"src": "6628:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6645:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "6645:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6656:2:9",
																										"nodeType": "YulLiteral",
																										"src": "6656:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6641:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6641:3:9"
																								},
																								"nativeSrc": "6641:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6641:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6628:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "6628:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6476:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "6476:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6479:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "6479:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6473:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "6473:2:9"
																					},
																					"nativeSrc": "6473:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6473:14:9"
																				},
																				"nativeSrc": "6465:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6488:21:9",
																					"nodeType": "YulBlock",
																					"src": "6488:21:9",
																					"statements": [
																						{
																							"nativeSrc": "6490:17:9",
																							"nodeType": "YulAssignment",
																							"src": "6490:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6499:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "6499:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6502:4:9",
																										"nodeType": "YulLiteral",
																										"src": "6502:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6495:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6495:3:9"
																								},
																								"nativeSrc": "6495:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6495:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6490:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "6490:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6469:3:9",
																					"nodeType": "YulBlock",
																					"src": "6469:3:9",
																					"statements": []
																				},
																				"src": "6465:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "6709:156:9",
																					"nodeType": "YulBlock",
																					"src": "6709:156:9",
																					"statements": [
																						{
																							"nativeSrc": "6727:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6727:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6754:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6754:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6759:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6759:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6750:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6750:3:9"
																										},
																										"nativeSrc": "6750:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6750:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6744:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6744:5:9"
																								},
																								"nativeSrc": "6744:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6744:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6731:9:9",
																									"nodeType": "YulTypedName",
																									"src": "6731:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6794:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6794:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6821:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6821:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6836:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "6836:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6844:4:9",
																														"nodeType": "YulLiteral",
																														"src": "6844:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6832:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "6832:3:9"
																												},
																												"nativeSrc": "6832:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "6832:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6802:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "6802:18:9"
																										},
																										"nativeSrc": "6802:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6802:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6787:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6787:6:9"
																								},
																								"nativeSrc": "6787:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6787:64:9"
																							},
																							"nativeSrc": "6787:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "6787:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6692:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "6692:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6701:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "6701:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6689:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "6689:2:9"
																					},
																					"nativeSrc": "6689:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6689:19:9"
																				},
																				"nativeSrc": "6686:179:9",
																				"nodeType": "YulIf",
																				"src": "6686:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6885:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6885:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6899:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "6899:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6907:1:9",
																											"nodeType": "YulLiteral",
																											"src": "6907:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6895:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "6895:3:9"
																									},
																									"nativeSrc": "6895:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "6895:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6911:1:9",
																									"nodeType": "YulLiteral",
																									"src": "6911:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6891:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "6891:3:9"
																							},
																							"nativeSrc": "6891:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6891:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6878:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6878:6:9"
																					},
																					"nativeSrc": "6878:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6878:36:9"
																				},
																				"nativeSrc": "6878:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6878:36:9"
																			}
																		]
																	},
																	"nativeSrc": "6306:618:9",
																	"nodeType": "YulCase",
																	"src": "6306:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6311:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6311:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6941:222:9",
																		"nodeType": "YulBlock",
																		"src": "6941:222:9",
																		"statements": [
																			{
																				"nativeSrc": "6955:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6955:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6968:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6968:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6959:5:9",
																						"nodeType": "YulTypedName",
																						"src": "6959:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6992:67:9",
																					"nodeType": "YulBlock",
																					"src": "6992:67:9",
																					"statements": [
																						{
																							"nativeSrc": "7010:35:9",
																							"nodeType": "YulAssignment",
																							"src": "7010:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7029:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "7029:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7034:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "7034:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7025:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "7025:3:9"
																										},
																										"nativeSrc": "7025:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "7025:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7019:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "7019:5:9"
																								},
																								"nativeSrc": "7019:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7019:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7010:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "7010:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6985:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6985:6:9"
																				},
																				"nativeSrc": "6982:77:9",
																				"nodeType": "YulIf",
																				"src": "6982:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7079:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "7079:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7138:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "7138:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7145:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7145:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7085:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "7085:52:9"
																							},
																							"nativeSrc": "7085:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7085:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7072:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7072:6:9"
																					},
																					"nativeSrc": "7072:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7072:81:9"
																				},
																				"nativeSrc": "7072:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "7072:81:9"
																			}
																		]
																	},
																	"nativeSrc": "6933:230:9",
																	"nodeType": "YulCase",
																	"src": "6933:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6286:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6286:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6294:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6294:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6283:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6283:2:9"
																},
																"nativeSrc": "6283:14:9",
																"nodeType": "YulFunctionCall",
																"src": "6283:14:9"
															},
															"nativeSrc": "6276:887:9",
															"nodeType": "YulSwitch",
															"src": "6276:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5774:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5855:4:9",
														"nodeType": "YulTypedName",
														"src": "5855:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5861:3:9",
														"nodeType": "YulTypedName",
														"src": "5861:3:9",
														"type": ""
													}
												],
												"src": "5774:1395:9"
											},
											{
												"body": {
													"nativeSrc": "7240:53:9",
													"nodeType": "YulBlock",
													"src": "7240:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7257:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7257:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7280:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7280:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7262:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "7262:17:9"
																		},
																		"nativeSrc": "7262:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7262:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7250:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:9"
																},
																"nativeSrc": "7250:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7250:37:9"
															},
															"nativeSrc": "7250:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7250:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7175:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7228:5:9",
														"nodeType": "YulTypedName",
														"src": "7228:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7235:3:9",
														"nodeType": "YulTypedName",
														"src": "7235:3:9",
														"type": ""
													}
												],
												"src": "7175:118:9"
											},
											{
												"body": {
													"nativeSrc": "7397:124:9",
													"nodeType": "YulBlock",
													"src": "7397:124:9",
													"statements": [
														{
															"nativeSrc": "7407:26:9",
															"nodeType": "YulAssignment",
															"src": "7407:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7419:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7419:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7430:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7430:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7415:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7415:3:9"
																},
																"nativeSrc": "7415:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7415:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7407:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7407:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7487:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7487:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7500:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7500:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7511:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7511:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7496:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7496:3:9"
																		},
																		"nativeSrc": "7496:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7496:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7443:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7443:43:9"
																},
																"nativeSrc": "7443:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7443:71:9"
															},
															"nativeSrc": "7443:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7443:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7299:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7369:9:9",
														"nodeType": "YulTypedName",
														"src": "7369:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7381:6:9",
														"nodeType": "YulTypedName",
														"src": "7381:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7392:4:9",
														"nodeType": "YulTypedName",
														"src": "7392:4:9",
														"type": ""
													}
												],
												"src": "7299:222:9"
											},
											{
												"body": {
													"nativeSrc": "7623:73:9",
													"nodeType": "YulBlock",
													"src": "7623:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7640:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7640:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7645:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7645:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7633:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7633:6:9"
																},
																"nativeSrc": "7633:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7633:19:9"
															},
															"nativeSrc": "7633:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "7633:19:9"
														},
														{
															"nativeSrc": "7661:29:9",
															"nodeType": "YulAssignment",
															"src": "7661:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7680:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7680:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7685:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7685:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7676:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7676:3:9"
																},
																"nativeSrc": "7676:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7676:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7661:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "7661:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7527:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7595:3:9",
														"nodeType": "YulTypedName",
														"src": "7595:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7600:6:9",
														"nodeType": "YulTypedName",
														"src": "7600:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7611:11:9",
														"nodeType": "YulTypedName",
														"src": "7611:11:9",
														"type": ""
													}
												],
												"src": "7527:169:9"
											},
											{
												"body": {
													"nativeSrc": "7808:64:9",
													"nodeType": "YulBlock",
													"src": "7808:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7830:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7830:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7838:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7838:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7826:3:9"
																		},
																		"nativeSrc": "7826:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7826:14:9"
																	},
																	{
																		"hexValue": "496e76616c696420634254432061646472657373",
																		"kind": "string",
																		"nativeSrc": "7842:22:9",
																		"nodeType": "YulLiteral",
																		"src": "7842:22:9",
																		"type": "",
																		"value": "Invalid cBTC address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7819:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7819:6:9"
																},
																"nativeSrc": "7819:46:9",
																"nodeType": "YulFunctionCall",
																"src": "7819:46:9"
															},
															"nativeSrc": "7819:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "7819:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e",
												"nativeSrc": "7702:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7800:6:9",
														"nodeType": "YulTypedName",
														"src": "7800:6:9",
														"type": ""
													}
												],
												"src": "7702:170:9"
											},
											{
												"body": {
													"nativeSrc": "8024:220:9",
													"nodeType": "YulBlock",
													"src": "8024:220:9",
													"statements": [
														{
															"nativeSrc": "8034:74:9",
															"nodeType": "YulAssignment",
															"src": "8034:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8100:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8100:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8105:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8105:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8041:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8041:58:9"
																},
																"nativeSrc": "8041:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8041:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8034:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8034:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8206:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8206:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e",
																	"nativeSrc": "8117:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8117:88:9"
																},
																"nativeSrc": "8117:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8117:93:9"
															},
															"nativeSrc": "8117:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8117:93:9"
														},
														{
															"nativeSrc": "8219:19:9",
															"nodeType": "YulAssignment",
															"src": "8219:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8230:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8230:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8235:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8235:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8226:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8226:3:9"
																},
																"nativeSrc": "8226:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8226:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8219:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8219:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7878:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8012:3:9",
														"nodeType": "YulTypedName",
														"src": "8012:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8020:3:9",
														"nodeType": "YulTypedName",
														"src": "8020:3:9",
														"type": ""
													}
												],
												"src": "7878:366:9"
											},
											{
												"body": {
													"nativeSrc": "8421:248:9",
													"nodeType": "YulBlock",
													"src": "8421:248:9",
													"statements": [
														{
															"nativeSrc": "8431:26:9",
															"nodeType": "YulAssignment",
															"src": "8431:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8443:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8443:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8454:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8454:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8439:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8439:3:9"
																},
																"nativeSrc": "8439:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8439:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8431:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8431:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8478:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8478:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8489:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8489:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8474:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8474:3:9"
																		},
																		"nativeSrc": "8474:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8474:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8497:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8497:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8503:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8503:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8493:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8493:3:9"
																		},
																		"nativeSrc": "8493:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8493:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8467:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8467:6:9"
																},
																"nativeSrc": "8467:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8467:47:9"
															},
															"nativeSrc": "8467:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8467:47:9"
														},
														{
															"nativeSrc": "8523:139:9",
															"nodeType": "YulAssignment",
															"src": "8523:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8657:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8657:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8531:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8531:124:9"
																},
																"nativeSrc": "8531:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8531:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8523:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8523:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8250:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8401:9:9",
														"nodeType": "YulTypedName",
														"src": "8401:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8416:4:9",
														"nodeType": "YulTypedName",
														"src": "8416:4:9",
														"type": ""
													}
												],
												"src": "8250:419:9"
											},
											{
												"body": {
													"nativeSrc": "8781:58:9",
													"nodeType": "YulBlock",
													"src": "8781:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8803:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8803:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8811:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8811:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8799:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8799:3:9"
																		},
																		"nativeSrc": "8799:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8799:14:9"
																	},
																	{
																		"hexValue": "496e76616c6964206f7261636c65",
																		"kind": "string",
																		"nativeSrc": "8815:16:9",
																		"nodeType": "YulLiteral",
																		"src": "8815:16:9",
																		"type": "",
																		"value": "Invalid oracle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8792:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:9"
																},
																"nativeSrc": "8792:40:9",
																"nodeType": "YulFunctionCall",
																"src": "8792:40:9"
															},
															"nativeSrc": "8792:40:9",
															"nodeType": "YulExpressionStatement",
															"src": "8792:40:9"
														}
													]
												},
												"name": "store_literal_in_memory_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb",
												"nativeSrc": "8675:164:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8773:6:9",
														"nodeType": "YulTypedName",
														"src": "8773:6:9",
														"type": ""
													}
												],
												"src": "8675:164:9"
											},
											{
												"body": {
													"nativeSrc": "8991:220:9",
													"nodeType": "YulBlock",
													"src": "8991:220:9",
													"statements": [
														{
															"nativeSrc": "9001:74:9",
															"nodeType": "YulAssignment",
															"src": "9001:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9067:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9067:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9072:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9072:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9008:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9008:58:9"
																},
																"nativeSrc": "9008:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9008:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9001:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9001:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9173:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9173:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb",
																	"nativeSrc": "9084:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9084:88:9"
																},
																"nativeSrc": "9084:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9084:93:9"
															},
															"nativeSrc": "9084:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9084:93:9"
														},
														{
															"nativeSrc": "9186:19:9",
															"nodeType": "YulAssignment",
															"src": "9186:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9197:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9197:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9202:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9202:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9193:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9193:3:9"
																},
																"nativeSrc": "9193:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9193:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9186:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9186:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8845:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8979:3:9",
														"nodeType": "YulTypedName",
														"src": "8979:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8987:3:9",
														"nodeType": "YulTypedName",
														"src": "8987:3:9",
														"type": ""
													}
												],
												"src": "8845:366:9"
											},
											{
												"body": {
													"nativeSrc": "9388:248:9",
													"nodeType": "YulBlock",
													"src": "9388:248:9",
													"statements": [
														{
															"nativeSrc": "9398:26:9",
															"nodeType": "YulAssignment",
															"src": "9398:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9410:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9410:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9421:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9421:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9406:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9406:3:9"
																},
																"nativeSrc": "9406:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9406:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9398:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9398:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9445:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9445:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9456:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9456:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9441:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9441:3:9"
																		},
																		"nativeSrc": "9441:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9441:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9464:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9464:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9470:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9470:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9460:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9460:3:9"
																		},
																		"nativeSrc": "9460:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9460:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9434:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9434:6:9"
																},
																"nativeSrc": "9434:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9434:47:9"
															},
															"nativeSrc": "9434:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9434:47:9"
														},
														{
															"nativeSrc": "9490:139:9",
															"nodeType": "YulAssignment",
															"src": "9490:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9624:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9624:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9498:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9498:124:9"
																},
																"nativeSrc": "9498:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9498:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9490:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9490:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9217:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9368:9:9",
														"nodeType": "YulTypedName",
														"src": "9368:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9383:4:9",
														"nodeType": "YulTypedName",
														"src": "9383:4:9",
														"type": ""
													}
												],
												"src": "9217:419:9"
											},
											{
												"body": {
													"nativeSrc": "9748:65:9",
													"nodeType": "YulBlock",
													"src": "9748:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9770:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9770:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9778:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9778:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9766:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9766:3:9"
																		},
																		"nativeSrc": "9766:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9766:14:9"
																	},
																	{
																		"hexValue": "526174696f206d757374206265203e3d2031303025",
																		"kind": "string",
																		"nativeSrc": "9782:23:9",
																		"nodeType": "YulLiteral",
																		"src": "9782:23:9",
																		"type": "",
																		"value": "Ratio must be >= 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9759:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9759:6:9"
																},
																"nativeSrc": "9759:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9759:47:9"
															},
															"nativeSrc": "9759:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9759:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94",
												"nativeSrc": "9642:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9740:6:9",
														"nodeType": "YulTypedName",
														"src": "9740:6:9",
														"type": ""
													}
												],
												"src": "9642:171:9"
											},
											{
												"body": {
													"nativeSrc": "9965:220:9",
													"nodeType": "YulBlock",
													"src": "9965:220:9",
													"statements": [
														{
															"nativeSrc": "9975:74:9",
															"nodeType": "YulAssignment",
															"src": "9975:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10041:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10041:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10046:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10046:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9982:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9982:58:9"
																},
																"nativeSrc": "9982:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9982:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9975:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9975:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10147:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10147:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94",
																	"nativeSrc": "10058:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10058:88:9"
																},
																"nativeSrc": "10058:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10058:93:9"
															},
															"nativeSrc": "10058:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10058:93:9"
														},
														{
															"nativeSrc": "10160:19:9",
															"nodeType": "YulAssignment",
															"src": "10160:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10171:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10171:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10176:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10176:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10167:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10167:3:9"
																},
																"nativeSrc": "10167:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10167:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10160:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10160:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9819:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9953:3:9",
														"nodeType": "YulTypedName",
														"src": "9953:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9961:3:9",
														"nodeType": "YulTypedName",
														"src": "9961:3:9",
														"type": ""
													}
												],
												"src": "9819:366:9"
											},
											{
												"body": {
													"nativeSrc": "10362:248:9",
													"nodeType": "YulBlock",
													"src": "10362:248:9",
													"statements": [
														{
															"nativeSrc": "10372:26:9",
															"nodeType": "YulAssignment",
															"src": "10372:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10384:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10384:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10395:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10395:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10380:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10380:3:9"
																},
																"nativeSrc": "10380:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10380:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10372:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10372:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10419:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10419:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10430:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10430:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10415:3:9"
																		},
																		"nativeSrc": "10415:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10415:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10438:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10438:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10444:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10444:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10434:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10434:3:9"
																		},
																		"nativeSrc": "10434:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10434:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10408:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10408:6:9"
																},
																"nativeSrc": "10408:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10408:47:9"
															},
															"nativeSrc": "10408:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10408:47:9"
														},
														{
															"nativeSrc": "10464:139:9",
															"nodeType": "YulAssignment",
															"src": "10464:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10598:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10598:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10472:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10472:124:9"
																},
																"nativeSrc": "10472:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10472:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10464:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10464:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10191:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10342:9:9",
														"nodeType": "YulTypedName",
														"src": "10342:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10357:4:9",
														"nodeType": "YulTypedName",
														"src": "10357:4:9",
														"type": ""
													}
												],
												"src": "10191:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid cBTC address\")\n\n    }\n\n    function abi_encode_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid oracle\")\n\n    }\n\n    function abi_encode_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ratio must be >= 100%\")\n\n    }\n\n    function abi_encode_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161325d38038061325d83398181016040528101906100319190610459565b336040518060400160405280600a81526020017f43697472656120555344000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f635553440000000000000000000000000000000000000000000000000000000081525081600390816100ad91906106ee565b5080600490816100bd91906106ee565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012791906107cc565b60405180910390fd5b61013f8161030560201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036101ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a59061083f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361021c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610213906108a7565b60405180910390fd5b670de0b6b3a7640000831015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e9061090f565b60405180910390fd5b8360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826008819055508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060098190555042600a819055505050505061092d565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103f5826103cc565b9050919050565b610405816103eb565b811461040f575f80fd5b50565b5f81519050610420816103fc565b92915050565b5f819050919050565b61043881610426565b8114610442575f80fd5b50565b5f815190506104538161042f565b92915050565b5f805f8060808587031215610471576104706103c8565b5b5f61047e87828801610412565b945050602061048f87828801610445565b93505060406104a087828801610412565b92505060606104b187828801610445565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061053857607f821691505b60208210810361054b5761054a6104f4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105ad7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610572565b6105b78683610572565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6105f26105ed6105e884610426565b6105cf565b610426565b9050919050565b5f819050919050565b61060b836105d8565b61061f610617826105f9565b84845461057e565b825550505050565b5f90565b610633610627565b61063e818484610602565b505050565b5b81811015610661576106565f8261062b565b600181019050610644565b5050565b601f8211156106a65761067781610551565b61068084610563565b8101602085101561068f578190505b6106a361069b85610563565b830182610643565b50505b505050565b5f82821c905092915050565b5f6106c65f19846008026106ab565b1980831691505092915050565b5f6106de83836106b7565b9150826002028217905092915050565b6106f7826104bd565b67ffffffffffffffff8111156107105761070f6104c7565b5b61071a8254610521565b610725828285610665565b5f60209050601f831160018114610756575f8415610744578287015190505b61074e85826106d3565b8655506107b5565b601f19841661076486610551565b5f5b8281101561078b57848901518255600182019150602085019450602081019050610766565b868310156107a857848901516107a4601f8916826106b7565b8355505b6001600288020188555050505b505050505050565b6107c6816103eb565b82525050565b5f6020820190506107df5f8301846107bd565b92915050565b5f82825260208201905092915050565b7f496e76616c6964206342544320616464726573730000000000000000000000005f82015250565b5f6108296014836107e5565b9150610834826107f5565b602082019050919050565b5f6020820190508181035f8301526108568161081d565b9050919050565b7f496e76616c6964206f7261636c650000000000000000000000000000000000005f82015250565b5f610891600e836107e5565b915061089c8261085d565b602082019050919050565b5f6020820190508181035f8301526108be81610885565b9050919050565b7f526174696f206d757374206265203e3d203130302500000000000000000000005f82015250565b5f6108f96015836107e5565b9150610904826108c5565b602082019050919050565b5f6020820190508181035f830152610926816108ed565b9050919050565b6129238061093a5f395ff3fe608060405234801561000f575f80fd5b50600436106101c2575f3560e01c80638da5cb5b116100f7578063bcbaf48711610095578063dd62ed3e1161006f578063dd62ed3e146104d0578063ea629db014610500578063f2fde38b1461051c578063fb4ca35b14610538576101c2565b8063bcbaf48714610478578063cd377c5314610494578063d7e72708146104b2576101c2565b8063a6afed95116100d1578063a6afed95146103f0578063a9059cbb146103fa578063b4eae1cb1461042a578063b6f7132f14610448576101c2565b80638da5cb5b1461039857806395d89b41146103b6578063a5d5db0c146103d4576101c2565b8063350c35e9116101645780636060663e1161013e5780636060663e1461032457806370a0823114610340578063715018a6146103705780637dc0d1d01461037a576101c2565b8063350c35e9146102ba578063361416e1146102d65780634e8d048b146102f4576101c2565b80631455b3ab116101a05780631455b3ab1461023257806318160ddd1461024e57806323b872dd1461026c578063313ce5671461029c576101c2565b806306fdde03146101c6578063095ea7b3146101e45780630ae8c4dc14610214575b5f80fd5b6101ce610554565b6040516101db9190611f76565b60405180910390f35b6101fe60048036038101906101f99190612027565b6105e4565b60405161020b919061207f565b60405180910390f35b61021c610606565b60405161022991906120f3565b60405180910390f35b61024c60048036038101906102479190612027565b61062b565b005b6102566106da565b604051610263919061211b565b60405180910390f35b61028660048036038101906102819190612134565b6106e3565b604051610293919061207f565b60405180910390f35b6102a4610711565b6040516102b1919061219f565b60405180910390f35b6102d460048036038101906102cf9190612027565b610719565b005b6102de610b0d565b6040516102eb919061211b565b60405180910390f35b61030e600480360381019061030991906121b8565b610b13565b60405161031b919061211b565b60405180910390f35b61033e600480360381019061033991906121e3565b610b28565b005b61035a600480360381019061035591906121b8565b610b85565b604051610367919061211b565b60405180910390f35b610378610bca565b005b610382610bdd565b60405161038f919061222e565b60405180910390f35b6103a0610c02565b6040516103ad9190612256565b60405180910390f35b6103be610c2a565b6040516103cb9190611f76565b60405180910390f35b6103ee60048036038101906103e99190612027565b610cba565b005b6103f8610e7e565b005b610414600480360381019061040f9190612027565b610f13565b604051610421919061207f565b60405180910390f35b610432610f35565b60405161043f919061211b565b60405180910390f35b610462600480360381019061045d91906121b8565b610f3b565b60405161046f919061211b565b60405180910390f35b610492600480360381019061048d9190612027565b610f81565b005b61049c6113cd565b6040516104a9919061211b565b60405180910390f35b6104ba6113d6565b6040516104c7919061211b565b60405180910390f35b6104ea60048036038101906104e5919061226f565b6113dc565b6040516104f7919061211b565b60405180910390f35b61051a60048036038101906105159190612027565b61145e565b005b610536600480360381019061053191906121b8565b611646565b005b610552600480360381019061054d91906121e3565b6116ca565b005b606060038054610563906122da565b80601f016020809104026020016040519081016040528092919081815260200182805461058f906122da565b80156105da5780601f106105b1576101008083540402835291602001916105da565b820191905f5260205f20905b8154815290600101906020018083116105bd57829003601f168201915b5050505050905090565b5f806105ee611721565b90506105fb818585611728565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610633610e7e565b8061063d83610b85565b101561067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067590612354565b60405180910390fd5b610688828261173a565b8173ffffffffffffffffffffffffffffffffffffffff167f4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b9369826040516106ce919061211b565b60405180910390a25050565b5f600254905090565b5f806106ed611721565b90506106fa8582856117b9565b61070585858561184b565b60019150509392505050565b5f6012905090565b610721610e7e565b600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548111156107a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610798906123bc565b60405180910390fd5b5f6107ab83610b85565b90505f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e0960065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108299190612256565b602060405180830381865afa158015610844573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061086891906123ee565b90505f670de0b6b3a7640000600854846108829190612446565b61088c91906124b4565b905081670de0b6b3a7640000826108a39190612446565b6108ad91906124b4565b90505f81600b5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054116108fa575f610944565b81600b5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461094391906124e4565b5b905080851115610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098090612587565b60405180910390fd5b84600b5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109d591906124e4565b9250508190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87876040518363ffffffff1660e01b8152600401610a389291906125a5565b6020604051808303815f875af1158015610a54573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a7891906125f6565b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae9061266b565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff167fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d86604051610afd919061211b565b60405180910390a2505050505050565b60095481565b600b602052805f5260405f205f915090505481565b610b3061193b565b670de0b6b3a7640000811015610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b72906126d3565b60405180910390fd5b8060088190555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610bd261193b565b610bdb5f6119c2565b565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610c39906122da565b80601f0160208091040260200160405190810160405280929190818152602001828054610c65906122da565b8015610cb05780601f10610c8757610100808354040283529160200191610cb0565b820191905f5260205f20905b815481529060010190602001808311610c9357829003601f168201915b5050505050905090565b5f8111610cfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf39061273b565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401610d5a93929190612759565b6020604051808303815f875af1158015610d76573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9a91906125f6565b610dd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd09061266b565b60405180910390fd5b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e25919061278e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a135848014282604051610e72919061211b565b60405180910390a25050565b5f600a5442610e8d91906124e4565b90505f81118015610ea457505f610ea26106da565b115b15610f10575f6301e1338082600954610ebd9190612446565b610ec791906124b4565b90505f61271082610ed66106da565b610ee09190612446565b610eea91906124b4565b90505f811115610f0657610f05610eff610c02565b82611a85565b5b42600a8190555050505b50565b5f80610f1d611721565b9050610f2a81858561184b565b600191505092915050565b60085481565b5f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610f89610e7e565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e0960065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016110059190612256565b602060405180830381865afa158015611020573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061104491906123ee565b90505f61105084610b85565b90505f81036110605750506113c9565b5f670de0b6b3a7640000600854836110789190612446565b61108291906124b4565b90505f670de0b6b3a764000084600b5f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110d79190612446565b6110e191906124b4565b9050818110156113c4575f8386116110f957856110fb565b835b90508061110733610b85565b1015611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f9061280b565b60405180910390fd5b61115333308361184b565b61115d308261173a565b5f670de0b6b3a7640000600854836111759190612446565b61117f91906124b4565b905085670de0b6b3a7640000826111969190612446565b6111a091906124b4565b90506064606e826111b19190612446565b6111bb91906124b4565b9050600b5f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481111561124357600b5f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505b80600b5f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461128f91906124e4565b9250508190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016112f29291906125a5565b6020604051808303815f875af115801561130e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061133291906125f6565b611371576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113689061266b565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff167f09c223cfcd8c93e245f558f5f8de755fc0930fd9bc257441155ef5d54a170e0f83836040516113b9929190612829565b60405180910390a250505b505050505b5050565b5f600854905090565b600a5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611466610e7e565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e0960065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016114e29190612256565b602060405180830381865afa1580156114fd573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061152191906123ee565b90505f670de0b6b3a76400006008548461153b9190612446565b61154591906124b4565b905081670de0b6b3a76400008261155c9190612446565b61156691906124b4565b905080600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156115e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115df906123bc565b60405180910390fd5b6115f28484611a85565b3373ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe84604051611638919061211b565b60405180910390a250505050565b61164e61193b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116be575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116b59190612256565b60405180910390fd5b6116c7816119c2565b50565b6116d261193b565b6107d0811115611717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170e9061289a565b60405180910390fd5b8060098190555050565b5f33905090565b6117358383836001611b04565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117aa575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117a19190612256565b60405180910390fd5b6117b5825f83611cd3565b5050565b5f6117c484846113dc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146118455781811015611836578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161182d939291906128b8565b60405180910390fd5b61184484848484035f611b04565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118bb575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016118b29190612256565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361192b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119229190612256565b60405180910390fd5b611936838383611cd3565b505050565b611943611721565b73ffffffffffffffffffffffffffffffffffffffff16611961610c02565b73ffffffffffffffffffffffffffffffffffffffff16146119c057611984611721565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016119b79190612256565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611af5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611aec9190612256565b60405180910390fd5b611b005f8383611cd3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b74575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611b6b9190612256565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611be4575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611bdb9190612256565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611ccd578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611cc4919061211b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d23578060025f828254611d17919061278e565b92505081905550611df1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611dac578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611da3939291906128b8565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e38578060025f8282540392505081905550611e82565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611edf919061211b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611f23578082015181840152602081019050611f08565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611f4882611eec565b611f528185611ef6565b9350611f62818560208601611f06565b611f6b81611f2e565b840191505092915050565b5f6020820190508181035f830152611f8e8184611f3e565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611fc382611f9a565b9050919050565b611fd381611fb9565b8114611fdd575f80fd5b50565b5f81359050611fee81611fca565b92915050565b5f819050919050565b61200681611ff4565b8114612010575f80fd5b50565b5f8135905061202181611ffd565b92915050565b5f806040838503121561203d5761203c611f96565b5b5f61204a85828601611fe0565b925050602061205b85828601612013565b9150509250929050565b5f8115159050919050565b61207981612065565b82525050565b5f6020820190506120925f830184612070565b92915050565b5f819050919050565b5f6120bb6120b66120b184611f9a565b612098565b611f9a565b9050919050565b5f6120cc826120a1565b9050919050565b5f6120dd826120c2565b9050919050565b6120ed816120d3565b82525050565b5f6020820190506121065f8301846120e4565b92915050565b61211581611ff4565b82525050565b5f60208201905061212e5f83018461210c565b92915050565b5f805f6060848603121561214b5761214a611f96565b5b5f61215886828701611fe0565b935050602061216986828701611fe0565b925050604061217a86828701612013565b9150509250925092565b5f60ff82169050919050565b61219981612184565b82525050565b5f6020820190506121b25f830184612190565b92915050565b5f602082840312156121cd576121cc611f96565b5b5f6121da84828501611fe0565b91505092915050565b5f602082840312156121f8576121f7611f96565b5b5f61220584828501612013565b91505092915050565b5f612218826120c2565b9050919050565b6122288161220e565b82525050565b5f6020820190506122415f83018461221f565b92915050565b61225081611fb9565b82525050565b5f6020820190506122695f830184612247565b92915050565b5f806040838503121561228557612284611f96565b5b5f61229285828601611fe0565b92505060206122a385828601611fe0565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122f157607f821691505b602082108103612304576123036122ad565b5b50919050565b7f4e6f7420656e6f756768206355534400000000000000000000000000000000005f82015250565b5f61233e600f83611ef6565b91506123498261230a565b602082019050919050565b5f6020820190508181035f83015261236b81612332565b9050919050565b7f4e6f7420656e6f75676820636f6c6c61746572616c00000000000000000000005f82015250565b5f6123a6601583611ef6565b91506123b182612372565b602082019050919050565b5f6020820190508181035f8301526123d38161239a565b9050919050565b5f815190506123e881611ffd565b92915050565b5f6020828403121561240357612402611f96565b5b5f612410848285016123da565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61245082611ff4565b915061245b83611ff4565b925082820261246981611ff4565b915082820484148315176124805761247f612419565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6124be82611ff4565b91506124c983611ff4565b9250826124d9576124d8612487565b5b828204905092915050565b5f6124ee82611ff4565b91506124f983611ff4565b925082820390508181111561251157612510612419565b5b92915050565b7f5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c5f8201527f697a650000000000000000000000000000000000000000000000000000000000602082015250565b5f612571602383611ef6565b915061257c82612517565b604082019050919050565b5f6020820190508181035f83015261259e81612565565b9050919050565b5f6040820190506125b85f830185612247565b6125c5602083018461210c565b9392505050565b6125d581612065565b81146125df575f80fd5b50565b5f815190506125f0816125cc565b92915050565b5f6020828403121561260b5761260a611f96565b5b5f612618848285016125e2565b91505092915050565b7f63425443207472616e73666572206661696c65640000000000000000000000005f82015250565b5f612655601483611ef6565b915061266082612621565b602082019050919050565b5f6020820190508181035f83015261268281612649565b9050919050565b7f526174696f206d757374206265203e3d203130302500000000000000000000005f82015250565b5f6126bd601583611ef6565b91506126c882612689565b602082019050919050565b5f6020820190508181035f8301526126ea816126b1565b9050919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f612725601283611ef6565b9150612730826126f1565b602082019050919050565b5f6020820190508181035f83015261275281612719565b9050919050565b5f60608201905061276c5f830186612247565b6127796020830185612247565b612786604083018461210c565b949350505050565b5f61279882611ff4565b91506127a383611ff4565b92508282019050808211156127bb576127ba612419565b5b92915050565b7f4c697175696461746f72206e6f7420656e6f75676820635553440000000000005f82015250565b5f6127f5601a83611ef6565b9150612800826127c1565b602082019050919050565b5f6020820190508181035f830152612822816127e9565b9050919050565b5f60408201905061283c5f83018561210c565b612849602083018461210c565b9392505050565b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f612884600c83611ef6565b915061288f82612850565b602082019050919050565b5f6020820190508181035f8301526128b181612878565b9050919050565b5f6060820190506128cb5f830186612247565b6128d8602083018561210c565b6128e5604083018461210c565b94935050505056fea2646970667358221220114ab43328aaca5c3f2996a132a5ff5dc3d383dc4267e9a438d4ba8f9239f2c164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x325D CODESIZE SUB DUP1 PUSH2 0x325D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4369747265612055534400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6355534400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x6EE JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x6EE JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x305 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP1 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP1 PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E SWAP1 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x92D JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F5 DUP3 PUSH2 0x3CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405 DUP2 PUSH2 0x3EB JUMP JUMPDEST DUP2 EQ PUSH2 0x40F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x420 DUP2 PUSH2 0x3FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x438 DUP2 PUSH2 0x426 JUMP JUMPDEST DUP2 EQ PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x453 DUP2 PUSH2 0x42F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x471 JUMPI PUSH2 0x470 PUSH2 0x3C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x47E DUP8 DUP3 DUP9 ADD PUSH2 0x412 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x48F DUP8 DUP3 DUP9 ADD PUSH2 0x445 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4A0 DUP8 DUP3 DUP9 ADD PUSH2 0x412 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4B1 DUP8 DUP3 DUP9 ADD PUSH2 0x445 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x538 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x54B JUMPI PUSH2 0x54A PUSH2 0x4F4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x5AD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x5B7 DUP7 DUP4 PUSH2 0x572 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5F2 PUSH2 0x5ED PUSH2 0x5E8 DUP5 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60B DUP4 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x61F PUSH2 0x617 DUP3 PUSH2 0x5F9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x57E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x633 PUSH2 0x627 JUMP JUMPDEST PUSH2 0x63E DUP2 DUP5 DUP5 PUSH2 0x602 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x661 JUMPI PUSH2 0x656 PUSH0 DUP3 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x644 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x6A6 JUMPI PUSH2 0x677 DUP2 PUSH2 0x551 JUMP JUMPDEST PUSH2 0x680 DUP5 PUSH2 0x563 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x68F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x6A3 PUSH2 0x69B DUP6 PUSH2 0x563 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x643 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6AB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6DE DUP4 DUP4 PUSH2 0x6B7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F7 DUP3 PUSH2 0x4BD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x710 JUMPI PUSH2 0x70F PUSH2 0x4C7 JUMP JUMPDEST JUMPDEST PUSH2 0x71A DUP3 SLOAD PUSH2 0x521 JUMP JUMPDEST PUSH2 0x725 DUP3 DUP3 DUP6 PUSH2 0x665 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x756 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x744 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x74E DUP6 DUP3 PUSH2 0x6D3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x764 DUP7 PUSH2 0x551 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x78B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x766 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x7A8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x7A4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6B7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7C6 DUP2 PUSH2 0x3EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7DF PUSH0 DUP4 ADD DUP5 PUSH2 0x7BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420634254432061646472657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x829 PUSH1 0x14 DUP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x834 DUP3 PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x856 DUP2 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F7261636C65000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x891 PUSH1 0xE DUP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x89C DUP3 PUSH2 0x85D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8BE DUP2 PUSH2 0x885 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526174696F206D757374206265203E3D20313030250000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8F9 PUSH1 0x15 DUP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x904 DUP3 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x926 DUP2 PUSH2 0x8ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2923 DUP1 PUSH2 0x93A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBCBAF487 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xEA629DB0 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xFB4CA35B EQ PUSH2 0x538 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xBCBAF487 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xCD377C53 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xD7E72708 EQ PUSH2 0x4B2 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xA6AFED95 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA6AFED95 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xB4EAE1CB EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xB6F7132F EQ PUSH2 0x448 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xA5D5DB0C EQ PUSH2 0x3D4 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x350C35E9 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x6060663E GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x6060663E EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x37A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x350C35E9 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x361416E1 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x4E8D048B EQ PUSH2 0x2F4 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1455B3AB GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x1455B3AB EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29C JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xAE8C4DC EQ PUSH2 0x214 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CE PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0xB28 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x378 PUSH2 0xBCA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x382 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A0 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BE PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F8 PUSH2 0xE7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49C PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BA PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x145E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x536 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1646 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x563 SWAP1 PUSH2 0x22DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58F SWAP1 PUSH2 0x22DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5EE PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FB DUP2 DUP6 DUP6 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x633 PUSH2 0xE7E JUMP JUMPDEST DUP1 PUSH2 0x63D DUP4 PUSH2 0xB85 JUMP JUMPDEST LT ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x2354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH2 0x173A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6ED PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP PUSH2 0x6FA DUP6 DUP3 DUP6 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x705 DUP6 DUP6 DUP6 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x721 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7AB DUP4 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x844 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x868 SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SLOAD DUP5 PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0xB PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x8FA JUMPI PUSH0 PUSH2 0x944 JUMP JUMPDEST DUP2 PUSH1 0xB PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP1 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0xB PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP3 SWAP2 SWAP1 PUSH2 0x25A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D DUP7 PUSH1 0x40 MLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB30 PUSH2 0x193B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB72 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD2 PUSH2 0x193B JUMP JUMPDEST PUSH2 0xBDB PUSH0 PUSH2 0x19C2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC39 SWAP1 PUSH2 0x22DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC65 SWAP1 PUSH2 0x22DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCB0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCB0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC93 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF3 SWAP1 PUSH2 0x273B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD76 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9A SWAP2 SWAP1 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD0 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE25 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE72 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA SLOAD TIMESTAMP PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xEA4 JUMPI POP PUSH0 PUSH2 0xEA2 PUSH2 0x6DA JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xF10 JUMPI PUSH0 PUSH4 0x1E13380 DUP3 PUSH1 0x9 SLOAD PUSH2 0xEBD SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP3 PUSH2 0xED6 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0xEE0 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xF06 JUMPI PUSH2 0xF05 PUSH2 0xEFF PUSH2 0xC02 JUMP JUMPDEST DUP3 PUSH2 0x1A85 JUMP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF1D PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP PUSH2 0xF2A DUP2 DUP6 DUP6 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF89 PUSH2 0xE7E JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1005 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1020 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1050 DUP5 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1060 JUMPI POP POP PUSH2 0x13C9 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH1 0xB PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13C4 JUMPI PUSH0 DUP4 DUP7 GT PUSH2 0x10F9 JUMPI DUP6 PUSH2 0x10FB JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP DUP1 PUSH2 0x1107 CALLER PUSH2 0xB85 JUMP JUMPDEST LT ISZERO PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113F SWAP1 PUSH2 0x280B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1153 CALLER ADDRESS DUP4 PUSH2 0x184B JUMP JUMPDEST PUSH2 0x115D ADDRESS DUP3 PUSH2 0x173A JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1175 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x117F SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP DUP6 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x1196 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH1 0x6E DUP3 PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1243 JUMPI PUSH1 0xB PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x128F SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F2 SWAP3 SWAP2 SWAP1 PUSH2 0x25A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x130E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0x1371 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1368 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C223CFCD8C93E245F558F5F8DE755FC0930FD9BC257441155EF5D54A170E0F DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13B9 SWAP3 SWAP2 SWAP1 PUSH2 0x2829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1466 PUSH2 0xE7E JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1521 SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SLOAD DUP5 PUSH2 0x153B SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x155C SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x1566 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DF SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15F2 DUP5 DUP5 PUSH2 0x1A85 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP5 PUSH1 0x40 MLOAD PUSH2 0x1638 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x164E PUSH2 0x193B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16BE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B5 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16C7 DUP2 PUSH2 0x19C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16D2 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x1717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170E SWAP1 PUSH2 0x289A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1735 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B04 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17AA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A1 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17B5 DUP3 PUSH0 DUP4 PUSH2 0x1CD3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17C4 DUP5 DUP5 PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1845 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1836 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1844 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1B04 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18BB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B2 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x192B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1922 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1936 DUP4 DUP4 DUP4 PUSH2 0x1CD3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1943 PUSH2 0x1721 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1961 PUSH2 0xC02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19C0 JUMPI PUSH2 0x1984 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B7 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AF5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEC SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B00 PUSH0 DUP4 DUP4 PUSH2 0x1CD3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B74 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6B SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BE4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDB SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1CCD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CC4 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D23 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D17 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1DF1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1DAC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E38 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E82 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EDF SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F23 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F08 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F48 DUP3 PUSH2 0x1EEC JUMP JUMPDEST PUSH2 0x1F52 DUP2 DUP6 PUSH2 0x1EF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F62 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F06 JUMP JUMPDEST PUSH2 0x1F6B DUP2 PUSH2 0x1F2E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F8E DUP2 DUP5 PUSH2 0x1F3E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC3 DUP3 PUSH2 0x1F9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FD3 DUP2 PUSH2 0x1FB9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FDD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FEE DUP2 PUSH2 0x1FCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2006 DUP2 PUSH2 0x1FF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2010 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2021 DUP2 PUSH2 0x1FFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x203D JUMPI PUSH2 0x203C PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x204A DUP6 DUP3 DUP7 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x205B DUP6 DUP3 DUP7 ADD PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2079 DUP2 PUSH2 0x2065 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2092 PUSH0 DUP4 ADD DUP5 PUSH2 0x2070 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20BB PUSH2 0x20B6 PUSH2 0x20B1 DUP5 PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x1F9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20CC DUP3 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20DD DUP3 PUSH2 0x20C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20ED DUP2 PUSH2 0x20D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2106 PUSH0 DUP4 ADD DUP5 PUSH2 0x20E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2115 DUP2 PUSH2 0x1FF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x212E PUSH0 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x214B JUMPI PUSH2 0x214A PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2158 DUP7 DUP3 DUP8 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2169 DUP7 DUP3 DUP8 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x217A DUP7 DUP3 DUP8 ADD PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2199 DUP2 PUSH2 0x2184 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x2190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21CD JUMPI PUSH2 0x21CC PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21DA DUP5 DUP3 DUP6 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F8 JUMPI PUSH2 0x21F7 PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2205 DUP5 DUP3 DUP6 ADD PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2218 DUP3 PUSH2 0x20C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2228 DUP2 PUSH2 0x220E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2241 PUSH0 DUP4 ADD DUP5 PUSH2 0x221F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2250 DUP2 PUSH2 0x1FB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2269 PUSH0 DUP4 ADD DUP5 PUSH2 0x2247 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2285 JUMPI PUSH2 0x2284 PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2292 DUP6 DUP3 DUP7 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22F1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2304 JUMPI PUSH2 0x2303 PUSH2 0x22AD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820635553440000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x233E PUSH1 0xF DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2349 DUP3 PUSH2 0x230A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x236B DUP2 PUSH2 0x2332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820636F6C6C61746572616C0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23A6 PUSH1 0x15 DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B1 DUP3 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23D3 DUP2 PUSH2 0x239A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x23E8 DUP2 PUSH2 0x1FFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2403 JUMPI PUSH2 0x2402 PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2410 DUP5 DUP3 DUP6 ADD PUSH2 0x23DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2450 DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x245B DUP4 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2469 DUP2 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2480 JUMPI PUSH2 0x247F PUSH2 0x2419 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x24BE DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x24C9 DUP4 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24D9 JUMPI PUSH2 0x24D8 PUSH2 0x2487 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24EE DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x24F9 DUP4 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2511 JUMPI PUSH2 0x2510 PUSH2 0x2419 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20776F756C6420756E646572636F6C6C61746572616C PUSH0 DUP3 ADD MSTORE PUSH32 0x697A650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2571 PUSH1 0x23 DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x257C DUP3 PUSH2 0x2517 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x259E DUP2 PUSH2 0x2565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25B8 PUSH0 DUP4 ADD DUP6 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x25C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x25D5 DUP2 PUSH2 0x2065 JUMP JUMPDEST DUP2 EQ PUSH2 0x25DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25F0 DUP2 PUSH2 0x25CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x260B JUMPI PUSH2 0x260A PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2618 DUP5 DUP3 DUP6 ADD PUSH2 0x25E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63425443207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2655 PUSH1 0x14 DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2660 DUP3 PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2682 DUP2 PUSH2 0x2649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526174696F206D757374206265203E3D20313030250000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26BD PUSH1 0x15 DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x26C8 DUP3 PUSH2 0x2689 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26EA DUP2 PUSH2 0x26B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2725 PUSH1 0x12 DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2730 DUP3 PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2752 DUP2 PUSH2 0x2719 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x276C PUSH0 DUP4 ADD DUP7 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x2779 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x2786 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2798 DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A3 DUP4 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x2419 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697175696461746F72206E6F7420656E6F7567682063555344000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27F5 PUSH1 0x1A DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2800 DUP3 PUSH2 0x27C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2822 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x283C PUSH0 DUP4 ADD DUP6 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x2849 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2884 PUSH1 0xC DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x288F DUP3 PUSH2 0x2850 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28B1 DUP2 PUSH2 0x2878 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28CB PUSH0 DUP4 ADD DUP7 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x28D8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x28E5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT BLOBBASEFEE 0xB4 CALLER 0x28 0xAA 0xCA TLOAD EXTCODEHASH 0x29 SWAP7 LOG1 ORIGIN 0xA5 SELFDESTRUCT TSTORE 0xC3 0xD3 DUP4 0xDC TIMESTAMP PUSH8 0xE9A438D4BA8F9239 CALLCODE 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "494:6882:6:-:0;;;1257:570;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1424:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1471:1:6::2;1454:19;;:5;:19;;::::0;1446:52:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1535:1;1516:21;;:7;:21;;::::0;1508:48:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1594:4;1574:16;:24;;1566:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1649:5;1635:4;;:20;;;;;;;;;;;;;;;;;;1683:16;1665:15;:34;;;;1731:7;1709:6;;:30;;;;;;;;;;;;;;;;;;1764:13;1749:12;:28;;;;1805:15;1787;:33;;;;1257:570:::0;;;;494:6882;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:820::-;1302:6;1310;1318;1326;1375:3;1363:9;1354:7;1350:23;1346:33;1343:120;;;1382:79;;:::i;:::-;1343:120;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:64;1722:7;1713:6;1702:9;1698:22;1666:64;:::i;:::-;1656:74;;1611:129;1779:2;1805:64;1861:7;1852:6;1841:9;1837:22;1805:64;:::i;:::-;1795:74;;1750:129;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;1205:820;;;;;;;:::o;2031:99::-;2083:6;2117:5;2111:12;2101:22;;2031:99;;;:::o;2136:180::-;2184:77;2181:1;2174:88;2281:4;2278:1;2271:15;2305:4;2302:1;2295:15;2322:180;2370:77;2367:1;2360:88;2467:4;2464:1;2457:15;2491:4;2488:1;2481:15;2508:320;2552:6;2589:1;2583:4;2579:12;2569:22;;2636:1;2630:4;2626:12;2657:18;2647:81;;2713:4;2705:6;2701:17;2691:27;;2647:81;2775:2;2767:6;2764:14;2744:18;2741:38;2738:84;;2794:18;;:::i;:::-;2738:84;2559:269;2508:320;;;:::o;2834:141::-;2883:4;2906:3;2898:11;;2929:3;2926:1;2919:14;2963:4;2960:1;2950:18;2942:26;;2834:141;;;:::o;2981:93::-;3018:6;3065:2;3060;3053:5;3049:14;3045:23;3035:33;;2981:93;;;:::o;3080:107::-;3124:8;3174:5;3168:4;3164:16;3143:37;;3080:107;;;;:::o;3193:393::-;3262:6;3312:1;3300:10;3296:18;3335:97;3365:66;3354:9;3335:97;:::i;:::-;3453:39;3483:8;3472:9;3453:39;:::i;:::-;3441:51;;3525:4;3521:9;3514:5;3510:21;3501:30;;3574:4;3564:8;3560:19;3553:5;3550:30;3540:40;;3269:317;;3193:393;;;;;:::o;3592:60::-;3620:3;3641:5;3634:12;;3592:60;;;:::o;3658:142::-;3708:9;3741:53;3759:34;3768:24;3786:5;3768:24;:::i;:::-;3759:34;:::i;:::-;3741:53;:::i;:::-;3728:66;;3658:142;;;:::o;3806:75::-;3849:3;3870:5;3863:12;;3806:75;;;:::o;3887:269::-;3997:39;4028:7;3997:39;:::i;:::-;4058:91;4107:41;4131:16;4107:41;:::i;:::-;4099:6;4092:4;4086:11;4058:91;:::i;:::-;4052:4;4045:105;3963:193;3887:269;;;:::o;4162:73::-;4207:3;4162:73;:::o;4241:189::-;4318:32;;:::i;:::-;4359:65;4417:6;4409;4403:4;4359:65;:::i;:::-;4294:136;4241:189;;:::o;4436:186::-;4496:120;4513:3;4506:5;4503:14;4496:120;;;4567:39;4604:1;4597:5;4567:39;:::i;:::-;4540:1;4533:5;4529:13;4520:22;;4496:120;;;4436:186;;:::o;4628:543::-;4729:2;4724:3;4721:11;4718:446;;;4763:38;4795:5;4763:38;:::i;:::-;4847:29;4865:10;4847:29;:::i;:::-;4837:8;4833:44;5030:2;5018:10;5015:18;5012:49;;;5051:8;5036:23;;5012:49;5074:80;5130:22;5148:3;5130:22;:::i;:::-;5120:8;5116:37;5103:11;5074:80;:::i;:::-;4733:431;;4718:446;4628:543;;;:::o;5177:117::-;5231:8;5281:5;5275:4;5271:16;5250:37;;5177:117;;;;:::o;5300:169::-;5344:6;5377:51;5425:1;5421:6;5413:5;5410:1;5406:13;5377:51;:::i;:::-;5373:56;5458:4;5452;5448:15;5438:25;;5351:118;5300:169;;;;:::o;5474:295::-;5550:4;5696:29;5721:3;5715:4;5696:29;:::i;:::-;5688:37;;5758:3;5755:1;5751:11;5745:4;5742:21;5734:29;;5474:295;;;;:::o;5774:1395::-;5891:37;5924:3;5891:37;:::i;:::-;5993:18;5985:6;5982:30;5979:56;;;6015:18;;:::i;:::-;5979:56;6059:38;6091:4;6085:11;6059:38;:::i;:::-;6144:67;6204:6;6196;6190:4;6144:67;:::i;:::-;6238:1;6262:4;6249:17;;6294:2;6286:6;6283:14;6311:1;6306:618;;;;6968:1;6985:6;6982:77;;;7034:9;7029:3;7025:19;7019:26;7010:35;;6982:77;7085:67;7145:6;7138:5;7085:67;:::i;:::-;7079:4;7072:81;6941:222;6276:887;;6306:618;6358:4;6354:9;6346:6;6342:22;6392:37;6424:4;6392:37;:::i;:::-;6451:1;6465:208;6479:7;6476:1;6473:14;6465:208;;;6558:9;6553:3;6549:19;6543:26;6535:6;6528:42;6609:1;6601:6;6597:14;6587:24;;6656:2;6645:9;6641:18;6628:31;;6502:4;6499:1;6495:12;6490:17;;6465:208;;;6701:6;6692:7;6689:19;6686:179;;;6759:9;6754:3;6750:19;6744:26;6802:48;6844:4;6836:6;6832:17;6821:9;6802:48;:::i;:::-;6794:6;6787:64;6709:156;6686:179;6911:1;6907;6899:6;6895:14;6891:22;6885:4;6878:36;6313:611;;;6276:887;;5866:1303;;;5774:1395;;:::o;7175:118::-;7262:24;7280:5;7262:24;:::i;:::-;7257:3;7250:37;7175:118;;:::o;7299:222::-;7392:4;7430:2;7419:9;7415:18;7407:26;;7443:71;7511:1;7500:9;7496:17;7487:6;7443:71;:::i;:::-;7299:222;;;;:::o;7527:169::-;7611:11;7645:6;7640:3;7633:19;7685:4;7680:3;7676:14;7661:29;;7527:169;;;;:::o;7702:170::-;7842:22;7838:1;7830:6;7826:14;7819:46;7702:170;:::o;7878:366::-;8020:3;8041:67;8105:2;8100:3;8041:67;:::i;:::-;8034:74;;8117:93;8206:3;8117:93;:::i;:::-;8235:2;8230:3;8226:12;8219:19;;7878:366;;;:::o;8250:419::-;8416:4;8454:2;8443:9;8439:18;8431:26;;8503:9;8497:4;8493:20;8489:1;8478:9;8474:17;8467:47;8531:131;8657:4;8531:131;:::i;:::-;8523:139;;8250:419;;;:::o;8675:164::-;8815:16;8811:1;8803:6;8799:14;8792:40;8675:164;:::o;8845:366::-;8987:3;9008:67;9072:2;9067:3;9008:67;:::i;:::-;9001:74;;9084:93;9173:3;9084:93;:::i;:::-;9202:2;9197:3;9193:12;9186:19;;8845:366;;;:::o;9217:419::-;9383:4;9421:2;9410:9;9406:18;9398:26;;9470:9;9464:4;9460:20;9456:1;9445:9;9441:17;9434:47;9498:131;9624:4;9498:131;:::i;:::-;9490:139;;9217:419;;;:::o;9642:171::-;9782:23;9778:1;9770:6;9766:14;9759:47;9642:171;:::o;9819:366::-;9961:3;9982:67;10046:2;10041:3;9982:67;:::i;:::-;9975:74;;10058:93;10147:3;10058:93;:::i;:::-;10176:2;10171:3;10167:12;10160:19;;9819:366;;;:::o;10191:419::-;10357:4;10395:2;10384:9;10380:18;10372:26;;10444:9;10438:4;10434:20;10430:1;10419:9;10415:17;10408:47;10472:131;10598:4;10472:131;:::i;:::-;10464:139;;10191:419;;;:::o;494:6882:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 5928,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 6916,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 5946,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6459,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 6789,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 5921,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 6073,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 6594,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 6219,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 7379,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@accrueInterest_1125": {
									"entryPoint": 3710,
									"id": 1125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 5084,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1508,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2949,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnStableCoin_1367": {
									"entryPoint": 1579,
									"id": 1367,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cBTCDeposits_963": {
									"entryPoint": 2835,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cBTC_950": {
									"entryPoint": 1542,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collateralRatio_955": {
									"entryPoint": 3893,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1809,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositCollateral_1175": {
									"entryPoint": 3258,
									"id": 1175,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getCollateralRatio_1134": {
									"entryPoint": 5069,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserCollateral_1578": {
									"entryPoint": 3899,
									"id": 1578,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastAccrualTime_959": {
									"entryPoint": 5078,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidate_1525": {
									"entryPoint": 3969,
									"id": 1525,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintStableCoin_1335": {
									"entryPoint": 5214,
									"id": 1335,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1364,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@oracle_953": {
									"entryPoint": 3037,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 3074,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 3018,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCollateralRatio_1545": {
									"entryPoint": 2856,
									"id": 1545,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStabilityFee_1565": {
									"entryPoint": 5834,
									"id": 1565,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stabilityFee_957": {
									"entryPoint": 2829,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 3114,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1754,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1763,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5702,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 3859,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawCollateral_1273": {
									"entryPoint": 1817,
									"id": 1273,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack": {
									"entryPoint": 8420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IPriceOracle_$1589_to_t_address_fromStack": {
									"entryPoint": 8735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10073,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9637,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10424,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed": {
									"entryPoint": 8435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IPriceOracle_$1589__to_t_address__fromStack_reversed": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10281,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$877_to_t_address": {
									"entryPoint": 8403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IPriceOracle_$1589_to_t_address": {
									"entryPoint": 8718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7942,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9241,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9351,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8877,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 9969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74": {
									"entryPoint": 10177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1": {
									"entryPoint": 10320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b": {
									"entryPoint": 9495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d": {
									"entryPoint": 9761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2": {
									"entryPoint": 8970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad": {
									"entryPoint": 9074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94": {
									"entryPoint": 9865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20280:9",
										"nodeType": "YulBlock",
										"src": "0:20280:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:186:9",
													"nodeType": "YulBlock",
													"src": "349:186:9",
													"statements": [
														{
															"nativeSrc": "360:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:9",
																"nodeType": "YulLiteral",
																"src": "369:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:9",
																	"nodeType": "YulTypedName",
																	"src": "364:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:9",
																"nodeType": "YulBlock",
																"src": "429:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:9"
																					},
																					"nativeSrc": "450:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:9"
																							},
																							"nativeSrc": "469:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:9"
																					},
																					"nativeSrc": "463:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:9"
																			},
																			"nativeSrc": "443:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:9"
																		},
																		"nativeSrc": "443:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:9"
																},
																"nativeSrc": "387:13:9",
																"nodeType": "YulFunctionCall",
																"src": "387:13:9"
															},
															"nativeSrc": "379:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:9",
																"nodeType": "YulBlock",
																"src": "401:19:9",
																"statements": [
																	{
																		"nativeSrc": "403:15:9",
																		"nodeType": "YulAssignment",
																		"src": "403:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:9",
																					"nodeType": "YulLiteral",
																					"src": "415:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:9"
																			},
																			"nativeSrc": "408:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:9",
																"nodeType": "YulBlock",
																"src": "383:3:9",
																"statements": []
															},
															"src": "379:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:9"
																		},
																		"nativeSrc": "508:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:9",
																		"nodeType": "YulLiteral",
																		"src": "526:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:9"
																},
																"nativeSrc": "501:27:9",
																"nodeType": "YulFunctionCall",
																"src": "501:27:9"
															},
															"nativeSrc": "501:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:248:9"
											},
											{
												"body": {
													"nativeSrc": "589:54:9",
													"nodeType": "YulBlock",
													"src": "589:54:9",
													"statements": [
														{
															"nativeSrc": "599:38:9",
															"nodeType": "YulAssignment",
															"src": "599:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:9",
																				"nodeType": "YulLiteral",
																				"src": "624:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:9"
																		},
																		"nativeSrc": "613:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:9",
																				"nodeType": "YulLiteral",
																				"src": "633:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:9"
																		},
																		"nativeSrc": "629:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:9"
																},
																"nativeSrc": "609:28:9",
																"nodeType": "YulFunctionCall",
																"src": "609:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:9",
														"nodeType": "YulTypedName",
														"src": "572:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:9",
														"nodeType": "YulTypedName",
														"src": "582:6:9",
														"type": ""
													}
												],
												"src": "541:102:9"
											},
											{
												"body": {
													"nativeSrc": "741:285:9",
													"nodeType": "YulBlock",
													"src": "741:285:9",
													"statements": [
														{
															"nativeSrc": "751:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:9"
																},
																"nativeSrc": "765:39:9",
																"nodeType": "YulFunctionCall",
																"src": "765:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:9",
																	"nodeType": "YulTypedName",
																	"src": "755:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:9",
															"nodeType": "YulAssignment",
															"src": "813:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:9"
																},
																"nativeSrc": "820:71:9",
																"nodeType": "YulFunctionCall",
																"src": "820:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:9",
																				"nodeType": "YulLiteral",
																				"src": "946:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:9"
																		},
																		"nativeSrc": "935:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:9"
																},
																"nativeSrc": "900:65:9",
																"nodeType": "YulFunctionCall",
																"src": "900:65:9"
															},
															"nativeSrc": "900:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:9"
														},
														{
															"nativeSrc": "974:46:9",
															"nodeType": "YulAssignment",
															"src": "974:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:9"
																		},
																		"nativeSrc": "990:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:9"
																},
																"nativeSrc": "981:39:9",
																"nodeType": "YulFunctionCall",
																"src": "981:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:9",
														"nodeType": "YulTypedName",
														"src": "722:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:9",
														"nodeType": "YulTypedName",
														"src": "729:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:9",
														"nodeType": "YulTypedName",
														"src": "737:3:9",
														"type": ""
													}
												],
												"src": "649:377:9"
											},
											{
												"body": {
													"nativeSrc": "1150:195:9",
													"nodeType": "YulBlock",
													"src": "1150:195:9",
													"statements": [
														{
															"nativeSrc": "1160:26:9",
															"nodeType": "YulAssignment",
															"src": "1160:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:9"
																},
																"nativeSrc": "1168:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:9"
																		},
																		"nativeSrc": "1203:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:9"
																		},
																		"nativeSrc": "1222:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:9"
																},
																"nativeSrc": "1196:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:9"
															},
															"nativeSrc": "1196:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:9"
														},
														{
															"nativeSrc": "1252:86:9",
															"nodeType": "YulAssignment",
															"src": "1252:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:9"
																},
																"nativeSrc": "1260:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:9",
														"nodeType": "YulTypedName",
														"src": "1122:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:9",
														"nodeType": "YulTypedName",
														"src": "1134:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:9",
														"nodeType": "YulTypedName",
														"src": "1145:4:9",
														"type": ""
													}
												],
												"src": "1032:313:9"
											},
											{
												"body": {
													"nativeSrc": "1391:35:9",
													"nodeType": "YulBlock",
													"src": "1391:35:9",
													"statements": [
														{
															"nativeSrc": "1401:19:9",
															"nodeType": "YulAssignment",
															"src": "1401:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1411:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:9"
																},
																"nativeSrc": "1411:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1411:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1401:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1351:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1384:6:9",
														"nodeType": "YulTypedName",
														"src": "1384:6:9",
														"type": ""
													}
												],
												"src": "1351:75:9"
											},
											{
												"body": {
													"nativeSrc": "1521:28:9",
													"nodeType": "YulBlock",
													"src": "1521:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1531:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:9"
																},
																"nativeSrc": "1531:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1531:12:9"
															},
															"nativeSrc": "1531:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1531:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1432:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1432:117:9"
											},
											{
												"body": {
													"nativeSrc": "1644:28:9",
													"nodeType": "YulBlock",
													"src": "1644:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:9"
																},
																"nativeSrc": "1654:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:9"
															},
															"nativeSrc": "1654:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1555:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:9"
											},
											{
												"body": {
													"nativeSrc": "1723:81:9",
													"nodeType": "YulBlock",
													"src": "1723:81:9",
													"statements": [
														{
															"nativeSrc": "1733:65:9",
															"nodeType": "YulAssignment",
															"src": "1733:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1748:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1748:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1755:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1755:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1744:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:9"
																},
																"nativeSrc": "1744:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1744:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1733:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1733:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1678:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:9",
														"nodeType": "YulTypedName",
														"src": "1705:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1715:7:9",
														"nodeType": "YulTypedName",
														"src": "1715:7:9",
														"type": ""
													}
												],
												"src": "1678:126:9"
											},
											{
												"body": {
													"nativeSrc": "1855:51:9",
													"nodeType": "YulBlock",
													"src": "1855:51:9",
													"statements": [
														{
															"nativeSrc": "1865:35:9",
															"nodeType": "YulAssignment",
															"src": "1865:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1894:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1894:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1876:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1876:17:9"
																},
																"nativeSrc": "1876:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1876:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1865:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1865:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1810:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1837:5:9",
														"nodeType": "YulTypedName",
														"src": "1837:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1847:7:9",
														"nodeType": "YulTypedName",
														"src": "1847:7:9",
														"type": ""
													}
												],
												"src": "1810:96:9"
											},
											{
												"body": {
													"nativeSrc": "1955:79:9",
													"nodeType": "YulBlock",
													"src": "1955:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2012:16:9",
																"nodeType": "YulBlock",
																"src": "2012:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:9"
																			},
																			"nativeSrc": "2014:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:9"
																		},
																		"nativeSrc": "2014:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1978:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1978:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2003:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2003:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1985:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1985:17:9"
																				},
																				"nativeSrc": "1985:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1975:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1975:2:9"
																		},
																		"nativeSrc": "1975:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1975:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1968:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:9"
																},
																"nativeSrc": "1968:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1968:43:9"
															},
															"nativeSrc": "1965:63:9",
															"nodeType": "YulIf",
															"src": "1965:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1912:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:9",
														"nodeType": "YulTypedName",
														"src": "1948:5:9",
														"type": ""
													}
												],
												"src": "1912:122:9"
											},
											{
												"body": {
													"nativeSrc": "2092:87:9",
													"nodeType": "YulBlock",
													"src": "2092:87:9",
													"statements": [
														{
															"nativeSrc": "2102:29:9",
															"nodeType": "YulAssignment",
															"src": "2102:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2124:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2111:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2111:12:9"
																},
																"nativeSrc": "2111:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2111:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2102:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2167:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2140:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2140:26:9"
																},
																"nativeSrc": "2140:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2140:33:9"
															},
															"nativeSrc": "2140:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2140:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2040:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2070:6:9",
														"nodeType": "YulTypedName",
														"src": "2070:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2078:3:9",
														"nodeType": "YulTypedName",
														"src": "2078:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2086:5:9",
														"nodeType": "YulTypedName",
														"src": "2086:5:9",
														"type": ""
													}
												],
												"src": "2040:139:9"
											},
											{
												"body": {
													"nativeSrc": "2230:32:9",
													"nodeType": "YulBlock",
													"src": "2230:32:9",
													"statements": [
														{
															"nativeSrc": "2240:16:9",
															"nodeType": "YulAssignment",
															"src": "2240:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:9",
																"nodeType": "YulIdentifier",
																"src": "2251:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2240:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2185:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2212:5:9",
														"nodeType": "YulTypedName",
														"src": "2212:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2222:7:9",
														"nodeType": "YulTypedName",
														"src": "2222:7:9",
														"type": ""
													}
												],
												"src": "2185:77:9"
											},
											{
												"body": {
													"nativeSrc": "2311:79:9",
													"nodeType": "YulBlock",
													"src": "2311:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:9",
																"nodeType": "YulBlock",
																"src": "2368:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:9"
																			},
																			"nativeSrc": "2370:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:9"
																		},
																		"nativeSrc": "2370:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2341:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:9"
																				},
																				"nativeSrc": "2341:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:9"
																		},
																		"nativeSrc": "2331:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:9"
																},
																"nativeSrc": "2324:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:9"
															},
															"nativeSrc": "2321:63:9",
															"nodeType": "YulIf",
															"src": "2321:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2268:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:9",
														"nodeType": "YulTypedName",
														"src": "2304:5:9",
														"type": ""
													}
												],
												"src": "2268:122:9"
											},
											{
												"body": {
													"nativeSrc": "2448:87:9",
													"nodeType": "YulBlock",
													"src": "2448:87:9",
													"statements": [
														{
															"nativeSrc": "2458:29:9",
															"nodeType": "YulAssignment",
															"src": "2458:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:9"
																},
																"nativeSrc": "2467:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2496:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:9"
																},
																"nativeSrc": "2496:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:9"
															},
															"nativeSrc": "2496:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2396:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:9",
														"nodeType": "YulTypedName",
														"src": "2426:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:9",
														"nodeType": "YulTypedName",
														"src": "2434:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:9",
														"nodeType": "YulTypedName",
														"src": "2442:5:9",
														"type": ""
													}
												],
												"src": "2396:139:9"
											},
											{
												"body": {
													"nativeSrc": "2624:391:9",
													"nodeType": "YulBlock",
													"src": "2624:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:9",
																"nodeType": "YulBlock",
																"src": "2670:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:9"
																			},
																			"nativeSrc": "2672:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:9"
																		},
																		"nativeSrc": "2672:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:9"
																		},
																		"nativeSrc": "2641:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:9"
																},
																"nativeSrc": "2637:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:9"
															},
															"nativeSrc": "2634:119:9",
															"nodeType": "YulIf",
															"src": "2634:119:9"
														},
														{
															"nativeSrc": "2763:117:9",
															"nodeType": "YulBlock",
															"src": "2763:117:9",
															"statements": [
																{
																	"nativeSrc": "2778:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2792:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2807:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2807:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2853:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:9"
																				},
																				"nativeSrc": "2838:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2862:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2817:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:9"
																		},
																		"nativeSrc": "2817:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2807:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2890:118:9",
															"nodeType": "YulBlock",
															"src": "2890:118:9",
															"statements": [
																{
																	"nativeSrc": "2905:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2919:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2909:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2935:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2935:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2970:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2981:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2966:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:9"
																				},
																				"nativeSrc": "2966:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2990:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2945:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:9"
																		},
																		"nativeSrc": "2945:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2935:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2541:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:9",
														"nodeType": "YulTypedName",
														"src": "2586:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:9",
														"nodeType": "YulTypedName",
														"src": "2597:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:9",
														"nodeType": "YulTypedName",
														"src": "2609:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2617:6:9",
														"nodeType": "YulTypedName",
														"src": "2617:6:9",
														"type": ""
													}
												],
												"src": "2541:474:9"
											},
											{
												"body": {
													"nativeSrc": "3063:48:9",
													"nodeType": "YulBlock",
													"src": "3063:48:9",
													"statements": [
														{
															"nativeSrc": "3073:32:9",
															"nodeType": "YulAssignment",
															"src": "3073:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3098:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3098:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3091:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3091:6:9"
																		},
																		"nativeSrc": "3091:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3084:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:9"
																},
																"nativeSrc": "3084:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3084:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3073:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3021:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:9",
														"nodeType": "YulTypedName",
														"src": "3045:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3055:7:9",
														"nodeType": "YulTypedName",
														"src": "3055:7:9",
														"type": ""
													}
												],
												"src": "3021:90:9"
											},
											{
												"body": {
													"nativeSrc": "3176:50:9",
													"nodeType": "YulBlock",
													"src": "3176:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3193:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3213:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3213:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3198:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3198:14:9"
																		},
																		"nativeSrc": "3198:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:9"
																},
																"nativeSrc": "3186:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3186:34:9"
															},
															"nativeSrc": "3186:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3117:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3164:5:9",
														"nodeType": "YulTypedName",
														"src": "3164:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3171:3:9",
														"nodeType": "YulTypedName",
														"src": "3171:3:9",
														"type": ""
													}
												],
												"src": "3117:109:9"
											},
											{
												"body": {
													"nativeSrc": "3324:118:9",
													"nodeType": "YulBlock",
													"src": "3324:118:9",
													"statements": [
														{
															"nativeSrc": "3334:26:9",
															"nodeType": "YulAssignment",
															"src": "3334:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3346:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3342:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:9"
																},
																"nativeSrc": "3342:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3342:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:9"
																		},
																		"nativeSrc": "3417:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3370:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3370:37:9"
																},
																"nativeSrc": "3370:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3370:65:9"
															},
															"nativeSrc": "3370:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3370:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3232:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:9",
														"nodeType": "YulTypedName",
														"src": "3296:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:9",
														"nodeType": "YulTypedName",
														"src": "3308:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3319:4:9",
														"nodeType": "YulTypedName",
														"src": "3319:4:9",
														"type": ""
													}
												],
												"src": "3232:210:9"
											},
											{
												"body": {
													"nativeSrc": "3480:28:9",
													"nodeType": "YulBlock",
													"src": "3480:28:9",
													"statements": [
														{
															"nativeSrc": "3490:12:9",
															"nodeType": "YulAssignment",
															"src": "3490:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3497:5:9",
																"nodeType": "YulIdentifier",
																"src": "3497:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3490:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3490:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3448:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3466:5:9",
														"nodeType": "YulTypedName",
														"src": "3466:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3476:3:9",
														"nodeType": "YulTypedName",
														"src": "3476:3:9",
														"type": ""
													}
												],
												"src": "3448:60:9"
											},
											{
												"body": {
													"nativeSrc": "3574:82:9",
													"nodeType": "YulBlock",
													"src": "3574:82:9",
													"statements": [
														{
															"nativeSrc": "3584:66:9",
															"nodeType": "YulAssignment",
															"src": "3584:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3642:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3642:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3624:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3624:17:9"
																				},
																				"nativeSrc": "3624:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3624:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3615:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "3615:8:9"
																		},
																		"nativeSrc": "3615:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3615:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3597:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3597:17:9"
																},
																"nativeSrc": "3597:53:9",
																"nodeType": "YulFunctionCall",
																"src": "3597:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3584:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3584:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3514:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3554:5:9",
														"nodeType": "YulTypedName",
														"src": "3554:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3564:9:9",
														"nodeType": "YulTypedName",
														"src": "3564:9:9",
														"type": ""
													}
												],
												"src": "3514:142:9"
											},
											{
												"body": {
													"nativeSrc": "3722:66:9",
													"nodeType": "YulBlock",
													"src": "3722:66:9",
													"statements": [
														{
															"nativeSrc": "3732:50:9",
															"nodeType": "YulAssignment",
															"src": "3732:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3776:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3776:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3745:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3745:30:9"
																},
																"nativeSrc": "3745:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3745:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3732:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3732:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3662:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3702:5:9",
														"nodeType": "YulTypedName",
														"src": "3702:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3712:9:9",
														"nodeType": "YulTypedName",
														"src": "3712:9:9",
														"type": ""
													}
												],
												"src": "3662:126:9"
											},
											{
												"body": {
													"nativeSrc": "3868:66:9",
													"nodeType": "YulBlock",
													"src": "3868:66:9",
													"statements": [
														{
															"nativeSrc": "3878:50:9",
															"nodeType": "YulAssignment",
															"src": "3878:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3922:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3922:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3891:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3891:30:9"
																},
																"nativeSrc": "3891:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3891:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3878:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3878:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$877_to_t_address",
												"nativeSrc": "3794:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3848:5:9",
														"nodeType": "YulTypedName",
														"src": "3848:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3858:9:9",
														"nodeType": "YulTypedName",
														"src": "3858:9:9",
														"type": ""
													}
												],
												"src": "3794:140:9"
											},
											{
												"body": {
													"nativeSrc": "4019:80:9",
													"nodeType": "YulBlock",
													"src": "4019:80:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4036:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4036:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4086:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4086:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$877_to_t_address",
																			"nativeSrc": "4041:44:9",
																			"nodeType": "YulIdentifier",
																			"src": "4041:44:9"
																		},
																		"nativeSrc": "4041:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4041:51:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4029:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4029:6:9"
																},
																"nativeSrc": "4029:64:9",
																"nodeType": "YulFunctionCall",
																"src": "4029:64:9"
															},
															"nativeSrc": "4029:64:9",
															"nodeType": "YulExpressionStatement",
															"src": "4029:64:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
												"nativeSrc": "3940:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4007:5:9",
														"nodeType": "YulTypedName",
														"src": "4007:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4014:3:9",
														"nodeType": "YulTypedName",
														"src": "4014:3:9",
														"type": ""
													}
												],
												"src": "3940:159:9"
											},
											{
												"body": {
													"nativeSrc": "4217:138:9",
													"nodeType": "YulBlock",
													"src": "4217:138:9",
													"statements": [
														{
															"nativeSrc": "4227:26:9",
															"nodeType": "YulAssignment",
															"src": "4227:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4239:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4239:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4250:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4250:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4235:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4235:3:9"
																},
																"nativeSrc": "4235:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4235:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4227:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4227:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4321:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4321:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4334:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4334:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4345:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4345:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4330:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4330:3:9"
																		},
																		"nativeSrc": "4330:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4330:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
																	"nativeSrc": "4263:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "4263:57:9"
																},
																"nativeSrc": "4263:85:9",
																"nodeType": "YulFunctionCall",
																"src": "4263:85:9"
															},
															"nativeSrc": "4263:85:9",
															"nodeType": "YulExpressionStatement",
															"src": "4263:85:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed",
												"nativeSrc": "4105:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4189:9:9",
														"nodeType": "YulTypedName",
														"src": "4189:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4201:6:9",
														"nodeType": "YulTypedName",
														"src": "4201:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4212:4:9",
														"nodeType": "YulTypedName",
														"src": "4212:4:9",
														"type": ""
													}
												],
												"src": "4105:250:9"
											},
											{
												"body": {
													"nativeSrc": "4426:53:9",
													"nodeType": "YulBlock",
													"src": "4426:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4443:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4443:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4466:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4466:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4448:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "4448:17:9"
																		},
																		"nativeSrc": "4448:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4448:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4436:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4436:6:9"
																},
																"nativeSrc": "4436:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4436:37:9"
															},
															"nativeSrc": "4436:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "4436:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4361:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4414:5:9",
														"nodeType": "YulTypedName",
														"src": "4414:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4421:3:9",
														"nodeType": "YulTypedName",
														"src": "4421:3:9",
														"type": ""
													}
												],
												"src": "4361:118:9"
											},
											{
												"body": {
													"nativeSrc": "4583:124:9",
													"nodeType": "YulBlock",
													"src": "4583:124:9",
													"statements": [
														{
															"nativeSrc": "4593:26:9",
															"nodeType": "YulAssignment",
															"src": "4593:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4605:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4605:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4616:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4616:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4601:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4601:3:9"
																},
																"nativeSrc": "4601:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4601:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4593:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4593:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4673:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4673:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4686:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4686:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4697:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4697:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4682:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:9"
																		},
																		"nativeSrc": "4682:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4629:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4629:43:9"
																},
																"nativeSrc": "4629:71:9",
																"nodeType": "YulFunctionCall",
																"src": "4629:71:9"
															},
															"nativeSrc": "4629:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "4629:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4485:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4555:9:9",
														"nodeType": "YulTypedName",
														"src": "4555:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4567:6:9",
														"nodeType": "YulTypedName",
														"src": "4567:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4578:4:9",
														"nodeType": "YulTypedName",
														"src": "4578:4:9",
														"type": ""
													}
												],
												"src": "4485:222:9"
											},
											{
												"body": {
													"nativeSrc": "4813:519:9",
													"nodeType": "YulBlock",
													"src": "4813:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4859:83:9",
																"nodeType": "YulBlock",
																"src": "4859:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4861:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4861:77:9"
																			},
																			"nativeSrc": "4861:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4861:79:9"
																		},
																		"nativeSrc": "4861:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4861:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4834:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4834:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4843:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4843:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4830:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4830:3:9"
																		},
																		"nativeSrc": "4830:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4830:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4855:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4855:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4826:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4826:3:9"
																},
																"nativeSrc": "4826:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4826:32:9"
															},
															"nativeSrc": "4823:119:9",
															"nodeType": "YulIf",
															"src": "4823:119:9"
														},
														{
															"nativeSrc": "4952:117:9",
															"nodeType": "YulBlock",
															"src": "4952:117:9",
															"statements": [
																{
																	"nativeSrc": "4967:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4967:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4981:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4981:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4971:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4971:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4996:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4996:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5031:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5031:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5042:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5042:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5027:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5027:3:9"
																				},
																				"nativeSrc": "5027:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5027:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5051:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5051:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5006:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5006:20:9"
																		},
																		"nativeSrc": "5006:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5006:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4996:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4996:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5079:118:9",
															"nodeType": "YulBlock",
															"src": "5079:118:9",
															"statements": [
																{
																	"nativeSrc": "5094:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5094:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5108:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5108:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5098:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5098:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5124:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5124:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5159:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5159:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5170:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5170:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5155:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5155:3:9"
																				},
																				"nativeSrc": "5155:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5155:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5179:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5179:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5134:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5134:20:9"
																		},
																		"nativeSrc": "5134:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5134:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5124:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5124:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5207:118:9",
															"nodeType": "YulBlock",
															"src": "5207:118:9",
															"statements": [
																{
																	"nativeSrc": "5222:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5222:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5236:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5236:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5226:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5226:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5252:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5252:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5287:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5287:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5298:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5298:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5283:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5283:3:9"
																				},
																				"nativeSrc": "5283:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5283:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5307:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5307:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5262:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5262:20:9"
																		},
																		"nativeSrc": "5262:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5262:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5252:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5252:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4713:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4767:9:9",
														"nodeType": "YulTypedName",
														"src": "4767:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4778:7:9",
														"nodeType": "YulTypedName",
														"src": "4778:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4790:6:9",
														"nodeType": "YulTypedName",
														"src": "4790:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4798:6:9",
														"nodeType": "YulTypedName",
														"src": "4798:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4806:6:9",
														"nodeType": "YulTypedName",
														"src": "4806:6:9",
														"type": ""
													}
												],
												"src": "4713:619:9"
											},
											{
												"body": {
													"nativeSrc": "5381:43:9",
													"nodeType": "YulBlock",
													"src": "5381:43:9",
													"statements": [
														{
															"nativeSrc": "5391:27:9",
															"nodeType": "YulAssignment",
															"src": "5391:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5406:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5406:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5413:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5413:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5402:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5402:3:9"
																},
																"nativeSrc": "5402:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5402:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5391:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5391:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5338:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5363:5:9",
														"nodeType": "YulTypedName",
														"src": "5363:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5373:7:9",
														"nodeType": "YulTypedName",
														"src": "5373:7:9",
														"type": ""
													}
												],
												"src": "5338:86:9"
											},
											{
												"body": {
													"nativeSrc": "5491:51:9",
													"nodeType": "YulBlock",
													"src": "5491:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5508:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5529:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5529:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5513:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "5513:15:9"
																		},
																		"nativeSrc": "5513:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5513:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5501:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:9"
																},
																"nativeSrc": "5501:35:9",
																"nodeType": "YulFunctionCall",
																"src": "5501:35:9"
															},
															"nativeSrc": "5501:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "5501:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5430:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5479:5:9",
														"nodeType": "YulTypedName",
														"src": "5479:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5486:3:9",
														"nodeType": "YulTypedName",
														"src": "5486:3:9",
														"type": ""
													}
												],
												"src": "5430:112:9"
											},
											{
												"body": {
													"nativeSrc": "5642:120:9",
													"nodeType": "YulBlock",
													"src": "5642:120:9",
													"statements": [
														{
															"nativeSrc": "5652:26:9",
															"nodeType": "YulAssignment",
															"src": "5652:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5664:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5664:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5675:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5660:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:9"
																},
																"nativeSrc": "5660:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5660:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5652:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5652:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:9"
																		},
																		"nativeSrc": "5737:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5688:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "5688:39:9"
																},
																"nativeSrc": "5688:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5688:67:9"
															},
															"nativeSrc": "5688:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5688:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5548:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5614:9:9",
														"nodeType": "YulTypedName",
														"src": "5614:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5626:6:9",
														"nodeType": "YulTypedName",
														"src": "5626:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5637:4:9",
														"nodeType": "YulTypedName",
														"src": "5637:4:9",
														"type": ""
													}
												],
												"src": "5548:214:9"
											},
											{
												"body": {
													"nativeSrc": "5834:263:9",
													"nodeType": "YulBlock",
													"src": "5834:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5880:83:9",
																"nodeType": "YulBlock",
																"src": "5880:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5882:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5882:77:9"
																			},
																			"nativeSrc": "5882:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5882:79:9"
																		},
																		"nativeSrc": "5882:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5882:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5855:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5855:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5864:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5864:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5851:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5851:3:9"
																		},
																		"nativeSrc": "5851:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5876:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5876:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5847:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5847:3:9"
																},
																"nativeSrc": "5847:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5847:32:9"
															},
															"nativeSrc": "5844:119:9",
															"nodeType": "YulIf",
															"src": "5844:119:9"
														},
														{
															"nativeSrc": "5973:117:9",
															"nodeType": "YulBlock",
															"src": "5973:117:9",
															"statements": [
																{
																	"nativeSrc": "5988:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5988:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6002:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6002:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5992:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5992:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6017:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6017:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6052:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6052:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6063:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6063:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6048:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6048:3:9"
																				},
																				"nativeSrc": "6048:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6048:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6072:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6072:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6027:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6027:20:9"
																		},
																		"nativeSrc": "6027:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6027:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6017:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6017:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5768:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5804:9:9",
														"nodeType": "YulTypedName",
														"src": "5804:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5815:7:9",
														"nodeType": "YulTypedName",
														"src": "5815:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5827:6:9",
														"nodeType": "YulTypedName",
														"src": "5827:6:9",
														"type": ""
													}
												],
												"src": "5768:329:9"
											},
											{
												"body": {
													"nativeSrc": "6169:263:9",
													"nodeType": "YulBlock",
													"src": "6169:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6215:83:9",
																"nodeType": "YulBlock",
																"src": "6215:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6217:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6217:77:9"
																			},
																			"nativeSrc": "6217:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6217:79:9"
																		},
																		"nativeSrc": "6217:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6217:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6190:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6190:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6199:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6199:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6186:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:9"
																		},
																		"nativeSrc": "6186:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6211:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6211:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6182:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6182:3:9"
																},
																"nativeSrc": "6182:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6182:32:9"
															},
															"nativeSrc": "6179:119:9",
															"nodeType": "YulIf",
															"src": "6179:119:9"
														},
														{
															"nativeSrc": "6308:117:9",
															"nodeType": "YulBlock",
															"src": "6308:117:9",
															"statements": [
																{
																	"nativeSrc": "6323:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6323:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6337:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6337:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6327:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6327:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6352:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6352:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6387:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6387:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6398:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6398:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6383:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6383:3:9"
																				},
																				"nativeSrc": "6383:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6383:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6407:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6407:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6362:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6362:20:9"
																		},
																		"nativeSrc": "6362:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6362:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6352:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6352:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6103:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6139:9:9",
														"nodeType": "YulTypedName",
														"src": "6139:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6150:7:9",
														"nodeType": "YulTypedName",
														"src": "6150:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6162:6:9",
														"nodeType": "YulTypedName",
														"src": "6162:6:9",
														"type": ""
													}
												],
												"src": "6103:329:9"
											},
											{
												"body": {
													"nativeSrc": "6519:66:9",
													"nodeType": "YulBlock",
													"src": "6519:66:9",
													"statements": [
														{
															"nativeSrc": "6529:50:9",
															"nodeType": "YulAssignment",
															"src": "6529:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6573:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6573:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6542:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "6542:30:9"
																},
																"nativeSrc": "6542:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6542:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6529:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "6529:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IPriceOracle_$1589_to_t_address",
												"nativeSrc": "6438:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6499:5:9",
														"nodeType": "YulTypedName",
														"src": "6499:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6509:9:9",
														"nodeType": "YulTypedName",
														"src": "6509:9:9",
														"type": ""
													}
												],
												"src": "6438:147:9"
											},
											{
												"body": {
													"nativeSrc": "6677:87:9",
													"nodeType": "YulBlock",
													"src": "6677:87:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6694:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6694:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6751:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6751:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IPriceOracle_$1589_to_t_address",
																			"nativeSrc": "6699:51:9",
																			"nodeType": "YulIdentifier",
																			"src": "6699:51:9"
																		},
																		"nativeSrc": "6699:58:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6699:58:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6687:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6687:6:9"
																},
																"nativeSrc": "6687:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6687:71:9"
															},
															"nativeSrc": "6687:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6687:71:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IPriceOracle_$1589_to_t_address_fromStack",
												"nativeSrc": "6591:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6665:5:9",
														"nodeType": "YulTypedName",
														"src": "6665:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6672:3:9",
														"nodeType": "YulTypedName",
														"src": "6672:3:9",
														"type": ""
													}
												],
												"src": "6591:173:9"
											},
											{
												"body": {
													"nativeSrc": "6889:145:9",
													"nodeType": "YulBlock",
													"src": "6889:145:9",
													"statements": [
														{
															"nativeSrc": "6899:26:9",
															"nodeType": "YulAssignment",
															"src": "6899:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6911:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6911:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6922:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6922:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6907:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:9"
																},
																"nativeSrc": "6907:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6907:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6899:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6899:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7000:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7000:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7013:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7013:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7024:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7024:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7009:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7009:3:9"
																		},
																		"nativeSrc": "7009:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7009:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IPriceOracle_$1589_to_t_address_fromStack",
																	"nativeSrc": "6935:64:9",
																	"nodeType": "YulIdentifier",
																	"src": "6935:64:9"
																},
																"nativeSrc": "6935:92:9",
																"nodeType": "YulFunctionCall",
																"src": "6935:92:9"
															},
															"nativeSrc": "6935:92:9",
															"nodeType": "YulExpressionStatement",
															"src": "6935:92:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPriceOracle_$1589__to_t_address__fromStack_reversed",
												"nativeSrc": "6770:264:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6861:9:9",
														"nodeType": "YulTypedName",
														"src": "6861:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6873:6:9",
														"nodeType": "YulTypedName",
														"src": "6873:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6884:4:9",
														"nodeType": "YulTypedName",
														"src": "6884:4:9",
														"type": ""
													}
												],
												"src": "6770:264:9"
											},
											{
												"body": {
													"nativeSrc": "7105:53:9",
													"nodeType": "YulBlock",
													"src": "7105:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7122:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7122:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7145:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7145:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7127:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "7127:17:9"
																		},
																		"nativeSrc": "7127:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7127:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7115:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:9"
																},
																"nativeSrc": "7115:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7115:37:9"
															},
															"nativeSrc": "7115:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7115:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7040:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7093:5:9",
														"nodeType": "YulTypedName",
														"src": "7093:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7100:3:9",
														"nodeType": "YulTypedName",
														"src": "7100:3:9",
														"type": ""
													}
												],
												"src": "7040:118:9"
											},
											{
												"body": {
													"nativeSrc": "7262:124:9",
													"nodeType": "YulBlock",
													"src": "7262:124:9",
													"statements": [
														{
															"nativeSrc": "7272:26:9",
															"nodeType": "YulAssignment",
															"src": "7272:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7284:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7284:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7295:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7295:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7280:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:9"
																},
																"nativeSrc": "7280:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7280:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7272:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7272:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7352:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7352:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7365:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7365:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7376:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7376:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7361:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7361:3:9"
																		},
																		"nativeSrc": "7361:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7361:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7308:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7308:43:9"
																},
																"nativeSrc": "7308:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7308:71:9"
															},
															"nativeSrc": "7308:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7308:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7164:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7234:9:9",
														"nodeType": "YulTypedName",
														"src": "7234:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7246:6:9",
														"nodeType": "YulTypedName",
														"src": "7246:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7257:4:9",
														"nodeType": "YulTypedName",
														"src": "7257:4:9",
														"type": ""
													}
												],
												"src": "7164:222:9"
											},
											{
												"body": {
													"nativeSrc": "7475:391:9",
													"nodeType": "YulBlock",
													"src": "7475:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7521:83:9",
																"nodeType": "YulBlock",
																"src": "7521:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7523:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7523:77:9"
																			},
																			"nativeSrc": "7523:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7523:79:9"
																		},
																		"nativeSrc": "7523:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7523:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7496:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7496:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7505:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7505:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7492:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7492:3:9"
																		},
																		"nativeSrc": "7492:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7492:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7517:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7517:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7488:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:9"
																},
																"nativeSrc": "7488:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7488:32:9"
															},
															"nativeSrc": "7485:119:9",
															"nodeType": "YulIf",
															"src": "7485:119:9"
														},
														{
															"nativeSrc": "7614:117:9",
															"nodeType": "YulBlock",
															"src": "7614:117:9",
															"statements": [
																{
																	"nativeSrc": "7629:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7629:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7643:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7643:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7633:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7633:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7658:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7658:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7693:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7693:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7704:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7704:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7689:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7689:3:9"
																				},
																				"nativeSrc": "7689:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7689:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7713:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7713:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7668:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7668:20:9"
																		},
																		"nativeSrc": "7668:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7668:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7658:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7658:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7741:118:9",
															"nodeType": "YulBlock",
															"src": "7741:118:9",
															"statements": [
																{
																	"nativeSrc": "7756:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7756:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7770:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7770:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7760:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7760:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7786:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7786:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7821:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7821:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7832:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7832:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7817:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7817:3:9"
																				},
																				"nativeSrc": "7817:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7817:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7841:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7841:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7796:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7796:20:9"
																		},
																		"nativeSrc": "7796:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7796:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7786:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7786:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7392:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7437:9:9",
														"nodeType": "YulTypedName",
														"src": "7437:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7448:7:9",
														"nodeType": "YulTypedName",
														"src": "7448:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7460:6:9",
														"nodeType": "YulTypedName",
														"src": "7460:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7468:6:9",
														"nodeType": "YulTypedName",
														"src": "7468:6:9",
														"type": ""
													}
												],
												"src": "7392:474:9"
											},
											{
												"body": {
													"nativeSrc": "7900:152:9",
													"nodeType": "YulBlock",
													"src": "7900:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7917:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7917:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7920:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7920:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7910:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7910:6:9"
																},
																"nativeSrc": "7910:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7910:88:9"
															},
															"nativeSrc": "7910:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7910:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8014:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8014:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8017:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8017:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8007:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8007:6:9"
																},
																"nativeSrc": "8007:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8007:15:9"
															},
															"nativeSrc": "8007:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8007:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8038:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8038:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8041:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8041:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8031:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8031:6:9"
																},
																"nativeSrc": "8031:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8031:15:9"
															},
															"nativeSrc": "8031:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8031:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7872:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7872:180:9"
											},
											{
												"body": {
													"nativeSrc": "8109:269:9",
													"nodeType": "YulBlock",
													"src": "8109:269:9",
													"statements": [
														{
															"nativeSrc": "8119:22:9",
															"nodeType": "YulAssignment",
															"src": "8119:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8133:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8133:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8139:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8139:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8129:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8129:3:9"
																},
																"nativeSrc": "8129:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8129:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8119:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8119:6:9"
																}
															]
														},
														{
															"nativeSrc": "8150:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8150:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8180:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8180:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8186:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8186:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8176:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8176:3:9"
																},
																"nativeSrc": "8176:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8176:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8154:18:9",
																	"nodeType": "YulTypedName",
																	"src": "8154:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8227:51:9",
																"nodeType": "YulBlock",
																"src": "8227:51:9",
																"statements": [
																	{
																		"nativeSrc": "8241:27:9",
																		"nodeType": "YulAssignment",
																		"src": "8241:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8255:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "8255:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8263:4:9",
																					"nodeType": "YulLiteral",
																					"src": "8263:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8251:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8251:3:9"
																			},
																			"nativeSrc": "8251:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8251:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8241:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8241:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8207:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "8207:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8200:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8200:6:9"
																},
																"nativeSrc": "8200:26:9",
																"nodeType": "YulFunctionCall",
																"src": "8200:26:9"
															},
															"nativeSrc": "8197:81:9",
															"nodeType": "YulIf",
															"src": "8197:81:9"
														},
														{
															"body": {
																"nativeSrc": "8330:42:9",
																"nodeType": "YulBlock",
																"src": "8330:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8344:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8344:16:9"
																			},
																			"nativeSrc": "8344:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8344:18:9"
																		},
																		"nativeSrc": "8344:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8344:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8294:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "8294:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8317:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8317:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8325:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8325:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8314:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "8314:2:9"
																		},
																		"nativeSrc": "8314:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8314:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8291:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8291:2:9"
																},
																"nativeSrc": "8291:38:9",
																"nodeType": "YulFunctionCall",
																"src": "8291:38:9"
															},
															"nativeSrc": "8288:84:9",
															"nodeType": "YulIf",
															"src": "8288:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8058:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8093:4:9",
														"nodeType": "YulTypedName",
														"src": "8093:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8102:6:9",
														"nodeType": "YulTypedName",
														"src": "8102:6:9",
														"type": ""
													}
												],
												"src": "8058:320:9"
											},
											{
												"body": {
													"nativeSrc": "8490:59:9",
													"nodeType": "YulBlock",
													"src": "8490:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8512:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8512:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8520:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8520:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8508:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:9"
																		},
																		"nativeSrc": "8508:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8508:14:9"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682063555344",
																		"kind": "string",
																		"nativeSrc": "8524:17:9",
																		"nodeType": "YulLiteral",
																		"src": "8524:17:9",
																		"type": "",
																		"value": "Not enough cUSD"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8501:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8501:6:9"
																},
																"nativeSrc": "8501:41:9",
																"nodeType": "YulFunctionCall",
																"src": "8501:41:9"
															},
															"nativeSrc": "8501:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "8501:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2",
												"nativeSrc": "8384:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8482:6:9",
														"nodeType": "YulTypedName",
														"src": "8482:6:9",
														"type": ""
													}
												],
												"src": "8384:165:9"
											},
											{
												"body": {
													"nativeSrc": "8701:220:9",
													"nodeType": "YulBlock",
													"src": "8701:220:9",
													"statements": [
														{
															"nativeSrc": "8711:74:9",
															"nodeType": "YulAssignment",
															"src": "8711:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8777:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8777:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8782:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8782:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8718:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8718:58:9"
																},
																"nativeSrc": "8718:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8718:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8711:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8711:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8883:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8883:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2",
																	"nativeSrc": "8794:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8794:88:9"
																},
																"nativeSrc": "8794:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8794:93:9"
															},
															"nativeSrc": "8794:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8794:93:9"
														},
														{
															"nativeSrc": "8896:19:9",
															"nodeType": "YulAssignment",
															"src": "8896:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8907:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8907:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8912:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8912:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8903:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8903:3:9"
																},
																"nativeSrc": "8903:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8903:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8896:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8896:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8555:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8689:3:9",
														"nodeType": "YulTypedName",
														"src": "8689:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8697:3:9",
														"nodeType": "YulTypedName",
														"src": "8697:3:9",
														"type": ""
													}
												],
												"src": "8555:366:9"
											},
											{
												"body": {
													"nativeSrc": "9098:248:9",
													"nodeType": "YulBlock",
													"src": "9098:248:9",
													"statements": [
														{
															"nativeSrc": "9108:26:9",
															"nodeType": "YulAssignment",
															"src": "9108:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9120:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9120:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9131:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9131:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9116:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9116:3:9"
																},
																"nativeSrc": "9116:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9116:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9108:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9108:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9155:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9155:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9166:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9166:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9151:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9151:3:9"
																		},
																		"nativeSrc": "9151:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9151:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9174:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9174:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9180:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9180:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9170:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9170:3:9"
																		},
																		"nativeSrc": "9170:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9170:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9144:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9144:6:9"
																},
																"nativeSrc": "9144:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9144:47:9"
															},
															"nativeSrc": "9144:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9144:47:9"
														},
														{
															"nativeSrc": "9200:139:9",
															"nodeType": "YulAssignment",
															"src": "9200:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9334:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9334:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9208:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9208:124:9"
																},
																"nativeSrc": "9208:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9208:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9200:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9200:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8927:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9078:9:9",
														"nodeType": "YulTypedName",
														"src": "9078:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9093:4:9",
														"nodeType": "YulTypedName",
														"src": "9093:4:9",
														"type": ""
													}
												],
												"src": "8927:419:9"
											},
											{
												"body": {
													"nativeSrc": "9458:65:9",
													"nodeType": "YulBlock",
													"src": "9458:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9480:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9480:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9488:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9488:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9476:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9476:3:9"
																		},
																		"nativeSrc": "9476:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9476:14:9"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820636f6c6c61746572616c",
																		"kind": "string",
																		"nativeSrc": "9492:23:9",
																		"nodeType": "YulLiteral",
																		"src": "9492:23:9",
																		"type": "",
																		"value": "Not enough collateral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9469:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:9"
																},
																"nativeSrc": "9469:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9469:47:9"
															},
															"nativeSrc": "9469:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9469:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
												"nativeSrc": "9352:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9450:6:9",
														"nodeType": "YulTypedName",
														"src": "9450:6:9",
														"type": ""
													}
												],
												"src": "9352:171:9"
											},
											{
												"body": {
													"nativeSrc": "9675:220:9",
													"nodeType": "YulBlock",
													"src": "9675:220:9",
													"statements": [
														{
															"nativeSrc": "9685:74:9",
															"nodeType": "YulAssignment",
															"src": "9685:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9751:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9751:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9756:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9756:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9692:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9692:58:9"
																},
																"nativeSrc": "9692:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9692:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9685:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9685:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9857:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9857:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
																	"nativeSrc": "9768:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9768:88:9"
																},
																"nativeSrc": "9768:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9768:93:9"
															},
															"nativeSrc": "9768:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9768:93:9"
														},
														{
															"nativeSrc": "9870:19:9",
															"nodeType": "YulAssignment",
															"src": "9870:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9881:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9881:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9886:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9886:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9877:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9877:3:9"
																},
																"nativeSrc": "9877:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9877:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9870:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9870:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9529:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9663:3:9",
														"nodeType": "YulTypedName",
														"src": "9663:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9671:3:9",
														"nodeType": "YulTypedName",
														"src": "9671:3:9",
														"type": ""
													}
												],
												"src": "9529:366:9"
											},
											{
												"body": {
													"nativeSrc": "10072:248:9",
													"nodeType": "YulBlock",
													"src": "10072:248:9",
													"statements": [
														{
															"nativeSrc": "10082:26:9",
															"nodeType": "YulAssignment",
															"src": "10082:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10094:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10094:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10105:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10105:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10090:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10090:3:9"
																},
																"nativeSrc": "10090:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10090:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10082:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10082:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10129:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10129:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10140:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10140:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10125:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10125:3:9"
																		},
																		"nativeSrc": "10125:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10125:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10148:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10148:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10154:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10154:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10144:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10144:3:9"
																		},
																		"nativeSrc": "10144:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10144:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10118:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10118:6:9"
																},
																"nativeSrc": "10118:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10118:47:9"
															},
															"nativeSrc": "10118:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10118:47:9"
														},
														{
															"nativeSrc": "10174:139:9",
															"nodeType": "YulAssignment",
															"src": "10174:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10308:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10308:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10182:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10182:124:9"
																},
																"nativeSrc": "10182:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10182:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10174:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10174:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9901:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10052:9:9",
														"nodeType": "YulTypedName",
														"src": "10052:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10067:4:9",
														"nodeType": "YulTypedName",
														"src": "10067:4:9",
														"type": ""
													}
												],
												"src": "9901:419:9"
											},
											{
												"body": {
													"nativeSrc": "10389:80:9",
													"nodeType": "YulBlock",
													"src": "10389:80:9",
													"statements": [
														{
															"nativeSrc": "10399:22:9",
															"nodeType": "YulAssignment",
															"src": "10399:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10414:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10414:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10408:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10408:5:9"
																},
																"nativeSrc": "10408:13:9",
																"nodeType": "YulFunctionCall",
																"src": "10408:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10399:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10399:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10457:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10457:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10430:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "10430:26:9"
																},
																"nativeSrc": "10430:33:9",
																"nodeType": "YulFunctionCall",
																"src": "10430:33:9"
															},
															"nativeSrc": "10430:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "10430:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10326:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10367:6:9",
														"nodeType": "YulTypedName",
														"src": "10367:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10375:3:9",
														"nodeType": "YulTypedName",
														"src": "10375:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10383:5:9",
														"nodeType": "YulTypedName",
														"src": "10383:5:9",
														"type": ""
													}
												],
												"src": "10326:143:9"
											},
											{
												"body": {
													"nativeSrc": "10552:274:9",
													"nodeType": "YulBlock",
													"src": "10552:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10598:83:9",
																"nodeType": "YulBlock",
																"src": "10598:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10600:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "10600:77:9"
																			},
																			"nativeSrc": "10600:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10600:79:9"
																		},
																		"nativeSrc": "10600:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10600:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10573:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10573:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10582:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10582:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10569:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10569:3:9"
																		},
																		"nativeSrc": "10569:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10569:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10565:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10565:3:9"
																},
																"nativeSrc": "10565:32:9",
																"nodeType": "YulFunctionCall",
																"src": "10565:32:9"
															},
															"nativeSrc": "10562:119:9",
															"nodeType": "YulIf",
															"src": "10562:119:9"
														},
														{
															"nativeSrc": "10691:128:9",
															"nodeType": "YulBlock",
															"src": "10691:128:9",
															"statements": [
																{
																	"nativeSrc": "10706:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10706:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10720:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10720:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10710:6:9",
																			"nodeType": "YulTypedName",
																			"src": "10710:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10735:74:9",
																	"nodeType": "YulAssignment",
																	"src": "10735:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10781:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "10781:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10792:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "10792:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10777:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10777:3:9"
																				},
																				"nativeSrc": "10777:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10777:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10801:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10801:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10745:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "10745:31:9"
																		},
																		"nativeSrc": "10745:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10745:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10735:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "10735:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10475:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10522:9:9",
														"nodeType": "YulTypedName",
														"src": "10522:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10533:7:9",
														"nodeType": "YulTypedName",
														"src": "10533:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10545:6:9",
														"nodeType": "YulTypedName",
														"src": "10545:6:9",
														"type": ""
													}
												],
												"src": "10475:351:9"
											},
											{
												"body": {
													"nativeSrc": "10860:152:9",
													"nodeType": "YulBlock",
													"src": "10860:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10877:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10877:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10880:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10880:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10870:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10870:6:9"
																},
																"nativeSrc": "10870:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10870:88:9"
															},
															"nativeSrc": "10870:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10870:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10974:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10974:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10977:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10977:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10967:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10967:6:9"
																},
																"nativeSrc": "10967:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10967:15:9"
															},
															"nativeSrc": "10967:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10967:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10998:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10998:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11001:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11001:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10991:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10991:6:9"
																},
																"nativeSrc": "10991:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10991:15:9"
															},
															"nativeSrc": "10991:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10991:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10832:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10832:180:9"
											},
											{
												"body": {
													"nativeSrc": "11066:362:9",
													"nodeType": "YulBlock",
													"src": "11066:362:9",
													"statements": [
														{
															"nativeSrc": "11076:25:9",
															"nodeType": "YulAssignment",
															"src": "11076:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11099:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11099:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11081:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11081:17:9"
																},
																"nativeSrc": "11081:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11081:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11076:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11076:1:9"
																}
															]
														},
														{
															"nativeSrc": "11110:25:9",
															"nodeType": "YulAssignment",
															"src": "11110:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11133:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11133:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11115:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11115:17:9"
																},
																"nativeSrc": "11115:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11115:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11110:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11110:1:9"
																}
															]
														},
														{
															"nativeSrc": "11144:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "11144:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11167:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11167:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11170:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11170:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11163:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11163:3:9"
																},
																"nativeSrc": "11163:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11163:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11148:11:9",
																	"nodeType": "YulTypedName",
																	"src": "11148:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11181:41:9",
															"nodeType": "YulAssignment",
															"src": "11181:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11210:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "11210:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11192:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11192:17:9"
																},
																"nativeSrc": "11192:30:9",
																"nodeType": "YulFunctionCall",
																"src": "11192:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11181:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "11181:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11399:22:9",
																"nodeType": "YulBlock",
																"src": "11399:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11401:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11401:16:9"
																			},
																			"nativeSrc": "11401:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11401:18:9"
																		},
																		"nativeSrc": "11401:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11401:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11332:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "11332:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11325:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "11325:6:9"
																				},
																				"nativeSrc": "11325:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11325:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11355:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "11355:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11362:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "11362:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11371:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "11371:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11358:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "11358:3:9"
																						},
																						"nativeSrc": "11358:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "11358:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11352:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11352:2:9"
																				},
																				"nativeSrc": "11352:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11352:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11305:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "11305:2:9"
																		},
																		"nativeSrc": "11305:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11305:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11285:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11285:6:9"
																},
																"nativeSrc": "11285:113:9",
																"nodeType": "YulFunctionCall",
																"src": "11285:113:9"
															},
															"nativeSrc": "11282:139:9",
															"nodeType": "YulIf",
															"src": "11282:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11018:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11049:1:9",
														"nodeType": "YulTypedName",
														"src": "11049:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11052:1:9",
														"nodeType": "YulTypedName",
														"src": "11052:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11058:7:9",
														"nodeType": "YulTypedName",
														"src": "11058:7:9",
														"type": ""
													}
												],
												"src": "11018:410:9"
											},
											{
												"body": {
													"nativeSrc": "11462:152:9",
													"nodeType": "YulBlock",
													"src": "11462:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11479:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11479:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11482:77:9",
																		"nodeType": "YulLiteral",
																		"src": "11482:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11472:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11472:6:9"
																},
																"nativeSrc": "11472:88:9",
																"nodeType": "YulFunctionCall",
																"src": "11472:88:9"
															},
															"nativeSrc": "11472:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "11472:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11576:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11576:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11579:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11579:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11569:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11569:6:9"
																},
																"nativeSrc": "11569:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11569:15:9"
															},
															"nativeSrc": "11569:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "11569:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11600:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11600:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11603:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11603:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11593:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11593:6:9"
																},
																"nativeSrc": "11593:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11593:15:9"
															},
															"nativeSrc": "11593:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "11593:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11434:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "11434:180:9"
											},
											{
												"body": {
													"nativeSrc": "11662:143:9",
													"nodeType": "YulBlock",
													"src": "11662:143:9",
													"statements": [
														{
															"nativeSrc": "11672:25:9",
															"nodeType": "YulAssignment",
															"src": "11672:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11695:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11695:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11677:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11677:17:9"
																},
																"nativeSrc": "11677:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11677:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11672:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11672:1:9"
																}
															]
														},
														{
															"nativeSrc": "11706:25:9",
															"nodeType": "YulAssignment",
															"src": "11706:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11729:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11729:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11711:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11711:17:9"
																},
																"nativeSrc": "11711:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11711:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11706:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11706:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11753:22:9",
																"nodeType": "YulBlock",
																"src": "11753:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11755:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11755:16:9"
																			},
																			"nativeSrc": "11755:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11755:18:9"
																		},
																		"nativeSrc": "11755:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11755:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11750:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11750:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11743:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11743:6:9"
																},
																"nativeSrc": "11743:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11743:9:9"
															},
															"nativeSrc": "11740:35:9",
															"nodeType": "YulIf",
															"src": "11740:35:9"
														},
														{
															"nativeSrc": "11785:14:9",
															"nodeType": "YulAssignment",
															"src": "11785:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11794:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11794:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11797:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11797:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11790:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11790:3:9"
																},
																"nativeSrc": "11790:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11790:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11785:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11785:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11620:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11651:1:9",
														"nodeType": "YulTypedName",
														"src": "11651:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11654:1:9",
														"nodeType": "YulTypedName",
														"src": "11654:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11660:1:9",
														"nodeType": "YulTypedName",
														"src": "11660:1:9",
														"type": ""
													}
												],
												"src": "11620:185:9"
											},
											{
												"body": {
													"nativeSrc": "11856:149:9",
													"nodeType": "YulBlock",
													"src": "11856:149:9",
													"statements": [
														{
															"nativeSrc": "11866:25:9",
															"nodeType": "YulAssignment",
															"src": "11866:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11889:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11889:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11871:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11871:17:9"
																},
																"nativeSrc": "11871:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11871:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11866:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11866:1:9"
																}
															]
														},
														{
															"nativeSrc": "11900:25:9",
															"nodeType": "YulAssignment",
															"src": "11900:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11923:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11923:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11905:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11905:17:9"
																},
																"nativeSrc": "11905:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11905:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11900:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11900:1:9"
																}
															]
														},
														{
															"nativeSrc": "11934:17:9",
															"nodeType": "YulAssignment",
															"src": "11934:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11946:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11946:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11949:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11949:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11942:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11942:3:9"
																},
																"nativeSrc": "11942:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11942:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11934:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11934:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11976:22:9",
																"nodeType": "YulBlock",
																"src": "11976:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11978:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11978:16:9"
																			},
																			"nativeSrc": "11978:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11978:18:9"
																		},
																		"nativeSrc": "11978:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11978:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11967:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11967:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11973:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11973:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11964:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11964:2:9"
																},
																"nativeSrc": "11964:11:9",
																"nodeType": "YulFunctionCall",
																"src": "11964:11:9"
															},
															"nativeSrc": "11961:37:9",
															"nodeType": "YulIf",
															"src": "11961:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11811:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11842:1:9",
														"nodeType": "YulTypedName",
														"src": "11842:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11845:1:9",
														"nodeType": "YulTypedName",
														"src": "11845:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11851:4:9",
														"nodeType": "YulTypedName",
														"src": "11851:4:9",
														"type": ""
													}
												],
												"src": "11811:194:9"
											},
											{
												"body": {
													"nativeSrc": "12117:116:9",
													"nodeType": "YulBlock",
													"src": "12117:116:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12139:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12139:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12147:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12147:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12135:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12135:3:9"
																		},
																		"nativeSrc": "12135:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12135:14:9"
																	},
																	{
																		"hexValue": "5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c",
																		"kind": "string",
																		"nativeSrc": "12151:34:9",
																		"nodeType": "YulLiteral",
																		"src": "12151:34:9",
																		"type": "",
																		"value": "Withdrawal would undercollateral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12128:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12128:6:9"
																},
																"nativeSrc": "12128:58:9",
																"nodeType": "YulFunctionCall",
																"src": "12128:58:9"
															},
															"nativeSrc": "12128:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "12128:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12207:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12207:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12215:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12215:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12203:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12203:3:9"
																		},
																		"nativeSrc": "12203:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12203:15:9"
																	},
																	{
																		"hexValue": "697a65",
																		"kind": "string",
																		"nativeSrc": "12220:5:9",
																		"nodeType": "YulLiteral",
																		"src": "12220:5:9",
																		"type": "",
																		"value": "ize"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12196:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12196:6:9"
																},
																"nativeSrc": "12196:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12196:30:9"
															},
															"nativeSrc": "12196:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "12196:30:9"
														}
													]
												},
												"name": "store_literal_in_memory_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b",
												"nativeSrc": "12011:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12109:6:9",
														"nodeType": "YulTypedName",
														"src": "12109:6:9",
														"type": ""
													}
												],
												"src": "12011:222:9"
											},
											{
												"body": {
													"nativeSrc": "12385:220:9",
													"nodeType": "YulBlock",
													"src": "12385:220:9",
													"statements": [
														{
															"nativeSrc": "12395:74:9",
															"nodeType": "YulAssignment",
															"src": "12395:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12461:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12461:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12466:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12466:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12402:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12402:58:9"
																},
																"nativeSrc": "12402:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12402:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12395:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12395:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12567:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12567:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b",
																	"nativeSrc": "12478:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12478:88:9"
																},
																"nativeSrc": "12478:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12478:93:9"
															},
															"nativeSrc": "12478:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12478:93:9"
														},
														{
															"nativeSrc": "12580:19:9",
															"nodeType": "YulAssignment",
															"src": "12580:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12591:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12591:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12596:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12596:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12587:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12587:3:9"
																},
																"nativeSrc": "12587:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12587:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12580:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12580:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12239:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12373:3:9",
														"nodeType": "YulTypedName",
														"src": "12373:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12381:3:9",
														"nodeType": "YulTypedName",
														"src": "12381:3:9",
														"type": ""
													}
												],
												"src": "12239:366:9"
											},
											{
												"body": {
													"nativeSrc": "12782:248:9",
													"nodeType": "YulBlock",
													"src": "12782:248:9",
													"statements": [
														{
															"nativeSrc": "12792:26:9",
															"nodeType": "YulAssignment",
															"src": "12792:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12804:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12804:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12815:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12815:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12800:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12800:3:9"
																},
																"nativeSrc": "12800:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12800:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12792:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12792:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12839:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12839:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12850:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12850:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12835:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12835:3:9"
																		},
																		"nativeSrc": "12835:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12835:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12858:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12858:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12864:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12864:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12854:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12854:3:9"
																		},
																		"nativeSrc": "12854:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12854:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12828:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12828:6:9"
																},
																"nativeSrc": "12828:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12828:47:9"
															},
															"nativeSrc": "12828:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12828:47:9"
														},
														{
															"nativeSrc": "12884:139:9",
															"nodeType": "YulAssignment",
															"src": "12884:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13018:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13018:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12892:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12892:124:9"
																},
																"nativeSrc": "12892:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12892:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12884:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12884:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12611:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12762:9:9",
														"nodeType": "YulTypedName",
														"src": "12762:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12777:4:9",
														"nodeType": "YulTypedName",
														"src": "12777:4:9",
														"type": ""
													}
												],
												"src": "12611:419:9"
											},
											{
												"body": {
													"nativeSrc": "13162:206:9",
													"nodeType": "YulBlock",
													"src": "13162:206:9",
													"statements": [
														{
															"nativeSrc": "13172:26:9",
															"nodeType": "YulAssignment",
															"src": "13172:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13184:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13184:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13195:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13195:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13180:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13180:3:9"
																},
																"nativeSrc": "13180:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13180:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13172:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13172:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13252:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13252:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13265:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13265:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13276:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13276:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13261:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13261:3:9"
																		},
																		"nativeSrc": "13261:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13261:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13208:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13208:43:9"
																},
																"nativeSrc": "13208:71:9",
																"nodeType": "YulFunctionCall",
																"src": "13208:71:9"
															},
															"nativeSrc": "13208:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "13208:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13333:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13333:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13346:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13346:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13357:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13357:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13342:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13342:3:9"
																		},
																		"nativeSrc": "13342:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13342:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13289:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13289:43:9"
																},
																"nativeSrc": "13289:72:9",
																"nodeType": "YulFunctionCall",
																"src": "13289:72:9"
															},
															"nativeSrc": "13289:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "13289:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13036:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13126:9:9",
														"nodeType": "YulTypedName",
														"src": "13126:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13138:6:9",
														"nodeType": "YulTypedName",
														"src": "13138:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13146:6:9",
														"nodeType": "YulTypedName",
														"src": "13146:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13157:4:9",
														"nodeType": "YulTypedName",
														"src": "13157:4:9",
														"type": ""
													}
												],
												"src": "13036:332:9"
											},
											{
												"body": {
													"nativeSrc": "13414:76:9",
													"nodeType": "YulBlock",
													"src": "13414:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13468:16:9",
																"nodeType": "YulBlock",
																"src": "13468:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13477:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13477:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13480:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13480:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13470:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13470:6:9"
																			},
																			"nativeSrc": "13470:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13470:12:9"
																		},
																		"nativeSrc": "13470:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13470:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13437:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13437:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13459:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "13459:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13444:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "13444:14:9"
																				},
																				"nativeSrc": "13444:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13444:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13434:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "13434:2:9"
																		},
																		"nativeSrc": "13434:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13434:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13427:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13427:6:9"
																},
																"nativeSrc": "13427:40:9",
																"nodeType": "YulFunctionCall",
																"src": "13427:40:9"
															},
															"nativeSrc": "13424:60:9",
															"nodeType": "YulIf",
															"src": "13424:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13374:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13407:5:9",
														"nodeType": "YulTypedName",
														"src": "13407:5:9",
														"type": ""
													}
												],
												"src": "13374:116:9"
											},
											{
												"body": {
													"nativeSrc": "13556:77:9",
													"nodeType": "YulBlock",
													"src": "13556:77:9",
													"statements": [
														{
															"nativeSrc": "13566:22:9",
															"nodeType": "YulAssignment",
															"src": "13566:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13581:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13581:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13575:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "13575:5:9"
																},
																"nativeSrc": "13575:13:9",
																"nodeType": "YulFunctionCall",
																"src": "13575:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13566:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "13566:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13621:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13621:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13597:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "13597:23:9"
																},
																"nativeSrc": "13597:30:9",
																"nodeType": "YulFunctionCall",
																"src": "13597:30:9"
															},
															"nativeSrc": "13597:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "13597:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13496:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13534:6:9",
														"nodeType": "YulTypedName",
														"src": "13534:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13542:3:9",
														"nodeType": "YulTypedName",
														"src": "13542:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13550:5:9",
														"nodeType": "YulTypedName",
														"src": "13550:5:9",
														"type": ""
													}
												],
												"src": "13496:137:9"
											},
											{
												"body": {
													"nativeSrc": "13713:271:9",
													"nodeType": "YulBlock",
													"src": "13713:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13759:83:9",
																"nodeType": "YulBlock",
																"src": "13759:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13761:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "13761:77:9"
																			},
																			"nativeSrc": "13761:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13761:79:9"
																		},
																		"nativeSrc": "13761:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13761:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13734:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13734:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13743:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13743:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13730:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13730:3:9"
																		},
																		"nativeSrc": "13730:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13730:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13755:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13755:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13726:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13726:3:9"
																},
																"nativeSrc": "13726:32:9",
																"nodeType": "YulFunctionCall",
																"src": "13726:32:9"
															},
															"nativeSrc": "13723:119:9",
															"nodeType": "YulIf",
															"src": "13723:119:9"
														},
														{
															"nativeSrc": "13852:125:9",
															"nodeType": "YulBlock",
															"src": "13852:125:9",
															"statements": [
																{
																	"nativeSrc": "13867:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13867:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13881:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13881:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13871:6:9",
																			"nodeType": "YulTypedName",
																			"src": "13871:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13896:71:9",
																	"nodeType": "YulAssignment",
																	"src": "13896:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13939:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "13939:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13950:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "13950:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13935:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13935:3:9"
																				},
																				"nativeSrc": "13935:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13935:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13959:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13959:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13906:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "13906:28:9"
																		},
																		"nativeSrc": "13906:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13906:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13896:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "13896:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13639:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13683:9:9",
														"nodeType": "YulTypedName",
														"src": "13683:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13694:7:9",
														"nodeType": "YulTypedName",
														"src": "13694:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13706:6:9",
														"nodeType": "YulTypedName",
														"src": "13706:6:9",
														"type": ""
													}
												],
												"src": "13639:345:9"
											},
											{
												"body": {
													"nativeSrc": "14096:64:9",
													"nodeType": "YulBlock",
													"src": "14096:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14118:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14118:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14126:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14126:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14114:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14114:3:9"
																		},
																		"nativeSrc": "14114:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14114:14:9"
																	},
																	{
																		"hexValue": "63425443207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14130:22:9",
																		"nodeType": "YulLiteral",
																		"src": "14130:22:9",
																		"type": "",
																		"value": "cBTC transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14107:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14107:6:9"
																},
																"nativeSrc": "14107:46:9",
																"nodeType": "YulFunctionCall",
																"src": "14107:46:9"
															},
															"nativeSrc": "14107:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "14107:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d",
												"nativeSrc": "13990:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14088:6:9",
														"nodeType": "YulTypedName",
														"src": "14088:6:9",
														"type": ""
													}
												],
												"src": "13990:170:9"
											},
											{
												"body": {
													"nativeSrc": "14312:220:9",
													"nodeType": "YulBlock",
													"src": "14312:220:9",
													"statements": [
														{
															"nativeSrc": "14322:74:9",
															"nodeType": "YulAssignment",
															"src": "14322:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14388:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14388:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14393:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14393:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14329:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14329:58:9"
																},
																"nativeSrc": "14329:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14329:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14322:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14322:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14494:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14494:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d",
																	"nativeSrc": "14405:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14405:88:9"
																},
																"nativeSrc": "14405:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14405:93:9"
															},
															"nativeSrc": "14405:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14405:93:9"
														},
														{
															"nativeSrc": "14507:19:9",
															"nodeType": "YulAssignment",
															"src": "14507:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14518:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14518:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14523:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14523:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14514:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14514:3:9"
																},
																"nativeSrc": "14514:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14514:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14507:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14507:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14166:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14300:3:9",
														"nodeType": "YulTypedName",
														"src": "14300:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14308:3:9",
														"nodeType": "YulTypedName",
														"src": "14308:3:9",
														"type": ""
													}
												],
												"src": "14166:366:9"
											},
											{
												"body": {
													"nativeSrc": "14709:248:9",
													"nodeType": "YulBlock",
													"src": "14709:248:9",
													"statements": [
														{
															"nativeSrc": "14719:26:9",
															"nodeType": "YulAssignment",
															"src": "14719:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14731:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14731:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14742:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14742:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14727:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14727:3:9"
																},
																"nativeSrc": "14727:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14727:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14719:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14719:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14766:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14766:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14777:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14777:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14762:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14762:3:9"
																		},
																		"nativeSrc": "14762:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14762:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14785:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14785:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14791:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14791:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14781:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14781:3:9"
																		},
																		"nativeSrc": "14781:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14781:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14755:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14755:6:9"
																},
																"nativeSrc": "14755:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14755:47:9"
															},
															"nativeSrc": "14755:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14755:47:9"
														},
														{
															"nativeSrc": "14811:139:9",
															"nodeType": "YulAssignment",
															"src": "14811:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14945:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14945:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14819:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14819:124:9"
																},
																"nativeSrc": "14819:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14819:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14811:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14811:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14538:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14689:9:9",
														"nodeType": "YulTypedName",
														"src": "14689:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14704:4:9",
														"nodeType": "YulTypedName",
														"src": "14704:4:9",
														"type": ""
													}
												],
												"src": "14538:419:9"
											},
											{
												"body": {
													"nativeSrc": "15069:65:9",
													"nodeType": "YulBlock",
													"src": "15069:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15091:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15091:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15099:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15099:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15087:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15087:3:9"
																		},
																		"nativeSrc": "15087:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15087:14:9"
																	},
																	{
																		"hexValue": "526174696f206d757374206265203e3d2031303025",
																		"kind": "string",
																		"nativeSrc": "15103:23:9",
																		"nodeType": "YulLiteral",
																		"src": "15103:23:9",
																		"type": "",
																		"value": "Ratio must be >= 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15080:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15080:6:9"
																},
																"nativeSrc": "15080:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15080:47:9"
															},
															"nativeSrc": "15080:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15080:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94",
												"nativeSrc": "14963:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15061:6:9",
														"nodeType": "YulTypedName",
														"src": "15061:6:9",
														"type": ""
													}
												],
												"src": "14963:171:9"
											},
											{
												"body": {
													"nativeSrc": "15286:220:9",
													"nodeType": "YulBlock",
													"src": "15286:220:9",
													"statements": [
														{
															"nativeSrc": "15296:74:9",
															"nodeType": "YulAssignment",
															"src": "15296:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15362:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15362:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15367:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15367:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15303:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15303:58:9"
																},
																"nativeSrc": "15303:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15303:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15296:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15296:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15468:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15468:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94",
																	"nativeSrc": "15379:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15379:88:9"
																},
																"nativeSrc": "15379:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15379:93:9"
															},
															"nativeSrc": "15379:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15379:93:9"
														},
														{
															"nativeSrc": "15481:19:9",
															"nodeType": "YulAssignment",
															"src": "15481:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15492:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15492:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15497:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15497:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15488:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15488:3:9"
																},
																"nativeSrc": "15488:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15488:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15481:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15481:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15140:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15274:3:9",
														"nodeType": "YulTypedName",
														"src": "15274:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15282:3:9",
														"nodeType": "YulTypedName",
														"src": "15282:3:9",
														"type": ""
													}
												],
												"src": "15140:366:9"
											},
											{
												"body": {
													"nativeSrc": "15683:248:9",
													"nodeType": "YulBlock",
													"src": "15683:248:9",
													"statements": [
														{
															"nativeSrc": "15693:26:9",
															"nodeType": "YulAssignment",
															"src": "15693:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15705:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15705:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15716:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15716:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15701:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15701:3:9"
																},
																"nativeSrc": "15701:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15701:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15693:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15693:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15740:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15740:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15751:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15751:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15736:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15736:3:9"
																		},
																		"nativeSrc": "15736:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15736:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15759:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15759:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15765:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15765:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15755:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15755:3:9"
																		},
																		"nativeSrc": "15755:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15755:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15729:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15729:6:9"
																},
																"nativeSrc": "15729:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15729:47:9"
															},
															"nativeSrc": "15729:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15729:47:9"
														},
														{
															"nativeSrc": "15785:139:9",
															"nodeType": "YulAssignment",
															"src": "15785:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15919:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15919:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15793:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15793:124:9"
																},
																"nativeSrc": "15793:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15793:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15785:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15785:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15512:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15663:9:9",
														"nodeType": "YulTypedName",
														"src": "15663:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15678:4:9",
														"nodeType": "YulTypedName",
														"src": "15678:4:9",
														"type": ""
													}
												],
												"src": "15512:419:9"
											},
											{
												"body": {
													"nativeSrc": "16043:62:9",
													"nodeType": "YulBlock",
													"src": "16043:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16065:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16065:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16073:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16073:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16061:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16061:3:9"
																		},
																		"nativeSrc": "16061:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16061:14:9"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "16077:20:9",
																		"nodeType": "YulLiteral",
																		"src": "16077:20:9",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16054:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16054:6:9"
																},
																"nativeSrc": "16054:44:9",
																"nodeType": "YulFunctionCall",
																"src": "16054:44:9"
															},
															"nativeSrc": "16054:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "16054:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "15937:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16035:6:9",
														"nodeType": "YulTypedName",
														"src": "16035:6:9",
														"type": ""
													}
												],
												"src": "15937:168:9"
											},
											{
												"body": {
													"nativeSrc": "16257:220:9",
													"nodeType": "YulBlock",
													"src": "16257:220:9",
													"statements": [
														{
															"nativeSrc": "16267:74:9",
															"nodeType": "YulAssignment",
															"src": "16267:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16333:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16333:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16338:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16338:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16274:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16274:58:9"
																},
																"nativeSrc": "16274:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16274:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16267:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16267:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16439:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16439:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "16350:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16350:88:9"
																},
																"nativeSrc": "16350:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16350:93:9"
															},
															"nativeSrc": "16350:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16350:93:9"
														},
														{
															"nativeSrc": "16452:19:9",
															"nodeType": "YulAssignment",
															"src": "16452:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16463:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16463:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16468:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16468:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16459:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16459:3:9"
																},
																"nativeSrc": "16459:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16459:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16452:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16452:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16111:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16245:3:9",
														"nodeType": "YulTypedName",
														"src": "16245:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16253:3:9",
														"nodeType": "YulTypedName",
														"src": "16253:3:9",
														"type": ""
													}
												],
												"src": "16111:366:9"
											},
											{
												"body": {
													"nativeSrc": "16654:248:9",
													"nodeType": "YulBlock",
													"src": "16654:248:9",
													"statements": [
														{
															"nativeSrc": "16664:26:9",
															"nodeType": "YulAssignment",
															"src": "16664:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16676:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16676:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16687:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16687:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16672:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16672:3:9"
																},
																"nativeSrc": "16672:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16672:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16664:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16664:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16711:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16711:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16722:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16722:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16707:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16707:3:9"
																		},
																		"nativeSrc": "16707:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16707:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16730:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16730:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16736:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16736:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16726:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16726:3:9"
																		},
																		"nativeSrc": "16726:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16726:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16700:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16700:6:9"
																},
																"nativeSrc": "16700:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16700:47:9"
															},
															"nativeSrc": "16700:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16700:47:9"
														},
														{
															"nativeSrc": "16756:139:9",
															"nodeType": "YulAssignment",
															"src": "16756:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16890:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16890:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16764:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16764:124:9"
																},
																"nativeSrc": "16764:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16764:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16756:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16756:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16483:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16634:9:9",
														"nodeType": "YulTypedName",
														"src": "16634:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16649:4:9",
														"nodeType": "YulTypedName",
														"src": "16649:4:9",
														"type": ""
													}
												],
												"src": "16483:419:9"
											},
											{
												"body": {
													"nativeSrc": "17062:288:9",
													"nodeType": "YulBlock",
													"src": "17062:288:9",
													"statements": [
														{
															"nativeSrc": "17072:26:9",
															"nodeType": "YulAssignment",
															"src": "17072:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17084:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17084:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17095:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17095:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17080:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17080:3:9"
																},
																"nativeSrc": "17080:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17080:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17072:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17072:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17152:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17152:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17165:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17165:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17176:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17176:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17161:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17161:3:9"
																		},
																		"nativeSrc": "17161:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17161:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17108:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17108:43:9"
																},
																"nativeSrc": "17108:71:9",
																"nodeType": "YulFunctionCall",
																"src": "17108:71:9"
															},
															"nativeSrc": "17108:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "17108:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17233:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17233:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17246:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17246:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17257:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17257:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17242:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17242:3:9"
																		},
																		"nativeSrc": "17242:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17242:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17189:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17189:43:9"
																},
																"nativeSrc": "17189:72:9",
																"nodeType": "YulFunctionCall",
																"src": "17189:72:9"
															},
															"nativeSrc": "17189:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "17189:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17315:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17315:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17328:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17328:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17339:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17339:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17324:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17324:3:9"
																		},
																		"nativeSrc": "17324:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17324:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17271:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17271:43:9"
																},
																"nativeSrc": "17271:72:9",
																"nodeType": "YulFunctionCall",
																"src": "17271:72:9"
															},
															"nativeSrc": "17271:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "17271:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16908:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17018:9:9",
														"nodeType": "YulTypedName",
														"src": "17018:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17030:6:9",
														"nodeType": "YulTypedName",
														"src": "17030:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17038:6:9",
														"nodeType": "YulTypedName",
														"src": "17038:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17046:6:9",
														"nodeType": "YulTypedName",
														"src": "17046:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17057:4:9",
														"nodeType": "YulTypedName",
														"src": "17057:4:9",
														"type": ""
													}
												],
												"src": "16908:442:9"
											},
											{
												"body": {
													"nativeSrc": "17400:147:9",
													"nodeType": "YulBlock",
													"src": "17400:147:9",
													"statements": [
														{
															"nativeSrc": "17410:25:9",
															"nodeType": "YulAssignment",
															"src": "17410:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17433:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17433:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17415:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "17415:17:9"
																},
																"nativeSrc": "17415:20:9",
																"nodeType": "YulFunctionCall",
																"src": "17415:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17410:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "17410:1:9"
																}
															]
														},
														{
															"nativeSrc": "17444:25:9",
															"nodeType": "YulAssignment",
															"src": "17444:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17467:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17467:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17449:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "17449:17:9"
																},
																"nativeSrc": "17449:20:9",
																"nodeType": "YulFunctionCall",
																"src": "17449:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17444:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "17444:1:9"
																}
															]
														},
														{
															"nativeSrc": "17478:16:9",
															"nodeType": "YulAssignment",
															"src": "17478:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17489:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17489:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17492:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17492:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17485:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17485:3:9"
																},
																"nativeSrc": "17485:9:9",
																"nodeType": "YulFunctionCall",
																"src": "17485:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17478:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17478:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17518:22:9",
																"nodeType": "YulBlock",
																"src": "17518:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17520:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "17520:16:9"
																			},
																			"nativeSrc": "17520:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17520:18:9"
																		},
																		"nativeSrc": "17520:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "17520:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17510:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17510:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17513:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17513:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17507:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "17507:2:9"
																},
																"nativeSrc": "17507:10:9",
																"nodeType": "YulFunctionCall",
																"src": "17507:10:9"
															},
															"nativeSrc": "17504:36:9",
															"nodeType": "YulIf",
															"src": "17504:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17356:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17387:1:9",
														"nodeType": "YulTypedName",
														"src": "17387:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17390:1:9",
														"nodeType": "YulTypedName",
														"src": "17390:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17396:3:9",
														"nodeType": "YulTypedName",
														"src": "17396:3:9",
														"type": ""
													}
												],
												"src": "17356:191:9"
											},
											{
												"body": {
													"nativeSrc": "17659:70:9",
													"nodeType": "YulBlock",
													"src": "17659:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17681:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17681:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17689:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17689:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17677:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17677:3:9"
																		},
																		"nativeSrc": "17677:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17677:14:9"
																	},
																	{
																		"hexValue": "4c697175696461746f72206e6f7420656e6f7567682063555344",
																		"kind": "string",
																		"nativeSrc": "17693:28:9",
																		"nodeType": "YulLiteral",
																		"src": "17693:28:9",
																		"type": "",
																		"value": "Liquidator not enough cUSD"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17670:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17670:6:9"
																},
																"nativeSrc": "17670:52:9",
																"nodeType": "YulFunctionCall",
																"src": "17670:52:9"
															},
															"nativeSrc": "17670:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "17670:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74",
												"nativeSrc": "17553:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17651:6:9",
														"nodeType": "YulTypedName",
														"src": "17651:6:9",
														"type": ""
													}
												],
												"src": "17553:176:9"
											},
											{
												"body": {
													"nativeSrc": "17881:220:9",
													"nodeType": "YulBlock",
													"src": "17881:220:9",
													"statements": [
														{
															"nativeSrc": "17891:74:9",
															"nodeType": "YulAssignment",
															"src": "17891:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17957:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17957:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17962:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17962:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17898:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17898:58:9"
																},
																"nativeSrc": "17898:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17898:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17891:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17891:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18063:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18063:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74",
																	"nativeSrc": "17974:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17974:88:9"
																},
																"nativeSrc": "17974:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17974:93:9"
															},
															"nativeSrc": "17974:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17974:93:9"
														},
														{
															"nativeSrc": "18076:19:9",
															"nodeType": "YulAssignment",
															"src": "18076:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18087:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18087:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18092:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18092:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18083:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18083:3:9"
																},
																"nativeSrc": "18083:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18083:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18076:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18076:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17735:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17869:3:9",
														"nodeType": "YulTypedName",
														"src": "17869:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17877:3:9",
														"nodeType": "YulTypedName",
														"src": "17877:3:9",
														"type": ""
													}
												],
												"src": "17735:366:9"
											},
											{
												"body": {
													"nativeSrc": "18278:248:9",
													"nodeType": "YulBlock",
													"src": "18278:248:9",
													"statements": [
														{
															"nativeSrc": "18288:26:9",
															"nodeType": "YulAssignment",
															"src": "18288:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18300:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18300:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18311:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18311:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18296:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18296:3:9"
																},
																"nativeSrc": "18296:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18296:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18288:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18288:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18335:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18335:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18346:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18346:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18331:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18331:3:9"
																		},
																		"nativeSrc": "18331:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18331:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18354:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18354:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18360:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18360:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18350:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18350:3:9"
																		},
																		"nativeSrc": "18350:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18350:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18324:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18324:6:9"
																},
																"nativeSrc": "18324:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18324:47:9"
															},
															"nativeSrc": "18324:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18324:47:9"
														},
														{
															"nativeSrc": "18380:139:9",
															"nodeType": "YulAssignment",
															"src": "18380:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18514:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18514:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18388:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18388:124:9"
																},
																"nativeSrc": "18388:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18388:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18380:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18380:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18107:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18258:9:9",
														"nodeType": "YulTypedName",
														"src": "18258:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18273:4:9",
														"nodeType": "YulTypedName",
														"src": "18273:4:9",
														"type": ""
													}
												],
												"src": "18107:419:9"
											},
											{
												"body": {
													"nativeSrc": "18658:206:9",
													"nodeType": "YulBlock",
													"src": "18658:206:9",
													"statements": [
														{
															"nativeSrc": "18668:26:9",
															"nodeType": "YulAssignment",
															"src": "18668:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18680:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18680:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18691:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18691:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18676:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18676:3:9"
																},
																"nativeSrc": "18676:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18676:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18668:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18668:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18748:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18748:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18761:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18761:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18772:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18772:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18757:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18757:3:9"
																		},
																		"nativeSrc": "18757:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18757:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18704:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18704:43:9"
																},
																"nativeSrc": "18704:71:9",
																"nodeType": "YulFunctionCall",
																"src": "18704:71:9"
															},
															"nativeSrc": "18704:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "18704:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18829:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18829:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18842:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18842:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18853:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18853:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18838:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18838:3:9"
																		},
																		"nativeSrc": "18838:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18838:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18785:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18785:43:9"
																},
																"nativeSrc": "18785:72:9",
																"nodeType": "YulFunctionCall",
																"src": "18785:72:9"
															},
															"nativeSrc": "18785:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "18785:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18532:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18622:9:9",
														"nodeType": "YulTypedName",
														"src": "18622:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18634:6:9",
														"nodeType": "YulTypedName",
														"src": "18634:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18642:6:9",
														"nodeType": "YulTypedName",
														"src": "18642:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18653:4:9",
														"nodeType": "YulTypedName",
														"src": "18653:4:9",
														"type": ""
													}
												],
												"src": "18532:332:9"
											},
											{
												"body": {
													"nativeSrc": "18976:56:9",
													"nodeType": "YulBlock",
													"src": "18976:56:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18998:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18998:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19006:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19006:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18994:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18994:3:9"
																		},
																		"nativeSrc": "18994:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18994:14:9"
																	},
																	{
																		"hexValue": "46656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "19010:14:9",
																		"nodeType": "YulLiteral",
																		"src": "19010:14:9",
																		"type": "",
																		"value": "Fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18987:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18987:6:9"
																},
																"nativeSrc": "18987:38:9",
																"nodeType": "YulFunctionCall",
																"src": "18987:38:9"
															},
															"nativeSrc": "18987:38:9",
															"nodeType": "YulExpressionStatement",
															"src": "18987:38:9"
														}
													]
												},
												"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
												"nativeSrc": "18870:162:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18968:6:9",
														"nodeType": "YulTypedName",
														"src": "18968:6:9",
														"type": ""
													}
												],
												"src": "18870:162:9"
											},
											{
												"body": {
													"nativeSrc": "19184:220:9",
													"nodeType": "YulBlock",
													"src": "19184:220:9",
													"statements": [
														{
															"nativeSrc": "19194:74:9",
															"nodeType": "YulAssignment",
															"src": "19194:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19260:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19260:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19265:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19265:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19201:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19201:58:9"
																},
																"nativeSrc": "19201:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19201:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19194:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19194:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19366:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																	"nativeSrc": "19277:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19277:88:9"
																},
																"nativeSrc": "19277:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19277:93:9"
															},
															"nativeSrc": "19277:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19277:93:9"
														},
														{
															"nativeSrc": "19379:19:9",
															"nodeType": "YulAssignment",
															"src": "19379:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19390:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19390:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19395:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19395:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19386:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19386:3:9"
																},
																"nativeSrc": "19386:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19386:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19379:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19379:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19038:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19172:3:9",
														"nodeType": "YulTypedName",
														"src": "19172:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19180:3:9",
														"nodeType": "YulTypedName",
														"src": "19180:3:9",
														"type": ""
													}
												],
												"src": "19038:366:9"
											},
											{
												"body": {
													"nativeSrc": "19581:248:9",
													"nodeType": "YulBlock",
													"src": "19581:248:9",
													"statements": [
														{
															"nativeSrc": "19591:26:9",
															"nodeType": "YulAssignment",
															"src": "19591:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19603:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19603:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19614:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19614:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19599:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19599:3:9"
																},
																"nativeSrc": "19599:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19599:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19591:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19591:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19638:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19638:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19649:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19649:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19634:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19634:3:9"
																		},
																		"nativeSrc": "19634:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19634:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19657:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19657:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19663:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19663:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19653:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19653:3:9"
																		},
																		"nativeSrc": "19653:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19653:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19627:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19627:6:9"
																},
																"nativeSrc": "19627:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19627:47:9"
															},
															"nativeSrc": "19627:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19627:47:9"
														},
														{
															"nativeSrc": "19683:139:9",
															"nodeType": "YulAssignment",
															"src": "19683:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19817:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19817:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19691:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19691:124:9"
																},
																"nativeSrc": "19691:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19691:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19683:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19683:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19410:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19561:9:9",
														"nodeType": "YulTypedName",
														"src": "19561:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19576:4:9",
														"nodeType": "YulTypedName",
														"src": "19576:4:9",
														"type": ""
													}
												],
												"src": "19410:419:9"
											},
											{
												"body": {
													"nativeSrc": "19989:288:9",
													"nodeType": "YulBlock",
													"src": "19989:288:9",
													"statements": [
														{
															"nativeSrc": "19999:26:9",
															"nodeType": "YulAssignment",
															"src": "19999:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20011:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20011:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20022:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20022:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20007:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20007:3:9"
																},
																"nativeSrc": "20007:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20007:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19999:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19999:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20079:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20079:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20092:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20092:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20103:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20103:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20088:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20088:3:9"
																		},
																		"nativeSrc": "20088:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20088:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20035:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20035:43:9"
																},
																"nativeSrc": "20035:71:9",
																"nodeType": "YulFunctionCall",
																"src": "20035:71:9"
															},
															"nativeSrc": "20035:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "20035:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20160:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20160:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20173:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20173:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20184:2:9",
																				"nodeType": "YulLiteral",
																				"src": "20184:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20169:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20169:3:9"
																		},
																		"nativeSrc": "20169:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20169:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20116:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20116:43:9"
																},
																"nativeSrc": "20116:72:9",
																"nodeType": "YulFunctionCall",
																"src": "20116:72:9"
															},
															"nativeSrc": "20116:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "20116:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20242:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20242:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20255:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20255:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20266:2:9",
																				"nodeType": "YulLiteral",
																				"src": "20266:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20251:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20251:3:9"
																		},
																		"nativeSrc": "20251:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20251:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20198:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20198:43:9"
																},
																"nativeSrc": "20198:72:9",
																"nodeType": "YulFunctionCall",
																"src": "20198:72:9"
															},
															"nativeSrc": "20198:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "20198:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19835:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19945:9:9",
														"nodeType": "YulTypedName",
														"src": "19945:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19957:6:9",
														"nodeType": "YulTypedName",
														"src": "19957:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19965:6:9",
														"nodeType": "YulTypedName",
														"src": "19965:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19973:6:9",
														"nodeType": "YulTypedName",
														"src": "19973:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19984:4:9",
														"nodeType": "YulTypedName",
														"src": "19984:4:9",
														"type": ""
													}
												],
												"src": "19835:442:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IPriceOracle_$1589_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IPriceOracle_$1589_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IPriceOracle_$1589_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IPriceOracle_$1589__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IPriceOracle_$1589_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough cUSD\")\n\n    }\n\n    function abi_encode_t_stringliteral_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal would undercollateral\")\n\n        mstore(add(memPtr, 32), \"ize\")\n\n    }\n\n    function abi_encode_t_stringliteral_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d(memPtr) {\n\n        mstore(add(memPtr, 0), \"cBTC transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ratio must be >= 100%\")\n\n    }\n\n    function abi_encode_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74(memPtr) {\n\n        mstore(add(memPtr, 0), \"Liquidator not enough cUSD\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fee too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101c2575f3560e01c80638da5cb5b116100f7578063bcbaf48711610095578063dd62ed3e1161006f578063dd62ed3e146104d0578063ea629db014610500578063f2fde38b1461051c578063fb4ca35b14610538576101c2565b8063bcbaf48714610478578063cd377c5314610494578063d7e72708146104b2576101c2565b8063a6afed95116100d1578063a6afed95146103f0578063a9059cbb146103fa578063b4eae1cb1461042a578063b6f7132f14610448576101c2565b80638da5cb5b1461039857806395d89b41146103b6578063a5d5db0c146103d4576101c2565b8063350c35e9116101645780636060663e1161013e5780636060663e1461032457806370a0823114610340578063715018a6146103705780637dc0d1d01461037a576101c2565b8063350c35e9146102ba578063361416e1146102d65780634e8d048b146102f4576101c2565b80631455b3ab116101a05780631455b3ab1461023257806318160ddd1461024e57806323b872dd1461026c578063313ce5671461029c576101c2565b806306fdde03146101c6578063095ea7b3146101e45780630ae8c4dc14610214575b5f80fd5b6101ce610554565b6040516101db9190611f76565b60405180910390f35b6101fe60048036038101906101f99190612027565b6105e4565b60405161020b919061207f565b60405180910390f35b61021c610606565b60405161022991906120f3565b60405180910390f35b61024c60048036038101906102479190612027565b61062b565b005b6102566106da565b604051610263919061211b565b60405180910390f35b61028660048036038101906102819190612134565b6106e3565b604051610293919061207f565b60405180910390f35b6102a4610711565b6040516102b1919061219f565b60405180910390f35b6102d460048036038101906102cf9190612027565b610719565b005b6102de610b0d565b6040516102eb919061211b565b60405180910390f35b61030e600480360381019061030991906121b8565b610b13565b60405161031b919061211b565b60405180910390f35b61033e600480360381019061033991906121e3565b610b28565b005b61035a600480360381019061035591906121b8565b610b85565b604051610367919061211b565b60405180910390f35b610378610bca565b005b610382610bdd565b60405161038f919061222e565b60405180910390f35b6103a0610c02565b6040516103ad9190612256565b60405180910390f35b6103be610c2a565b6040516103cb9190611f76565b60405180910390f35b6103ee60048036038101906103e99190612027565b610cba565b005b6103f8610e7e565b005b610414600480360381019061040f9190612027565b610f13565b604051610421919061207f565b60405180910390f35b610432610f35565b60405161043f919061211b565b60405180910390f35b610462600480360381019061045d91906121b8565b610f3b565b60405161046f919061211b565b60405180910390f35b610492600480360381019061048d9190612027565b610f81565b005b61049c6113cd565b6040516104a9919061211b565b60405180910390f35b6104ba6113d6565b6040516104c7919061211b565b60405180910390f35b6104ea60048036038101906104e5919061226f565b6113dc565b6040516104f7919061211b565b60405180910390f35b61051a60048036038101906105159190612027565b61145e565b005b610536600480360381019061053191906121b8565b611646565b005b610552600480360381019061054d91906121e3565b6116ca565b005b606060038054610563906122da565b80601f016020809104026020016040519081016040528092919081815260200182805461058f906122da565b80156105da5780601f106105b1576101008083540402835291602001916105da565b820191905f5260205f20905b8154815290600101906020018083116105bd57829003601f168201915b5050505050905090565b5f806105ee611721565b90506105fb818585611728565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610633610e7e565b8061063d83610b85565b101561067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067590612354565b60405180910390fd5b610688828261173a565b8173ffffffffffffffffffffffffffffffffffffffff167f4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b9369826040516106ce919061211b565b60405180910390a25050565b5f600254905090565b5f806106ed611721565b90506106fa8582856117b9565b61070585858561184b565b60019150509392505050565b5f6012905090565b610721610e7e565b600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548111156107a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610798906123bc565b60405180910390fd5b5f6107ab83610b85565b90505f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e0960065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108299190612256565b602060405180830381865afa158015610844573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061086891906123ee565b90505f670de0b6b3a7640000600854846108829190612446565b61088c91906124b4565b905081670de0b6b3a7640000826108a39190612446565b6108ad91906124b4565b90505f81600b5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054116108fa575f610944565b81600b5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461094391906124e4565b5b905080851115610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098090612587565b60405180910390fd5b84600b5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109d591906124e4565b9250508190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87876040518363ffffffff1660e01b8152600401610a389291906125a5565b6020604051808303815f875af1158015610a54573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a7891906125f6565b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae9061266b565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff167fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d86604051610afd919061211b565b60405180910390a2505050505050565b60095481565b600b602052805f5260405f205f915090505481565b610b3061193b565b670de0b6b3a7640000811015610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b72906126d3565b60405180910390fd5b8060088190555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610bd261193b565b610bdb5f6119c2565b565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610c39906122da565b80601f0160208091040260200160405190810160405280929190818152602001828054610c65906122da565b8015610cb05780601f10610c8757610100808354040283529160200191610cb0565b820191905f5260205f20905b815481529060010190602001808311610c9357829003601f168201915b5050505050905090565b5f8111610cfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf39061273b565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401610d5a93929190612759565b6020604051808303815f875af1158015610d76573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9a91906125f6565b610dd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd09061266b565b60405180910390fd5b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e25919061278e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a135848014282604051610e72919061211b565b60405180910390a25050565b5f600a5442610e8d91906124e4565b90505f81118015610ea457505f610ea26106da565b115b15610f10575f6301e1338082600954610ebd9190612446565b610ec791906124b4565b90505f61271082610ed66106da565b610ee09190612446565b610eea91906124b4565b90505f811115610f0657610f05610eff610c02565b82611a85565b5b42600a8190555050505b50565b5f80610f1d611721565b9050610f2a81858561184b565b600191505092915050565b60085481565b5f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610f89610e7e565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e0960065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016110059190612256565b602060405180830381865afa158015611020573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061104491906123ee565b90505f61105084610b85565b90505f81036110605750506113c9565b5f670de0b6b3a7640000600854836110789190612446565b61108291906124b4565b90505f670de0b6b3a764000084600b5f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110d79190612446565b6110e191906124b4565b9050818110156113c4575f8386116110f957856110fb565b835b90508061110733610b85565b1015611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f9061280b565b60405180910390fd5b61115333308361184b565b61115d308261173a565b5f670de0b6b3a7640000600854836111759190612446565b61117f91906124b4565b905085670de0b6b3a7640000826111969190612446565b6111a091906124b4565b90506064606e826111b19190612446565b6111bb91906124b4565b9050600b5f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481111561124357600b5f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505b80600b5f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461128f91906124e4565b9250508190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016112f29291906125a5565b6020604051808303815f875af115801561130e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061133291906125f6565b611371576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113689061266b565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff167f09c223cfcd8c93e245f558f5f8de755fc0930fd9bc257441155ef5d54a170e0f83836040516113b9929190612829565b60405180910390a250505b505050505b5050565b5f600854905090565b600a5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611466610e7e565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e0960065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016114e29190612256565b602060405180830381865afa1580156114fd573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061152191906123ee565b90505f670de0b6b3a76400006008548461153b9190612446565b61154591906124b4565b905081670de0b6b3a76400008261155c9190612446565b61156691906124b4565b905080600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156115e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115df906123bc565b60405180910390fd5b6115f28484611a85565b3373ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe84604051611638919061211b565b60405180910390a250505050565b61164e61193b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116be575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116b59190612256565b60405180910390fd5b6116c7816119c2565b50565b6116d261193b565b6107d0811115611717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170e9061289a565b60405180910390fd5b8060098190555050565b5f33905090565b6117358383836001611b04565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117aa575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117a19190612256565b60405180910390fd5b6117b5825f83611cd3565b5050565b5f6117c484846113dc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146118455781811015611836578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161182d939291906128b8565b60405180910390fd5b61184484848484035f611b04565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118bb575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016118b29190612256565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361192b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119229190612256565b60405180910390fd5b611936838383611cd3565b505050565b611943611721565b73ffffffffffffffffffffffffffffffffffffffff16611961610c02565b73ffffffffffffffffffffffffffffffffffffffff16146119c057611984611721565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016119b79190612256565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611af5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611aec9190612256565b60405180910390fd5b611b005f8383611cd3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b74575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611b6b9190612256565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611be4575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611bdb9190612256565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611ccd578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611cc4919061211b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d23578060025f828254611d17919061278e565b92505081905550611df1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611dac578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611da3939291906128b8565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e38578060025f8282540392505081905550611e82565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611edf919061211b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611f23578082015181840152602081019050611f08565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611f4882611eec565b611f528185611ef6565b9350611f62818560208601611f06565b611f6b81611f2e565b840191505092915050565b5f6020820190508181035f830152611f8e8184611f3e565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611fc382611f9a565b9050919050565b611fd381611fb9565b8114611fdd575f80fd5b50565b5f81359050611fee81611fca565b92915050565b5f819050919050565b61200681611ff4565b8114612010575f80fd5b50565b5f8135905061202181611ffd565b92915050565b5f806040838503121561203d5761203c611f96565b5b5f61204a85828601611fe0565b925050602061205b85828601612013565b9150509250929050565b5f8115159050919050565b61207981612065565b82525050565b5f6020820190506120925f830184612070565b92915050565b5f819050919050565b5f6120bb6120b66120b184611f9a565b612098565b611f9a565b9050919050565b5f6120cc826120a1565b9050919050565b5f6120dd826120c2565b9050919050565b6120ed816120d3565b82525050565b5f6020820190506121065f8301846120e4565b92915050565b61211581611ff4565b82525050565b5f60208201905061212e5f83018461210c565b92915050565b5f805f6060848603121561214b5761214a611f96565b5b5f61215886828701611fe0565b935050602061216986828701611fe0565b925050604061217a86828701612013565b9150509250925092565b5f60ff82169050919050565b61219981612184565b82525050565b5f6020820190506121b25f830184612190565b92915050565b5f602082840312156121cd576121cc611f96565b5b5f6121da84828501611fe0565b91505092915050565b5f602082840312156121f8576121f7611f96565b5b5f61220584828501612013565b91505092915050565b5f612218826120c2565b9050919050565b6122288161220e565b82525050565b5f6020820190506122415f83018461221f565b92915050565b61225081611fb9565b82525050565b5f6020820190506122695f830184612247565b92915050565b5f806040838503121561228557612284611f96565b5b5f61229285828601611fe0565b92505060206122a385828601611fe0565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122f157607f821691505b602082108103612304576123036122ad565b5b50919050565b7f4e6f7420656e6f756768206355534400000000000000000000000000000000005f82015250565b5f61233e600f83611ef6565b91506123498261230a565b602082019050919050565b5f6020820190508181035f83015261236b81612332565b9050919050565b7f4e6f7420656e6f75676820636f6c6c61746572616c00000000000000000000005f82015250565b5f6123a6601583611ef6565b91506123b182612372565b602082019050919050565b5f6020820190508181035f8301526123d38161239a565b9050919050565b5f815190506123e881611ffd565b92915050565b5f6020828403121561240357612402611f96565b5b5f612410848285016123da565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61245082611ff4565b915061245b83611ff4565b925082820261246981611ff4565b915082820484148315176124805761247f612419565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6124be82611ff4565b91506124c983611ff4565b9250826124d9576124d8612487565b5b828204905092915050565b5f6124ee82611ff4565b91506124f983611ff4565b925082820390508181111561251157612510612419565b5b92915050565b7f5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c5f8201527f697a650000000000000000000000000000000000000000000000000000000000602082015250565b5f612571602383611ef6565b915061257c82612517565b604082019050919050565b5f6020820190508181035f83015261259e81612565565b9050919050565b5f6040820190506125b85f830185612247565b6125c5602083018461210c565b9392505050565b6125d581612065565b81146125df575f80fd5b50565b5f815190506125f0816125cc565b92915050565b5f6020828403121561260b5761260a611f96565b5b5f612618848285016125e2565b91505092915050565b7f63425443207472616e73666572206661696c65640000000000000000000000005f82015250565b5f612655601483611ef6565b915061266082612621565b602082019050919050565b5f6020820190508181035f83015261268281612649565b9050919050565b7f526174696f206d757374206265203e3d203130302500000000000000000000005f82015250565b5f6126bd601583611ef6565b91506126c882612689565b602082019050919050565b5f6020820190508181035f8301526126ea816126b1565b9050919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f612725601283611ef6565b9150612730826126f1565b602082019050919050565b5f6020820190508181035f83015261275281612719565b9050919050565b5f60608201905061276c5f830186612247565b6127796020830185612247565b612786604083018461210c565b949350505050565b5f61279882611ff4565b91506127a383611ff4565b92508282019050808211156127bb576127ba612419565b5b92915050565b7f4c697175696461746f72206e6f7420656e6f75676820635553440000000000005f82015250565b5f6127f5601a83611ef6565b9150612800826127c1565b602082019050919050565b5f6020820190508181035f830152612822816127e9565b9050919050565b5f60408201905061283c5f83018561210c565b612849602083018461210c565b9392505050565b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f612884600c83611ef6565b915061288f82612850565b602082019050919050565b5f6020820190508181035f8301526128b181612878565b9050919050565b5f6060820190506128cb5f830186612247565b6128d8602083018561210c565b6128e5604083018461210c565b94935050505056fea2646970667358221220114ab43328aaca5c3f2996a132a5ff5dc3d383dc4267e9a438d4ba8f9239f2c164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBCBAF487 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xEA629DB0 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xFB4CA35B EQ PUSH2 0x538 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xBCBAF487 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xCD377C53 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xD7E72708 EQ PUSH2 0x4B2 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xA6AFED95 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA6AFED95 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xB4EAE1CB EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xB6F7132F EQ PUSH2 0x448 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xA5D5DB0C EQ PUSH2 0x3D4 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x350C35E9 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x6060663E GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x6060663E EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x37A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x350C35E9 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x361416E1 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x4E8D048B EQ PUSH2 0x2F4 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1455B3AB GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x1455B3AB EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29C JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xAE8C4DC EQ PUSH2 0x214 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CE PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0xB28 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x378 PUSH2 0xBCA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x382 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A0 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BE PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F8 PUSH2 0xE7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0xF81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49C PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BA PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x145E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x536 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1646 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x563 SWAP1 PUSH2 0x22DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58F SWAP1 PUSH2 0x22DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5EE PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FB DUP2 DUP6 DUP6 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x633 PUSH2 0xE7E JUMP JUMPDEST DUP1 PUSH2 0x63D DUP4 PUSH2 0xB85 JUMP JUMPDEST LT ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x2354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH2 0x173A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6ED PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP PUSH2 0x6FA DUP6 DUP3 DUP6 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x705 DUP6 DUP6 DUP6 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x721 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7AB DUP4 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x844 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x868 SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SLOAD DUP5 PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0xB PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x8FA JUMPI PUSH0 PUSH2 0x944 JUMP JUMPDEST DUP2 PUSH1 0xB PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP1 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0xB PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP3 SWAP2 SWAP1 PUSH2 0x25A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D DUP7 PUSH1 0x40 MLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB30 PUSH2 0x193B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB72 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD2 PUSH2 0x193B JUMP JUMPDEST PUSH2 0xBDB PUSH0 PUSH2 0x19C2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC39 SWAP1 PUSH2 0x22DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC65 SWAP1 PUSH2 0x22DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCB0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCB0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC93 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF3 SWAP1 PUSH2 0x273B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD76 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9A SWAP2 SWAP1 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD0 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE25 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE72 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA SLOAD TIMESTAMP PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xEA4 JUMPI POP PUSH0 PUSH2 0xEA2 PUSH2 0x6DA JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xF10 JUMPI PUSH0 PUSH4 0x1E13380 DUP3 PUSH1 0x9 SLOAD PUSH2 0xEBD SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP3 PUSH2 0xED6 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0xEE0 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xF06 JUMPI PUSH2 0xF05 PUSH2 0xEFF PUSH2 0xC02 JUMP JUMPDEST DUP3 PUSH2 0x1A85 JUMP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF1D PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP PUSH2 0xF2A DUP2 DUP6 DUP6 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF89 PUSH2 0xE7E JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1005 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1020 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1050 DUP5 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1060 JUMPI POP POP PUSH2 0x13C9 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH1 0xB PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13C4 JUMPI PUSH0 DUP4 DUP7 GT PUSH2 0x10F9 JUMPI DUP6 PUSH2 0x10FB JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP DUP1 PUSH2 0x1107 CALLER PUSH2 0xB85 JUMP JUMPDEST LT ISZERO PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113F SWAP1 PUSH2 0x280B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1153 CALLER ADDRESS DUP4 PUSH2 0x184B JUMP JUMPDEST PUSH2 0x115D ADDRESS DUP3 PUSH2 0x173A JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1175 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x117F SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP DUP6 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x1196 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH1 0x6E DUP3 PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1243 JUMPI PUSH1 0xB PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x128F SWAP2 SWAP1 PUSH2 0x24E4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F2 SWAP3 SWAP2 SWAP1 PUSH2 0x25A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x130E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0x1371 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1368 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C223CFCD8C93E245F558F5F8DE755FC0930FD9BC257441155EF5D54A170E0F DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13B9 SWAP3 SWAP2 SWAP1 PUSH2 0x2829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1466 PUSH2 0xE7E JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1521 SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SLOAD DUP5 PUSH2 0x153B SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x155C SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH2 0x1566 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DF SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15F2 DUP5 DUP5 PUSH2 0x1A85 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP5 PUSH1 0x40 MLOAD PUSH2 0x1638 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x164E PUSH2 0x193B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16BE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B5 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16C7 DUP2 PUSH2 0x19C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16D2 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x1717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170E SWAP1 PUSH2 0x289A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1735 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B04 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17AA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A1 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17B5 DUP3 PUSH0 DUP4 PUSH2 0x1CD3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17C4 DUP5 DUP5 PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1845 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1836 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1844 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1B04 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18BB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B2 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x192B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1922 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1936 DUP4 DUP4 DUP4 PUSH2 0x1CD3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1943 PUSH2 0x1721 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1961 PUSH2 0xC02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19C0 JUMPI PUSH2 0x1984 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B7 SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AF5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEC SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B00 PUSH0 DUP4 DUP4 PUSH2 0x1CD3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B74 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6B SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BE4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDB SWAP2 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1CCD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CC4 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D23 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D17 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1DF1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1DAC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E38 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E82 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EDF SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F23 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F08 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F48 DUP3 PUSH2 0x1EEC JUMP JUMPDEST PUSH2 0x1F52 DUP2 DUP6 PUSH2 0x1EF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F62 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F06 JUMP JUMPDEST PUSH2 0x1F6B DUP2 PUSH2 0x1F2E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F8E DUP2 DUP5 PUSH2 0x1F3E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC3 DUP3 PUSH2 0x1F9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FD3 DUP2 PUSH2 0x1FB9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FDD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FEE DUP2 PUSH2 0x1FCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2006 DUP2 PUSH2 0x1FF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2010 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2021 DUP2 PUSH2 0x1FFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x203D JUMPI PUSH2 0x203C PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x204A DUP6 DUP3 DUP7 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x205B DUP6 DUP3 DUP7 ADD PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2079 DUP2 PUSH2 0x2065 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2092 PUSH0 DUP4 ADD DUP5 PUSH2 0x2070 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20BB PUSH2 0x20B6 PUSH2 0x20B1 DUP5 PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x1F9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20CC DUP3 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20DD DUP3 PUSH2 0x20C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20ED DUP2 PUSH2 0x20D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2106 PUSH0 DUP4 ADD DUP5 PUSH2 0x20E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2115 DUP2 PUSH2 0x1FF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x212E PUSH0 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x214B JUMPI PUSH2 0x214A PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2158 DUP7 DUP3 DUP8 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2169 DUP7 DUP3 DUP8 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x217A DUP7 DUP3 DUP8 ADD PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2199 DUP2 PUSH2 0x2184 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x2190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21CD JUMPI PUSH2 0x21CC PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21DA DUP5 DUP3 DUP6 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F8 JUMPI PUSH2 0x21F7 PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2205 DUP5 DUP3 DUP6 ADD PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2218 DUP3 PUSH2 0x20C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2228 DUP2 PUSH2 0x220E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2241 PUSH0 DUP4 ADD DUP5 PUSH2 0x221F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2250 DUP2 PUSH2 0x1FB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2269 PUSH0 DUP4 ADD DUP5 PUSH2 0x2247 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2285 JUMPI PUSH2 0x2284 PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2292 DUP6 DUP3 DUP7 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22F1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2304 JUMPI PUSH2 0x2303 PUSH2 0x22AD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820635553440000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x233E PUSH1 0xF DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2349 DUP3 PUSH2 0x230A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x236B DUP2 PUSH2 0x2332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820636F6C6C61746572616C0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23A6 PUSH1 0x15 DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B1 DUP3 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23D3 DUP2 PUSH2 0x239A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x23E8 DUP2 PUSH2 0x1FFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2403 JUMPI PUSH2 0x2402 PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2410 DUP5 DUP3 DUP6 ADD PUSH2 0x23DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2450 DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x245B DUP4 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2469 DUP2 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2480 JUMPI PUSH2 0x247F PUSH2 0x2419 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x24BE DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x24C9 DUP4 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24D9 JUMPI PUSH2 0x24D8 PUSH2 0x2487 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24EE DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x24F9 DUP4 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2511 JUMPI PUSH2 0x2510 PUSH2 0x2419 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20776F756C6420756E646572636F6C6C61746572616C PUSH0 DUP3 ADD MSTORE PUSH32 0x697A650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2571 PUSH1 0x23 DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x257C DUP3 PUSH2 0x2517 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x259E DUP2 PUSH2 0x2565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25B8 PUSH0 DUP4 ADD DUP6 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x25C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x25D5 DUP2 PUSH2 0x2065 JUMP JUMPDEST DUP2 EQ PUSH2 0x25DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25F0 DUP2 PUSH2 0x25CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x260B JUMPI PUSH2 0x260A PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2618 DUP5 DUP3 DUP6 ADD PUSH2 0x25E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63425443207472616E73666572206661696C6564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2655 PUSH1 0x14 DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2660 DUP3 PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2682 DUP2 PUSH2 0x2649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526174696F206D757374206265203E3D20313030250000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26BD PUSH1 0x15 DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x26C8 DUP3 PUSH2 0x2689 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26EA DUP2 PUSH2 0x26B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2725 PUSH1 0x12 DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2730 DUP3 PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2752 DUP2 PUSH2 0x2719 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x276C PUSH0 DUP4 ADD DUP7 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x2779 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x2786 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2798 DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A3 DUP4 PUSH2 0x1FF4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x2419 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697175696461746F72206E6F7420656E6F7567682063555344000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27F5 PUSH1 0x1A DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2800 DUP3 PUSH2 0x27C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2822 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x283C PUSH0 DUP4 ADD DUP6 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x2849 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2884 PUSH1 0xC DUP4 PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x288F DUP3 PUSH2 0x2850 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28B1 DUP2 PUSH2 0x2878 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28CB PUSH0 DUP4 ADD DUP7 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x28D8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x28E5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT BLOBBASEFEE 0xB4 CALLER 0x28 0xAA 0xCA TLOAD EXTCODEHASH 0x29 SWAP7 LOG1 ORIGIN 0xA5 SELFDESTRUCT TSTORE 0xC3 0xD3 DUP4 0xDC TIMESTAMP PUSH8 0xE9A438D4BA8F9239 CALLCODE 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "494:6882:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:18:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4718:250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3220:865:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;694:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;813:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6766:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;575:26:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2804:308:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2012:614;;;:::i;:::-;;3315:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;608:30:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7259:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5162:1535;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2632:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;776:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:471:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7024:150:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;551:18:6:-;;;;;;;;;;;;;:::o;4718:250::-;4804:16;:14;:16::i;:::-;4857:10;4838:15;4848:4;4838:9;:15::i;:::-;:29;;4830:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4897:23;4903:4;4909:10;4897:5;:23::i;:::-;4944:4;4935:26;;;4950:10;4935:26;;;;;;:::i;:::-;;;;;;;;4718:250;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3220:865:6:-;3306:16;:14;:16::i;:::-;3350:12;:18;3363:4;3350:18;;;;;;;;;;;;;;;;3340:6;:28;;3332:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3405:16;3424:15;3434:4;3424:9;:15::i;:::-;3405:34;;3449:13;3465:6;;;;;;;;;;;:15;;;3489:4;;;;;;;;;;;3465:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3449:46;;3505:26;3565:4;3546:15;;3535:8;:26;;;;:::i;:::-;3534:35;;;;:::i;:::-;3505:64;;3695:5;3687:4;3666:18;:25;;;;:::i;:::-;3665:35;;;;:::i;:::-;3644:56;;3711:19;3754:18;3733:12;:18;3746:4;3733:18;;;;;;;;;;;;;;;;:39;:109;;3841:1;3733:109;;;3808:18;3787:12;:18;3800:4;3787:18;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;3733:109;3711:131;;3871:11;3861:6;:21;;3853:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3954:6;3932:12;:18;3945:4;3932:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;3978:4;;;;;;;;;;;:13;;;3992:4;3998:6;3978:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3970:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4065:4;4045:33;;;4071:6;4045:33;;;;;;:::i;:::-;;;;;;;;3296:789;;;;3220:865;;:::o;694:27::-;;;;:::o;813:47::-;;;;;;;;;;;;;;;;;:::o;6766:171::-;1531:13:0;:11;:13::i;:::-;6863:4:6::1;6850:9;:17;;6842:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;6921:9;6903:15;:27;;;;6766:171:::0;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;575:26:6:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2804:308:6:-;2906:1;2897:6;:10;2889:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2948:4;;;;;;;;;;;:17;;;2966:4;2980;2987:6;2948:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2940:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3051:6;3029:12;:18;3042:4;3029:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;3092:4;3072:33;;;3098:6;3072:33;;;;;;:::i;:::-;;;;;;;;2804:308;;:::o;2012:614::-;2064:19;2104:15;;2086;:33;;;;:::i;:::-;2064:55;;2147:1;2133:11;:15;:36;;;;;2168:1;2152:13;:11;:13::i;:::-;:17;2133:36;2129:491;;;2299:19;2352:8;2337:11;2322:12;;:26;;;;:::i;:::-;2321:39;;;;:::i;:::-;2299:61;;2394:24;2453:5;2438:11;2422:13;:11;:13::i;:::-;:27;;;;:::i;:::-;2421:37;;;;:::i;:::-;2394:64;;2495:1;2476:16;:20;2472:91;;;2516:32;2522:7;:5;:7::i;:::-;2531:16;2516:5;:32::i;:::-;2472:91;2594:15;2576;:33;;;;2171:449;;2129:491;2054:572;2012:614::o;3315:178:2:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;608:30:6:-;;;;:::o;7259:115::-;7323:7;7349:12;:18;7362:4;7349:18;;;;;;;;;;;;;;;;7342:25;;7259:115;;;:::o;5162:1535::-;5243:16;:14;:16::i;:::-;5269:13;5285:6;;;;;;;;;;;:15;;;5309:4;;;;;;;;;;;5285:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5269:46;;5325:16;5344:15;5354:4;5344:9;:15::i;:::-;5325:34;;5385:1;5373:8;:13;5369:26;;5388:7;;;;5369:26;5508:21;5563:4;5544:15;;5533:8;:26;;;;:::i;:::-;5532:35;;;;:::i;:::-;5508:59;;5600:27;5661:4;5652:5;5631:12;:18;5644:4;5631:18;;;;;;;;;;;;;;;;:26;;;;:::i;:::-;5630:35;;;;:::i;:::-;5600:65;;5702:13;5680:19;:35;5676:1015;;;5731:19;5766:8;5753:10;:21;:45;;5788:10;5753:45;;;5777:8;5753:45;5731:67;;5845:11;5820:21;5830:10;5820:9;:21::i;:::-;:36;;5812:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;5901:49;5911:10;5931:4;5938:11;5901:9;:49::i;:::-;5964:33;5978:4;5985:11;5964:5;:33::i;:::-;6073:23;6133:4;6114:15;;6100:11;:29;;;;:::i;:::-;6099:38;;;;:::i;:::-;6073:64;;6196:5;6188:4;6170:15;:22;;;;:::i;:::-;6169:32;;;;:::i;:::-;6151:50;;6259:3;6252;6234:15;:21;;;;:::i;:::-;6233:29;;;;:::i;:::-;6215:47;;6299:12;:18;6312:4;6299:18;;;;;;;;;;;;;;;;6281:15;:36;6277:111;;;6355:12;:18;6368:4;6355:18;;;;;;;;;;;;;;;;6337:36;;6277:111;6424:15;6402:12;:18;6415:4;6402:18;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;6461:4;;;;;;;;;;;:13;;;6475:10;6487:15;6461:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6453:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;6645:4;6634:46;;;6651:11;6664:15;6634:46;;;;;;;:::i;:::-;;;;;;;;5717:974;;5676:1015;5233:1464;;;;5162:1535;;;:::o;2632:110::-;2694:7;2720:15;;2713:22;;2632:110;:::o;776:30::-;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;4171:471:6:-;4255:16;:14;:16::i;:::-;4281:13;4297:6;;;;;;;;;;;:15;;;4321:4;;;;;;;;;;;4297:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4281:46;;4337:26;4399:4;4380:15;;4367:10;:28;;;;:::i;:::-;4366:37;;;;:::i;:::-;4337:66;;4464:5;4456:4;4435:18;:25;;;;:::i;:::-;4434:35;;;;:::i;:::-;4413:56;;4515:18;4487:12;:24;4500:10;4487:24;;;;;;;;;;;;;;;;:46;;4479:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;4569:21;4575:2;4579:10;4569:5;:21::i;:::-;4612:10;4605:30;;;4624:10;4605:30;;;;;;:::i;:::-;;;;;;;;4245:397;;4171:471;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;7024:150:6:-;1531:13:0;:11;:13::i;:::-;7114:4:6::1;7103:7;:15;;7095:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;7160:7;7145:12;:22;;;;7024:150:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:60::-;3476:3;3497:5;3490:12;;3448:60;;;:::o;3514:142::-;3564:9;3597:53;3615:34;3624:24;3642:5;3624:24;:::i;:::-;3615:34;:::i;:::-;3597:53;:::i;:::-;3584:66;;3514:142;;;:::o;3662:126::-;3712:9;3745:37;3776:5;3745:37;:::i;:::-;3732:50;;3662:126;;;:::o;3794:140::-;3858:9;3891:37;3922:5;3891:37;:::i;:::-;3878:50;;3794:140;;;:::o;3940:159::-;4041:51;4086:5;4041:51;:::i;:::-;4036:3;4029:64;3940:159;;:::o;4105:250::-;4212:4;4250:2;4239:9;4235:18;4227:26;;4263:85;4345:1;4334:9;4330:17;4321:6;4263:85;:::i;:::-;4105:250;;;;:::o;4361:118::-;4448:24;4466:5;4448:24;:::i;:::-;4443:3;4436:37;4361:118;;:::o;4485:222::-;4578:4;4616:2;4605:9;4601:18;4593:26;;4629:71;4697:1;4686:9;4682:17;4673:6;4629:71;:::i;:::-;4485:222;;;;:::o;4713:619::-;4790:6;4798;4806;4855:2;4843:9;4834:7;4830:23;4826:32;4823:119;;;4861:79;;:::i;:::-;4823:119;4981:1;5006:53;5051:7;5042:6;5031:9;5027:22;5006:53;:::i;:::-;4996:63;;4952:117;5108:2;5134:53;5179:7;5170:6;5159:9;5155:22;5134:53;:::i;:::-;5124:63;;5079:118;5236:2;5262:53;5307:7;5298:6;5287:9;5283:22;5262:53;:::i;:::-;5252:63;;5207:118;4713:619;;;;;:::o;5338:86::-;5373:7;5413:4;5406:5;5402:16;5391:27;;5338:86;;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5430:112;;:::o;5548:214::-;5637:4;5675:2;5664:9;5660:18;5652:26;;5688:67;5752:1;5741:9;5737:17;5728:6;5688:67;:::i;:::-;5548:214;;;;:::o;5768:329::-;5827:6;5876:2;5864:9;5855:7;5851:23;5847:32;5844:119;;;5882:79;;:::i;:::-;5844:119;6002:1;6027:53;6072:7;6063:6;6052:9;6048:22;6027:53;:::i;:::-;6017:63;;5973:117;5768:329;;;;:::o;6103:::-;6162:6;6211:2;6199:9;6190:7;6186:23;6182:32;6179:119;;;6217:79;;:::i;:::-;6179:119;6337:1;6362:53;6407:7;6398:6;6387:9;6383:22;6362:53;:::i;:::-;6352:63;;6308:117;6103:329;;;;:::o;6438:147::-;6509:9;6542:37;6573:5;6542:37;:::i;:::-;6529:50;;6438:147;;;:::o;6591:173::-;6699:58;6751:5;6699:58;:::i;:::-;6694:3;6687:71;6591:173;;:::o;6770:264::-;6884:4;6922:2;6911:9;6907:18;6899:26;;6935:92;7024:1;7013:9;7009:17;7000:6;6935:92;:::i;:::-;6770:264;;;;:::o;7040:118::-;7127:24;7145:5;7127:24;:::i;:::-;7122:3;7115:37;7040:118;;:::o;7164:222::-;7257:4;7295:2;7284:9;7280:18;7272:26;;7308:71;7376:1;7365:9;7361:17;7352:6;7308:71;:::i;:::-;7164:222;;;;:::o;7392:474::-;7460:6;7468;7517:2;7505:9;7496:7;7492:23;7488:32;7485:119;;;7523:79;;:::i;:::-;7485:119;7643:1;7668:53;7713:7;7704:6;7693:9;7689:22;7668:53;:::i;:::-;7658:63;;7614:117;7770:2;7796:53;7841:7;7832:6;7821:9;7817:22;7796:53;:::i;:::-;7786:63;;7741:118;7392:474;;;;;:::o;7872:180::-;7920:77;7917:1;7910:88;8017:4;8014:1;8007:15;8041:4;8038:1;8031:15;8058:320;8102:6;8139:1;8133:4;8129:12;8119:22;;8186:1;8180:4;8176:12;8207:18;8197:81;;8263:4;8255:6;8251:17;8241:27;;8197:81;8325:2;8317:6;8314:14;8294:18;8291:38;8288:84;;8344:18;;:::i;:::-;8288:84;8109:269;8058:320;;;:::o;8384:165::-;8524:17;8520:1;8512:6;8508:14;8501:41;8384:165;:::o;8555:366::-;8697:3;8718:67;8782:2;8777:3;8718:67;:::i;:::-;8711:74;;8794:93;8883:3;8794:93;:::i;:::-;8912:2;8907:3;8903:12;8896:19;;8555:366;;;:::o;8927:419::-;9093:4;9131:2;9120:9;9116:18;9108:26;;9180:9;9174:4;9170:20;9166:1;9155:9;9151:17;9144:47;9208:131;9334:4;9208:131;:::i;:::-;9200:139;;8927:419;;;:::o;9352:171::-;9492:23;9488:1;9480:6;9476:14;9469:47;9352:171;:::o;9529:366::-;9671:3;9692:67;9756:2;9751:3;9692:67;:::i;:::-;9685:74;;9768:93;9857:3;9768:93;:::i;:::-;9886:2;9881:3;9877:12;9870:19;;9529:366;;;:::o;9901:419::-;10067:4;10105:2;10094:9;10090:18;10082:26;;10154:9;10148:4;10144:20;10140:1;10129:9;10125:17;10118:47;10182:131;10308:4;10182:131;:::i;:::-;10174:139;;9901:419;;;:::o;10326:143::-;10383:5;10414:6;10408:13;10399:22;;10430:33;10457:5;10430:33;:::i;:::-;10326:143;;;;:::o;10475:351::-;10545:6;10594:2;10582:9;10573:7;10569:23;10565:32;10562:119;;;10600:79;;:::i;:::-;10562:119;10720:1;10745:64;10801:7;10792:6;10781:9;10777:22;10745:64;:::i;:::-;10735:74;;10691:128;10475:351;;;;:::o;10832:180::-;10880:77;10877:1;10870:88;10977:4;10974:1;10967:15;11001:4;10998:1;10991:15;11018:410;11058:7;11081:20;11099:1;11081:20;:::i;:::-;11076:25;;11115:20;11133:1;11115:20;:::i;:::-;11110:25;;11170:1;11167;11163:9;11192:30;11210:11;11192:30;:::i;:::-;11181:41;;11371:1;11362:7;11358:15;11355:1;11352:22;11332:1;11325:9;11305:83;11282:139;;11401:18;;:::i;:::-;11282:139;11066:362;11018:410;;;;:::o;11434:180::-;11482:77;11479:1;11472:88;11579:4;11576:1;11569:15;11603:4;11600:1;11593:15;11620:185;11660:1;11677:20;11695:1;11677:20;:::i;:::-;11672:25;;11711:20;11729:1;11711:20;:::i;:::-;11706:25;;11750:1;11740:35;;11755:18;;:::i;:::-;11740:35;11797:1;11794;11790:9;11785:14;;11620:185;;;;:::o;11811:194::-;11851:4;11871:20;11889:1;11871:20;:::i;:::-;11866:25;;11905:20;11923:1;11905:20;:::i;:::-;11900:25;;11949:1;11946;11942:9;11934:17;;11973:1;11967:4;11964:11;11961:37;;;11978:18;;:::i;:::-;11961:37;11811:194;;;;:::o;12011:222::-;12151:34;12147:1;12139:6;12135:14;12128:58;12220:5;12215:2;12207:6;12203:15;12196:30;12011:222;:::o;12239:366::-;12381:3;12402:67;12466:2;12461:3;12402:67;:::i;:::-;12395:74;;12478:93;12567:3;12478:93;:::i;:::-;12596:2;12591:3;12587:12;12580:19;;12239:366;;;:::o;12611:419::-;12777:4;12815:2;12804:9;12800:18;12792:26;;12864:9;12858:4;12854:20;12850:1;12839:9;12835:17;12828:47;12892:131;13018:4;12892:131;:::i;:::-;12884:139;;12611:419;;;:::o;13036:332::-;13157:4;13195:2;13184:9;13180:18;13172:26;;13208:71;13276:1;13265:9;13261:17;13252:6;13208:71;:::i;:::-;13289:72;13357:2;13346:9;13342:18;13333:6;13289:72;:::i;:::-;13036:332;;;;;:::o;13374:116::-;13444:21;13459:5;13444:21;:::i;:::-;13437:5;13434:32;13424:60;;13480:1;13477;13470:12;13424:60;13374:116;:::o;13496:137::-;13550:5;13581:6;13575:13;13566:22;;13597:30;13621:5;13597:30;:::i;:::-;13496:137;;;;:::o;13639:345::-;13706:6;13755:2;13743:9;13734:7;13730:23;13726:32;13723:119;;;13761:79;;:::i;:::-;13723:119;13881:1;13906:61;13959:7;13950:6;13939:9;13935:22;13906:61;:::i;:::-;13896:71;;13852:125;13639:345;;;;:::o;13990:170::-;14130:22;14126:1;14118:6;14114:14;14107:46;13990:170;:::o;14166:366::-;14308:3;14329:67;14393:2;14388:3;14329:67;:::i;:::-;14322:74;;14405:93;14494:3;14405:93;:::i;:::-;14523:2;14518:3;14514:12;14507:19;;14166:366;;;:::o;14538:419::-;14704:4;14742:2;14731:9;14727:18;14719:26;;14791:9;14785:4;14781:20;14777:1;14766:9;14762:17;14755:47;14819:131;14945:4;14819:131;:::i;:::-;14811:139;;14538:419;;;:::o;14963:171::-;15103:23;15099:1;15091:6;15087:14;15080:47;14963:171;:::o;15140:366::-;15282:3;15303:67;15367:2;15362:3;15303:67;:::i;:::-;15296:74;;15379:93;15468:3;15379:93;:::i;:::-;15497:2;15492:3;15488:12;15481:19;;15140:366;;;:::o;15512:419::-;15678:4;15716:2;15705:9;15701:18;15693:26;;15765:9;15759:4;15755:20;15751:1;15740:9;15736:17;15729:47;15793:131;15919:4;15793:131;:::i;:::-;15785:139;;15512:419;;;:::o;15937:168::-;16077:20;16073:1;16065:6;16061:14;16054:44;15937:168;:::o;16111:366::-;16253:3;16274:67;16338:2;16333:3;16274:67;:::i;:::-;16267:74;;16350:93;16439:3;16350:93;:::i;:::-;16468:2;16463:3;16459:12;16452:19;;16111:366;;;:::o;16483:419::-;16649:4;16687:2;16676:9;16672:18;16664:26;;16736:9;16730:4;16726:20;16722:1;16711:9;16707:17;16700:47;16764:131;16890:4;16764:131;:::i;:::-;16756:139;;16483:419;;;:::o;16908:442::-;17057:4;17095:2;17084:9;17080:18;17072:26;;17108:71;17176:1;17165:9;17161:17;17152:6;17108:71;:::i;:::-;17189:72;17257:2;17246:9;17242:18;17233:6;17189:72;:::i;:::-;17271;17339:2;17328:9;17324:18;17315:6;17271:72;:::i;:::-;16908:442;;;;;;:::o;17356:191::-;17396:3;17415:20;17433:1;17415:20;:::i;:::-;17410:25;;17449:20;17467:1;17449:20;:::i;:::-;17444:25;;17492:1;17489;17485:9;17478:16;;17513:3;17510:1;17507:10;17504:36;;;17520:18;;:::i;:::-;17504:36;17356:191;;;;:::o;17553:176::-;17693:28;17689:1;17681:6;17677:14;17670:52;17553:176;:::o;17735:366::-;17877:3;17898:67;17962:2;17957:3;17898:67;:::i;:::-;17891:74;;17974:93;18063:3;17974:93;:::i;:::-;18092:2;18087:3;18083:12;18076:19;;17735:366;;;:::o;18107:419::-;18273:4;18311:2;18300:9;18296:18;18288:26;;18360:9;18354:4;18350:20;18346:1;18335:9;18331:17;18324:47;18388:131;18514:4;18388:131;:::i;:::-;18380:139;;18107:419;;;:::o;18532:332::-;18653:4;18691:2;18680:9;18676:18;18668:26;;18704:71;18772:1;18761:9;18757:17;18748:6;18704:71;:::i;:::-;18785:72;18853:2;18842:9;18838:18;18829:6;18785:72;:::i;:::-;18532:332;;;;;:::o;18870:162::-;19010:14;19006:1;18998:6;18994:14;18987:38;18870:162;:::o;19038:366::-;19180:3;19201:67;19265:2;19260:3;19201:67;:::i;:::-;19194:74;;19277:93;19366:3;19277:93;:::i;:::-;19395:2;19390:3;19386:12;19379:19;;19038:366;;;:::o;19410:419::-;19576:4;19614:2;19603:9;19599:18;19591:26;;19663:9;19657:4;19653:20;19649:1;19638:9;19634:17;19627:47;19691:131;19817:4;19691:131;:::i;:::-;19683:139;;19410:419;;;:::o;19835:442::-;19984:4;20022:2;20011:9;20007:18;19999:26;;20035:71;20103:1;20092:9;20088:17;20079:6;20035:71;:::i;:::-;20116:72;20184:2;20173:9;20169:18;20160:6;20116:72;:::i;:::-;20198;20266:2;20255:9;20251:18;20242:6;20198:72;:::i;:::-;19835:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2106200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accrueInterest()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"burnStableCoin(address,uint256)": "infinite",
								"cBTC()": "infinite",
								"cBTCDeposits(address)": "2892",
								"collateralRatio()": "2514",
								"decimals()": "450",
								"depositCollateral(address,uint256)": "infinite",
								"getCollateralRatio()": "2499",
								"getUserCollateral(address)": "2940",
								"lastAccrualTime()": "2514",
								"liquidate(address,uint256)": "infinite",
								"mintStableCoin(address,uint256)": "infinite",
								"name()": "infinite",
								"oracle()": "infinite",
								"owner()": "2561",
								"renounceOwnership()": "infinite",
								"setCollateralRatio(uint256)": "infinite",
								"setStabilityFee(uint256)": "infinite",
								"stabilityFee()": "2493",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawCollateral(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 494,
									"end": 7376,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1257,
									"end": 1827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1434,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4369747265612055534400000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "6355534400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1471,
									"end": 1472,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1454,
									"end": 1473,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1454,
									"end": 1473,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1459,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1473,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1454,
									"end": 1473,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1473,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1498,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1446,
									"end": 1498,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1535,
									"end": 1536,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1516,
									"end": 1537,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1516,
									"end": 1537,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1523,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1537,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1516,
									"end": 1537,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1537,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1508,
									"end": 1556,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1508,
									"end": 1556,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1594,
									"end": 1598,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1574,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1598,
									"modifierDepth": 2,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1598,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1566,
									"end": 1624,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1566,
									"end": 1624,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1654,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1639,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1635,
									"end": 1639,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1655,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1699,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 1680,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1665,
									"end": 1699,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 1699,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 1699,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 1699,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1738,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1715,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1709,
									"end": 1715,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1739,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1764,
									"end": 1777,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1749,
									"end": 1761,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1749,
									"end": 1777,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1749,
									"end": 1777,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1749,
									"end": 1777,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1749,
									"end": 1777,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1805,
									"end": 1820,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1802,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1787,
									"end": 1820,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1820,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1820,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1820,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1827,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1375,
									"end": 1378,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1363,
									"end": 1372,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1354,
									"end": 1361,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1350,
									"end": 1373,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1382,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1502,
									"end": 1503,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1580,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1563,
									"end": 1572,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1559,
									"end": 1581,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1527,
									"end": 1591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 1722,
									"end": 1729,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1711,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1698,
									"end": 1720,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1666,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1611,
									"end": 1740,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1861,
									"end": 1868,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1841,
									"end": 1850,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1805,
									"end": 1869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1750,
									"end": 1879,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1918,
									"end": 1920,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2000,
									"end": 2007,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1991,
									"end": 1997,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1980,
									"end": 1989,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 1998,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1944,
									"end": 2008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 2018,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2130,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 2031,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2083,
									"end": 2089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2117,
									"end": 2122,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2111,
									"end": 2123,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2101,
									"end": 2123,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2101,
									"end": 2123,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2130,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2130,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2130,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2136,
									"end": 2316,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2136,
									"end": 2316,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2184,
									"end": 2261,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2181,
									"end": 2182,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2174,
									"end": 2262,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2281,
									"end": 2285,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2278,
									"end": 2279,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2271,
									"end": 2286,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2305,
									"end": 2309,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2302,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2295,
									"end": 2310,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2322,
									"end": 2502,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2322,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2370,
									"end": 2447,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2367,
									"end": 2368,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2360,
									"end": 2448,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2471,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2464,
									"end": 2465,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2457,
									"end": 2472,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2491,
									"end": 2495,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2488,
									"end": 2489,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2481,
									"end": 2496,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2828,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 2508,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2552,
									"end": 2558,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2589,
									"end": 2590,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2583,
									"end": 2587,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2591,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2569,
									"end": 2591,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2569,
									"end": 2591,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2636,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2630,
									"end": 2634,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2638,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2657,
									"end": 2675,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2647,
									"end": 2728,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2647,
									"end": 2728,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2713,
									"end": 2717,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 2705,
									"end": 2711,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2701,
									"end": 2718,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2691,
									"end": 2718,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2691,
									"end": 2718,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2647,
									"end": 2728,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2647,
									"end": 2728,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2775,
									"end": 2777,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2767,
									"end": 2773,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2764,
									"end": 2778,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2744,
									"end": 2762,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2741,
									"end": 2779,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2738,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 2738,
									"end": 2822,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2794,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 2794,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2794,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2794,
									"end": 2812,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 2794,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2738,
									"end": 2822,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 2738,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2559,
									"end": 2828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2828,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2828,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2834,
									"end": 2975,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2834,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2883,
									"end": 2887,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2906,
									"end": 2909,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2898,
									"end": 2909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2898,
									"end": 2909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2929,
									"end": 2932,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 2927,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2919,
									"end": 2933,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2963,
									"end": 2967,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2960,
									"end": 2961,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2950,
									"end": 2968,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2942,
									"end": 2968,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2942,
									"end": 2968,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2834,
									"end": 2975,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2834,
									"end": 2975,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2834,
									"end": 2975,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2834,
									"end": 2975,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3065,
									"end": 3067,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3060,
									"end": 3062,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3053,
									"end": 3058,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3049,
									"end": 3063,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3045,
									"end": 3068,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3035,
									"end": 3068,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3035,
									"end": 3068,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2981,
									"end": 3074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3124,
									"end": 3132,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3174,
									"end": 3179,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3168,
									"end": 3172,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3164,
									"end": 3180,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3180,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3180,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3080,
									"end": 3187,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3080,
									"end": 3187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3262,
									"end": 3268,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3312,
									"end": 3313,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3300,
									"end": 3310,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3296,
									"end": 3314,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3335,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3365,
									"end": 3431,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3354,
									"end": 3363,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3335,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 3335,
									"end": 3432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3335,
									"end": 3432,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3335,
									"end": 3432,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3453,
									"end": 3492,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 3483,
									"end": 3491,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3472,
									"end": 3481,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3453,
									"end": 3492,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 3453,
									"end": 3492,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3453,
									"end": 3492,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 3453,
									"end": 3492,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3492,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3492,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3525,
									"end": 3529,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3521,
									"end": 3530,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3514,
									"end": 3519,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3510,
									"end": 3531,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3501,
									"end": 3531,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3501,
									"end": 3531,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3574,
									"end": 3578,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3564,
									"end": 3572,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3560,
									"end": 3579,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3550,
									"end": 3580,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3540,
									"end": 3580,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3540,
									"end": 3580,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3269,
									"end": 3586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3269,
									"end": 3586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3193,
									"end": 3586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3193,
									"end": 3586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3592,
									"end": 3652,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 3592,
									"end": 3652,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3620,
									"end": 3623,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3641,
									"end": 3646,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3634,
									"end": 3646,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3634,
									"end": 3646,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3592,
									"end": 3652,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3592,
									"end": 3652,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3592,
									"end": 3652,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3592,
									"end": 3652,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3658,
									"end": 3800,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 3658,
									"end": 3800,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3708,
									"end": 3717,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3741,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3759,
									"end": 3793,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3768,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3786,
									"end": 3791,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3768,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 3768,
									"end": 3792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3768,
									"end": 3792,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3768,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3759,
									"end": 3793,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 3759,
									"end": 3793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3759,
									"end": 3793,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3759,
									"end": 3793,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3741,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 3741,
									"end": 3794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3741,
									"end": 3794,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3741,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3728,
									"end": 3794,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3728,
									"end": 3794,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3658,
									"end": 3800,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3658,
									"end": 3800,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3658,
									"end": 3800,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3658,
									"end": 3800,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3806,
									"end": 3881,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 3806,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3849,
									"end": 3852,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3870,
									"end": 3875,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3863,
									"end": 3875,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3863,
									"end": 3875,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3806,
									"end": 3881,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3806,
									"end": 3881,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3806,
									"end": 3881,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3806,
									"end": 3881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3887,
									"end": 4156,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 3887,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3997,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 4028,
									"end": 4035,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3997,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 3997,
									"end": 4036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3997,
									"end": 4036,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3997,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4058,
									"end": 4149,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 4107,
									"end": 4148,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 4131,
									"end": 4147,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4107,
									"end": 4148,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 4107,
									"end": 4148,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4107,
									"end": 4148,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 4107,
									"end": 4148,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4099,
									"end": 4105,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4092,
									"end": 4096,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4086,
									"end": 4097,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4058,
									"end": 4149,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 4058,
									"end": 4149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4058,
									"end": 4149,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 4058,
									"end": 4149,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4052,
									"end": 4056,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4150,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3963,
									"end": 4156,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3887,
									"end": 4156,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3887,
									"end": 4156,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3887,
									"end": 4156,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3887,
									"end": 4156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4162,
									"end": 4235,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 4162,
									"end": 4235,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4207,
									"end": 4210,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4235,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4162,
									"end": 4235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4241,
									"end": 4430,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 4241,
									"end": 4430,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4318,
									"end": 4350,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 4318,
									"end": 4350,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 4318,
									"end": 4350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4318,
									"end": 4350,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 4318,
									"end": 4350,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4359,
									"end": 4424,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 4417,
									"end": 4423,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4409,
									"end": 4415,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4403,
									"end": 4407,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4359,
									"end": 4424,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 4359,
									"end": 4424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4359,
									"end": 4424,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 4359,
									"end": 4424,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4294,
									"end": 4430,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4241,
									"end": 4430,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4241,
									"end": 4430,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4241,
									"end": 4430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4436,
									"end": 4622,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 4436,
									"end": 4622,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4513,
									"end": 4516,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4506,
									"end": 4511,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4503,
									"end": 4517,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4567,
									"end": 4606,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4604,
									"end": 4605,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4597,
									"end": 4602,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4567,
									"end": 4606,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 4567,
									"end": 4606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4567,
									"end": 4606,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4567,
									"end": 4606,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4540,
									"end": 4541,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4533,
									"end": 4538,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4529,
									"end": 4542,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4520,
									"end": 4542,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4520,
									"end": 4542,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4496,
									"end": 4616,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4436,
									"end": 4622,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4436,
									"end": 4622,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4436,
									"end": 4622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4628,
									"end": 5171,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 4628,
									"end": 5171,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4729,
									"end": 4731,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4724,
									"end": 4727,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4721,
									"end": 4732,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4718,
									"end": 5164,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4718,
									"end": 5164,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4718,
									"end": 5164,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 4795,
									"end": 4800,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 4763,
									"end": 4801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4847,
									"end": 4876,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 4865,
									"end": 4875,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4847,
									"end": 4876,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4847,
									"end": 4876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4847,
									"end": 4876,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 4847,
									"end": 4876,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4837,
									"end": 4845,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4833,
									"end": 4877,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5030,
									"end": 5032,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5018,
									"end": 5028,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5015,
									"end": 5033,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5012,
									"end": 5061,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5012,
									"end": 5061,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 5012,
									"end": 5061,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5051,
									"end": 5059,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5036,
									"end": 5059,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5036,
									"end": 5059,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5012,
									"end": 5061,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 5012,
									"end": 5061,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5074,
									"end": 5154,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 5130,
									"end": 5152,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 5148,
									"end": 5151,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5130,
									"end": 5152,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 5130,
									"end": 5152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5130,
									"end": 5152,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 5130,
									"end": 5152,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5120,
									"end": 5128,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5116,
									"end": 5153,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5103,
									"end": 5114,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5074,
									"end": 5154,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 5074,
									"end": 5154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5074,
									"end": 5154,
									"name": "tag",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 5074,
									"end": 5154,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4733,
									"end": 5164,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4733,
									"end": 5164,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4718,
									"end": 5164,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4718,
									"end": 5164,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4628,
									"end": 5171,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4628,
									"end": 5171,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4628,
									"end": 5171,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4628,
									"end": 5171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5231,
									"end": 5239,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5281,
									"end": 5286,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5275,
									"end": 5279,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5271,
									"end": 5287,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 5250,
									"end": 5287,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5250,
									"end": 5287,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5177,
									"end": 5294,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5177,
									"end": 5294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5344,
									"end": 5350,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5377,
									"end": 5428,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 5425,
									"end": 5426,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5421,
									"end": 5427,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5413,
									"end": 5418,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5410,
									"end": 5411,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 5406,
									"end": 5419,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5377,
									"end": 5428,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 5377,
									"end": 5428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5377,
									"end": 5428,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 5377,
									"end": 5428,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5373,
									"end": 5429,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5458,
									"end": 5462,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5452,
									"end": 5456,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5448,
									"end": 5463,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5438,
									"end": 5463,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5438,
									"end": 5463,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5351,
									"end": 5469,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5469,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5469,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5550,
									"end": 5554,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5696,
									"end": 5725,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 5721,
									"end": 5724,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5715,
									"end": 5719,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5696,
									"end": 5725,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 5696,
									"end": 5725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5696,
									"end": 5725,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 5696,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5688,
									"end": 5725,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5688,
									"end": 5725,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5758,
									"end": 5761,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5755,
									"end": 5756,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5751,
									"end": 5762,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5745,
									"end": 5749,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5742,
									"end": 5763,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5734,
									"end": 5763,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5734,
									"end": 5763,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5474,
									"end": 5769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5474,
									"end": 5769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 7169,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 5774,
									"end": 7169,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5891,
									"end": 5928,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 5924,
									"end": 5927,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5891,
									"end": 5928,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 5891,
									"end": 5928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5891,
									"end": 5928,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 5891,
									"end": 5928,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5993,
									"end": 6011,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5985,
									"end": 5991,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5982,
									"end": 6012,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5979,
									"end": 6035,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5979,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 5979,
									"end": 6035,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6015,
									"end": 6033,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 6015,
									"end": 6033,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6015,
									"end": 6033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6015,
									"end": 6033,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 6015,
									"end": 6033,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5979,
									"end": 6035,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 5979,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6059,
									"end": 6097,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 6091,
									"end": 6095,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6085,
									"end": 6096,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 6059,
									"end": 6097,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 6059,
									"end": 6097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6059,
									"end": 6097,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 6059,
									"end": 6097,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6144,
									"end": 6211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6196,
									"end": 6202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6190,
									"end": 6194,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6144,
									"end": 6211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 6144,
									"end": 6211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6144,
									"end": 6211,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 6144,
									"end": 6211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6238,
									"end": 6239,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6262,
									"end": 6266,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6249,
									"end": 6266,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6249,
									"end": 6266,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6294,
									"end": 6296,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6286,
									"end": 6292,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6283,
									"end": 6297,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6311,
									"end": 6312,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6968,
									"end": 6969,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6985,
									"end": 6991,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6982,
									"end": 7059,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6982,
									"end": 7059,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 6982,
									"end": 7059,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7034,
									"end": 7043,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7029,
									"end": 7032,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 7025,
									"end": 7044,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7019,
									"end": 7045,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 7010,
									"end": 7045,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7010,
									"end": 7045,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6982,
									"end": 7059,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 6982,
									"end": 7059,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7085,
									"end": 7152,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 7145,
									"end": 7151,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7138,
									"end": 7143,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7085,
									"end": 7152,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 7085,
									"end": 7152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7085,
									"end": 7152,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 7085,
									"end": 7152,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7079,
									"end": 7083,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7072,
									"end": 7153,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6941,
									"end": 7163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6276,
									"end": 7163,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 6276,
									"end": 7163,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 6306,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6354,
									"end": 6363,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6346,
									"end": 6352,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6342,
									"end": 6364,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 6424,
									"end": 6428,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 6392,
									"end": 6429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6429,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 6392,
									"end": 6429,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6451,
									"end": 6452,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6479,
									"end": 6486,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6477,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6473,
									"end": 6487,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6558,
									"end": 6567,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6556,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6549,
									"end": 6568,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6543,
									"end": 6569,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6535,
									"end": 6541,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6528,
									"end": 6570,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6609,
									"end": 6610,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6601,
									"end": 6607,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6597,
									"end": 6611,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6587,
									"end": 6611,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6587,
									"end": 6611,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6656,
									"end": 6658,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6645,
									"end": 6654,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6641,
									"end": 6659,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6628,
									"end": 6659,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 6628,
									"end": 6659,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6502,
									"end": 6506,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6499,
									"end": 6500,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6495,
									"end": 6507,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6490,
									"end": 6507,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6490,
									"end": 6507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 6465,
									"end": 6673,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6701,
									"end": 6707,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6692,
									"end": 6699,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6689,
									"end": 6708,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6686,
									"end": 6865,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6686,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 6686,
									"end": 6865,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6759,
									"end": 6768,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6754,
									"end": 6757,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6750,
									"end": 6769,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6744,
									"end": 6770,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6802,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6836,
									"end": 6842,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6832,
									"end": 6849,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6821,
									"end": 6830,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6802,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 6802,
									"end": 6850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6802,
									"end": 6850,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 6802,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6794,
									"end": 6800,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6787,
									"end": 6851,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6709,
									"end": 6865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6686,
									"end": 6865,
									"name": "tag",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 6686,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6911,
									"end": 6912,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6907,
									"end": 6908,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 6899,
									"end": 6905,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6895,
									"end": 6909,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6891,
									"end": 6913,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6885,
									"end": 6889,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6878,
									"end": 6914,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6313,
									"end": 6924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6313,
									"end": 6924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6313,
									"end": 6924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6276,
									"end": 7163,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 6276,
									"end": 7163,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6276,
									"end": 7163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5866,
									"end": 7169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5866,
									"end": 7169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5866,
									"end": 7169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 7169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 7169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5774,
									"end": 7169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7175,
									"end": 7293,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 7175,
									"end": 7293,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7262,
									"end": 7286,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 7280,
									"end": 7285,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7262,
									"end": 7286,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 7262,
									"end": 7286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7262,
									"end": 7286,
									"name": "tag",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 7262,
									"end": 7286,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7257,
									"end": 7260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7250,
									"end": 7287,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7175,
									"end": 7293,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7175,
									"end": 7293,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7175,
									"end": 7293,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7392,
									"end": 7396,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7430,
									"end": 7432,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7419,
									"end": 7428,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7415,
									"end": 7433,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7407,
									"end": 7433,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7407,
									"end": 7433,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7443,
									"end": 7514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 7511,
									"end": 7512,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7500,
									"end": 7509,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7496,
									"end": 7513,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7487,
									"end": 7493,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7443,
									"end": 7514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 7443,
									"end": 7514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7443,
									"end": 7514,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 7443,
									"end": 7514,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7299,
									"end": 7521,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7299,
									"end": 7521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7527,
									"end": 7696,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 7527,
									"end": 7696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7611,
									"end": 7622,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7645,
									"end": 7651,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7640,
									"end": 7643,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7633,
									"end": 7652,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7685,
									"end": 7689,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7680,
									"end": 7683,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7676,
									"end": 7690,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7661,
									"end": 7690,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7661,
									"end": 7690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7527,
									"end": 7696,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7527,
									"end": 7696,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7527,
									"end": 7696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7527,
									"end": 7696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7527,
									"end": 7696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 7872,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 7702,
									"end": 7872,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7842,
									"end": 7864,
									"name": "PUSH",
									"source": 9,
									"value": "496E76616C696420634254432061646472657373000000000000000000000000"
								},
								{
									"begin": 7838,
									"end": 7839,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7826,
									"end": 7840,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7819,
									"end": 7865,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 7872,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7702,
									"end": 7872,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7878,
									"end": 8244,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 7878,
									"end": 8244,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8020,
									"end": 8023,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8041,
									"end": 8108,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 8105,
									"end": 8107,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 8100,
									"end": 8103,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8041,
									"end": 8108,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 8041,
									"end": 8108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8041,
									"end": 8108,
									"name": "tag",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 8041,
									"end": 8108,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8034,
									"end": 8108,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8034,
									"end": 8108,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8117,
									"end": 8210,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 8206,
									"end": 8209,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8117,
									"end": 8210,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 8117,
									"end": 8210,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8117,
									"end": 8210,
									"name": "tag",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 8117,
									"end": 8210,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8235,
									"end": 8237,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8230,
									"end": 8233,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8226,
									"end": 8238,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8219,
									"end": 8238,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8219,
									"end": 8238,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7878,
									"end": 8244,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7878,
									"end": 8244,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7878,
									"end": 8244,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7878,
									"end": 8244,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8250,
									"end": 8669,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8250,
									"end": 8669,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8416,
									"end": 8420,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8454,
									"end": 8456,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8443,
									"end": 8452,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8439,
									"end": 8457,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8431,
									"end": 8457,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8431,
									"end": 8457,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8503,
									"end": 8512,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8497,
									"end": 8501,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8493,
									"end": 8513,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 8489,
									"end": 8490,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8478,
									"end": 8487,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8474,
									"end": 8491,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8467,
									"end": 8514,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8531,
									"end": 8662,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 8657,
									"end": 8661,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8531,
									"end": 8662,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 8531,
									"end": 8662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8531,
									"end": 8662,
									"name": "tag",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 8531,
									"end": 8662,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8523,
									"end": 8662,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8523,
									"end": 8662,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8250,
									"end": 8669,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8250,
									"end": 8669,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8250,
									"end": 8669,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8250,
									"end": 8669,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8675,
									"end": 8839,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 8675,
									"end": 8839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8815,
									"end": 8831,
									"name": "PUSH",
									"source": 9,
									"value": "496E76616C6964206F7261636C65000000000000000000000000000000000000"
								},
								{
									"begin": 8811,
									"end": 8812,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8803,
									"end": 8809,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8799,
									"end": 8813,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8792,
									"end": 8832,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8675,
									"end": 8839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8675,
									"end": 8839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8845,
									"end": 9211,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 8845,
									"end": 9211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8987,
									"end": 8990,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9008,
									"end": 9075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 9072,
									"end": 9074,
									"name": "PUSH",
									"source": 9,
									"value": "E"
								},
								{
									"begin": 9067,
									"end": 9070,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9008,
									"end": 9075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 9008,
									"end": 9075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9008,
									"end": 9075,
									"name": "tag",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 9008,
									"end": 9075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9001,
									"end": 9075,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9001,
									"end": 9075,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9084,
									"end": 9177,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 9173,
									"end": 9176,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9084,
									"end": 9177,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 9084,
									"end": 9177,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9084,
									"end": 9177,
									"name": "tag",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 9084,
									"end": 9177,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9202,
									"end": 9204,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9197,
									"end": 9200,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9193,
									"end": 9205,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9186,
									"end": 9205,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9186,
									"end": 9205,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8845,
									"end": 9211,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8845,
									"end": 9211,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8845,
									"end": 9211,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8845,
									"end": 9211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9636,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 9217,
									"end": 9636,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9383,
									"end": 9387,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9421,
									"end": 9423,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9410,
									"end": 9419,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9406,
									"end": 9424,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9398,
									"end": 9424,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9398,
									"end": 9424,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9470,
									"end": 9479,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9464,
									"end": 9468,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9460,
									"end": 9480,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 9456,
									"end": 9457,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9445,
									"end": 9454,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9441,
									"end": 9458,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9434,
									"end": 9481,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9498,
									"end": 9629,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 9624,
									"end": 9628,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9498,
									"end": 9629,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 9498,
									"end": 9629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9498,
									"end": 9629,
									"name": "tag",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 9498,
									"end": 9629,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9490,
									"end": 9629,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9490,
									"end": 9629,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9636,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9636,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9636,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9642,
									"end": 9813,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 9642,
									"end": 9813,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9782,
									"end": 9805,
									"name": "PUSH",
									"source": 9,
									"value": "526174696F206D757374206265203E3D20313030250000000000000000000000"
								},
								{
									"begin": 9778,
									"end": 9779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9770,
									"end": 9776,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9766,
									"end": 9780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9759,
									"end": 9806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9642,
									"end": 9813,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9642,
									"end": 9813,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9819,
									"end": 10185,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 9819,
									"end": 10185,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9961,
									"end": 9964,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9982,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 10046,
									"end": 10048,
									"name": "PUSH",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 10041,
									"end": 10044,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9982,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 9982,
									"end": 10049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9982,
									"end": 10049,
									"name": "tag",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 9982,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9975,
									"end": 10049,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9975,
									"end": 10049,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10058,
									"end": 10151,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 10147,
									"end": 10150,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10058,
									"end": 10151,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 10058,
									"end": 10151,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10058,
									"end": 10151,
									"name": "tag",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 10058,
									"end": 10151,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10176,
									"end": 10178,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10171,
									"end": 10174,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10167,
									"end": 10179,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10160,
									"end": 10179,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10160,
									"end": 10179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9819,
									"end": 10185,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9819,
									"end": 10185,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9819,
									"end": 10185,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9819,
									"end": 10185,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10191,
									"end": 10610,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 10191,
									"end": 10610,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10357,
									"end": 10361,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10395,
									"end": 10397,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10384,
									"end": 10393,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10380,
									"end": 10398,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10372,
									"end": 10398,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10372,
									"end": 10398,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10444,
									"end": 10453,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10438,
									"end": 10442,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10434,
									"end": 10454,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 10430,
									"end": 10431,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10419,
									"end": 10428,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10415,
									"end": 10432,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10408,
									"end": 10455,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10472,
									"end": 10603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 10598,
									"end": 10602,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10472,
									"end": 10603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 10472,
									"end": 10603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10472,
									"end": 10603,
									"name": "tag",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 10472,
									"end": 10603,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10464,
									"end": 10603,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10464,
									"end": 10603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10191,
									"end": 10610,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10191,
									"end": 10610,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10191,
									"end": 10610,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10191,
									"end": 10610,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 7376,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220114ab43328aaca5c3f2996a132a5ff5dc3d383dc4267e9a438d4ba8f9239f2c164736f6c634300081a0033",
									".code": [
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "BCBAF487"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "EA629DB0"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "FB4CA35B"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "BCBAF487"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "CD377C53"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "D7E72708"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "A6AFED95"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "A6AFED95"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "B4EAE1CB"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "B6F7132F"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "A5D5DB0C"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "350C35E9"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "6060663E"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "6060663E"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "7DC0D1D0"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "350C35E9"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "361416E1"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "4E8D048B"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "1455B3AB"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "1455B3AB"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "AE8C4DC"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 7376,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 551,
											"end": 569,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 551,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 551,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4718,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4718,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3220,
											"end": 4085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3220,
											"end": 4085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 694,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 694,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 813,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 813,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 813,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 6766,
											"end": 6937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6766,
											"end": 6937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 601,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 575,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 575,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2804,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2804,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2626,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2012,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2012,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2626,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2012,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2626,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 608,
											"end": 638,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 608,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 608,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 7259,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 7259,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 7259,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5162,
											"end": 6697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5162,
											"end": 6697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2632,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2632,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 776,
											"end": 806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 776,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 776,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 776,
											"end": 806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 776,
											"end": 806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 776,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 776,
											"end": 806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4171,
											"end": 4642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4171,
											"end": 4642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 7024,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7024,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 551,
											"end": 569,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 551,
											"end": 569,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4804,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4804,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4820,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4804,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4848,
											"end": 4852,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4838,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4853,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4838,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4867,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4867,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4830,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4830,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4909,
											"end": 4919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4897,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4920,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4897,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "4896181FF8F4543CC00DB9FE9B6FB7E6F032B7EB772C72AB1EC1B4D2E03B9369"
										},
										{
											"begin": 4950,
											"end": 4960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4935,
											"end": 4961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4961,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3306,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3306,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3322,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3306,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3367,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3368,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3368,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3332,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3424,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3439,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3424,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3480,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3465,
											"end": 3480,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3480,
											"name": "PUSH",
											"source": 6,
											"value": "41976E09"
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3465,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3465,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3465,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3569,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3546,
											"end": 3561,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3546,
											"end": 3561,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3543,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3535,
											"end": 3561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3535,
											"end": 3561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3561,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3535,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3534,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3534,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3666,
											"end": 3684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3666,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3666,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3666,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3665,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3745,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3750,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3772,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3733,
											"end": 3842,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3733,
											"end": 3842,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3842,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3733,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3804,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3787,
											"end": 3826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3787,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3826,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3787,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3842,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3733,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3711,
											"end": 3842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3711,
											"end": 3842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3882,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3882,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3882,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3853,
											"end": 3922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3853,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3960,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3949,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3932,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3991,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3978,
											"end": 3991,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3991,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3992,
											"end": 3996,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4004,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3978,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3978,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3978,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3970,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3970,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4065,
											"end": 4069,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "PUSH",
											"source": 6,
											"value": "C30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D"
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4045,
											"end": 4078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4078,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 4085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 4085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 4085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 4085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 4085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 694,
											"end": 721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6850,
											"end": 6859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6850,
											"end": 6867,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6850,
											"end": 6867,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6842,
											"end": 6893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6842,
											"end": 6893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6921,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 6918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6903,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 601,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 601,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2903,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2907,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2889,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2889,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2965,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2948,
											"end": 2965,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2965,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2966,
											"end": 2970,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2948,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2948,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2948,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2940,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2940,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3046,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3029,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "D7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142"
										},
										{
											"begin": 3098,
											"end": 3104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3072,
											"end": 3105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3105,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 3112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2626,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2012,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2086,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2169,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2133,
											"end": 2169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2152,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2152,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2165,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2152,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2169,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2133,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2620,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2129,
											"end": 2620,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2360,
											"name": "PUSH",
											"source": 6,
											"value": "1E13380"
										},
										{
											"begin": 2337,
											"end": 2348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2322,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2321,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2458,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 2438,
											"end": 2449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2422,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2422,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2422,
											"end": 2449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2422,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2449,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2422,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2421,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2421,
											"end": 2458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2421,
											"end": 2458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2421,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2421,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2421,
											"end": 2458,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2421,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2496,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2563,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2472,
											"end": 2563,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2522,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2522,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2522,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2529,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2522,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2516,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2548,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2516,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2563,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2472,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2609,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2591,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2620,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2129,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 608,
											"end": 638,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 608,
											"end": 638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7361,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5243,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 5243,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 5243,
											"end": 5259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5243,
											"end": 5259,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 5243,
											"end": 5259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5300,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5285,
											"end": 5300,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5300,
											"name": "PUSH",
											"source": 6,
											"value": "41976E09"
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 5285,
											"end": 5315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5285,
											"end": 5315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5325,
											"end": 5341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5354,
											"end": 5358,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5344,
											"end": 5359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5359,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5344,
											"end": 5359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5325,
											"end": 5359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5325,
											"end": 5359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5373,
											"end": 5381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5386,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5369,
											"end": 5395,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5388,
											"end": 5395,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5395,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5369,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5508,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5567,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5544,
											"end": 5559,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5544,
											"end": 5559,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5541,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5533,
											"end": 5559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5533,
											"end": 5559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5559,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5533,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5532,
											"end": 5567,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5532,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5567,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5532,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5508,
											"end": 5567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5508,
											"end": 5567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5665,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5652,
											"end": 5657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5643,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5648,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5631,
											"end": 5657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5631,
											"end": 5657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5657,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5631,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5630,
											"end": 5665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5630,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5699,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5715,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 6691,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5676,
											"end": 6691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5774,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5763,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5774,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5753,
											"end": 5798,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5798,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5753,
											"end": 5798,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5798,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5753,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5777,
											"end": 5785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5798,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5753,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5845,
											"end": 5856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5830,
											"end": 5840,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5820,
											"end": 5841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5841,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5820,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5856,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5856,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5812,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5812,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5901,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5911,
											"end": 5921,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5935,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5949,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5901,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5901,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5901,
											"end": 5950,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5901,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5978,
											"end": 5982,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 5996,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5964,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5997,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5964,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6137,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6114,
											"end": 6129,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6114,
											"end": 6129,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6100,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6100,
											"end": 6129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6100,
											"end": 6129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6100,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6100,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6100,
											"end": 6129,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6100,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6099,
											"end": 6137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6099,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6137,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6099,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6196,
											"end": 6201,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6170,
											"end": 6185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6170,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6169,
											"end": 6201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6262,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6252,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "6E"
										},
										{
											"begin": 6234,
											"end": 6249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6234,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6234,
											"end": 6255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6234,
											"end": 6255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6234,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6234,
											"end": 6255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6234,
											"end": 6255,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6234,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6233,
											"end": 6262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6233,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6262,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6233,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6311,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6316,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6281,
											"end": 6296,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6281,
											"end": 6317,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6388,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6277,
											"end": 6388,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6367,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6372,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6388,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6277,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6424,
											"end": 6439,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6414,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6419,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6402,
											"end": 6439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6474,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6461,
											"end": 6474,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6474,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 6475,
											"end": 6485,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6502,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6461,
											"end": 6503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6461,
											"end": 6503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6461,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 6453,
											"end": 6528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6453,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6649,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "PUSH",
											"source": 6,
											"value": "9C223CFCD8C93E245F558F5F8DE755FC0930FD9BC257441155EF5D54A170E0F"
										},
										{
											"begin": 6651,
											"end": 6662,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6634,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6680,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5717,
											"end": 6691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5717,
											"end": 6691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 6691,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5676,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 6697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 6697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 6697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 6697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2720,
											"end": 2735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 776,
											"end": 806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 776,
											"end": 806,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 776,
											"end": 806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 4255,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4255,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4271,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 4255,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4281,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4312,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4312,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4312,
											"name": "PUSH",
											"source": 6,
											"value": "41976E09"
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4297,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4297,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4281,
											"end": 4327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4281,
											"end": 4327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4380,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4380,
											"end": 4395,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 4367,
											"end": 4395,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4367,
											"end": 4395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4395,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 4367,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4366,
											"end": 4403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4366,
											"end": 4403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4403,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4366,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4469,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4435,
											"end": 4460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4434,
											"end": 4469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4413,
											"end": 4469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4413,
											"end": 4469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4533,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4510,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4511,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4533,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4533,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4479,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 4479,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4575,
											"end": 4577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4579,
											"end": 4589,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4569,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4569,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 4622,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "PUSH",
											"source": 6,
											"value": "30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE"
										},
										{
											"begin": 4624,
											"end": 4634,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4605,
											"end": 4635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4635,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7114,
											"end": 7118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7D0"
										},
										{
											"begin": 7103,
											"end": 7110,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7118,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7118,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 7095,
											"end": 7135,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7095,
											"end": 7135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7145,
											"end": 7157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7145,
											"end": 7167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7145,
											"end": 7167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7145,
											"end": 7167,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7145,
											"end": 7167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1744,
											"end": 1798,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 1985,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2010,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2111,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 2140,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2945,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 3198,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 3370,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3508,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 3448,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3476,
											"end": 3479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3502,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3656,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 3514,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3564,
											"end": 3573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 3624,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 3642,
											"end": 3647,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 3624,
											"end": 3648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3648,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 3624,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 3615,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 3615,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 3597,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3650,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 3597,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3656,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3788,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 3662,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 3776,
											"end": 3781,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3745,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 3745,
											"end": 3782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3745,
											"end": 3782,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 3745,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3782,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3788,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3788,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3794,
											"end": 3934,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 3794,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 3922,
											"end": 3927,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 3891,
											"end": 3928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3928,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 3891,
											"end": 3928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3794,
											"end": 3934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3794,
											"end": 3934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3794,
											"end": 3934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3794,
											"end": 3934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 4099,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 3940,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 4086,
											"end": 4091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 4041,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4036,
											"end": 4039,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4093,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 4099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 4099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 4099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4355,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4105,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4212,
											"end": 4216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4252,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 4345,
											"end": 4346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4343,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4330,
											"end": 4347,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 4263,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4348,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 4263,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4355,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4355,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 4466,
											"end": 4471,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 4448,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4446,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4436,
											"end": 4473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4605,
											"end": 4614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4593,
											"end": 4619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4593,
											"end": 4619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4695,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4673,
											"end": 4679,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 4629,
											"end": 4700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 4629,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4857,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4843,
											"end": 4852,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4858,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4942,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 4823,
											"end": 4942,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 4861,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4861,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4940,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 4861,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4942,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 4823,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4981,
											"end": 4982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 5051,
											"end": 5058,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5048,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5031,
											"end": 5040,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5027,
											"end": 5049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 5006,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5059,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 5006,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5059,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 5179,
											"end": 5186,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5170,
											"end": 5176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5168,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5177,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 5134,
											"end": 5187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5187,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 5134,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5187,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 5197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5238,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5262,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 5307,
											"end": 5314,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5296,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5283,
											"end": 5305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 5262,
											"end": 5315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5315,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 5262,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5315,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 5332,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 5332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5380,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5417,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5406,
											"end": 5411,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5418,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5391,
											"end": 5418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5391,
											"end": 5418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 5529,
											"end": 5534,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 5513,
											"end": 5535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5536,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5637,
											"end": 5641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5673,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5652,
											"end": 5678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5652,
											"end": 5678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 5688,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6097,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 5768,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5878,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5855,
											"end": 5862,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5874,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5879,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5844,
											"end": 5963,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5844,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 5844,
											"end": 5963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 5882,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 5882,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5961,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 5882,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5844,
											"end": 5963,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 5844,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6003,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 6072,
											"end": 6079,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6063,
											"end": 6069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6052,
											"end": 6061,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6048,
											"end": 6070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 6027,
											"end": 6080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6080,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 6027,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6017,
											"end": 6080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6017,
											"end": 6080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5973,
											"end": 6090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6432,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6103,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6213,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6190,
											"end": 6197,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6186,
											"end": 6209,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6214,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6179,
											"end": 6298,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6179,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 6179,
											"end": 6298,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 6217,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6217,
											"end": 6296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6296,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 6217,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6179,
											"end": 6298,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 6179,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 6407,
											"end": 6414,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6398,
											"end": 6404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6387,
											"end": 6396,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 6362,
											"end": 6415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6415,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 6362,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6415,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6432,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6585,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6438,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 6573,
											"end": 6578,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 6542,
											"end": 6579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6579,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 6542,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6529,
											"end": 6579,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6529,
											"end": 6579,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6585,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6591,
											"end": 6764,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 6591,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6699,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 6751,
											"end": 6756,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6699,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6699,
											"end": 6757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6699,
											"end": 6757,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 6699,
											"end": 6757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6687,
											"end": 6758,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6591,
											"end": 6764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6591,
											"end": 6764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6591,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 7034,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 6770,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6922,
											"end": 6924,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6911,
											"end": 6920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6899,
											"end": 6925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6899,
											"end": 6925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7013,
											"end": 7022,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7026,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7006,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 6935,
											"end": 7027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7027,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 6935,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 7034,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 7034,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 7034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 7034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 7034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7158,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 7040,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7127,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 7145,
											"end": 7150,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7127,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 7127,
											"end": 7151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7127,
											"end": 7151,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 7127,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7122,
											"end": 7125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7115,
											"end": 7152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7164,
											"end": 7386,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7164,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7257,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7295,
											"end": 7297,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 7376,
											"end": 7377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7358,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 7308,
											"end": 7379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7379,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 7308,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7164,
											"end": 7386,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7164,
											"end": 7386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7164,
											"end": 7386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7164,
											"end": 7386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7164,
											"end": 7386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7866,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7392,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7468,
											"end": 7474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7517,
											"end": 7519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7503,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7520,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7485,
											"end": 7604,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7485,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 7485,
											"end": 7604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7523,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 7523,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 7523,
											"end": 7602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7523,
											"end": 7602,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 7523,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7485,
											"end": 7604,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 7485,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7643,
											"end": 7644,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7668,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 7713,
											"end": 7720,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7668,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7668,
											"end": 7721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7668,
											"end": 7721,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 7668,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7658,
											"end": 7721,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7658,
											"end": 7721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7614,
											"end": 7731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7770,
											"end": 7772,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7796,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 7841,
											"end": 7848,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7832,
											"end": 7838,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7821,
											"end": 7830,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7796,
											"end": 7849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7849,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 7796,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7786,
											"end": 7849,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7786,
											"end": 7849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7741,
											"end": 7859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7866,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7866,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7866,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 8052,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7872,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7920,
											"end": 7997,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7917,
											"end": 7918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7998,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8017,
											"end": 8021,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8007,
											"end": 8022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8041,
											"end": 8045,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8038,
											"end": 8039,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8378,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 8058,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8102,
											"end": 8108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8140,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8133,
											"end": 8137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8129,
											"end": 8141,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8186,
											"end": 8187,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8180,
											"end": 8184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8176,
											"end": 8188,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8197,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 8197,
											"end": 8278,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8267,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 8255,
											"end": 8261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8251,
											"end": 8268,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8241,
											"end": 8268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8241,
											"end": 8268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8197,
											"end": 8278,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 8197,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8327,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8328,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8291,
											"end": 8329,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 8288,
											"end": 8372,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8344,
											"end": 8362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8372,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 8288,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8109,
											"end": 8378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8384,
											"end": 8549,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 8384,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8524,
											"end": 8541,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F7420656E6F75676820635553440000000000000000000000000000000000"
										},
										{
											"begin": 8520,
											"end": 8521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8508,
											"end": 8522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8384,
											"end": 8549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8384,
											"end": 8549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8555,
											"end": 8921,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 8555,
											"end": 8921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 8782,
											"end": 8784,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 8777,
											"end": 8780,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 8718,
											"end": 8785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8785,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 8718,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8785,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 8883,
											"end": 8886,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 8794,
											"end": 8887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8887,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 8794,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8912,
											"end": 8914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8907,
											"end": 8910,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8903,
											"end": 8915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8896,
											"end": 8915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8896,
											"end": 8915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8555,
											"end": 8921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8555,
											"end": 8921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8555,
											"end": 8921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8555,
											"end": 8921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 9346,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 8927,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9131,
											"end": 9133,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9120,
											"end": 9129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9116,
											"end": 9134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9108,
											"end": 9134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9108,
											"end": 9134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9180,
											"end": 9189,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9174,
											"end": 9178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9190,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9166,
											"end": 9167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9164,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9151,
											"end": 9168,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9191,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9208,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 9334,
											"end": 9338,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9208,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9208,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9208,
											"end": 9339,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 9208,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9200,
											"end": 9339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9200,
											"end": 9339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 9346,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 9346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 9346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 9346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9352,
											"end": 9523,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 9352,
											"end": 9523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9492,
											"end": 9515,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F7420656E6F75676820636F6C6C61746572616C0000000000000000000000"
										},
										{
											"begin": 9488,
											"end": 9489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9469,
											"end": 9516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9352,
											"end": 9523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9352,
											"end": 9523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9529,
											"end": 9895,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 9529,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9671,
											"end": 9674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9692,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 9756,
											"end": 9758,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 9751,
											"end": 9754,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 9692,
											"end": 9759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 9759,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 9692,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9685,
											"end": 9759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9685,
											"end": 9759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9768,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 9857,
											"end": 9860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9768,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 9768,
											"end": 9861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9768,
											"end": 9861,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 9768,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 9888,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9881,
											"end": 9884,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9877,
											"end": 9889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9870,
											"end": 9889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9870,
											"end": 9889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9529,
											"end": 9895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9529,
											"end": 9895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9529,
											"end": 9895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9529,
											"end": 9895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 10320,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 9901,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10067,
											"end": 10071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10105,
											"end": 10107,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10094,
											"end": 10103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10090,
											"end": 10108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10154,
											"end": 10163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10144,
											"end": 10164,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10140,
											"end": 10141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10129,
											"end": 10138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10125,
											"end": 10142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10118,
											"end": 10165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 10308,
											"end": 10312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 10182,
											"end": 10313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10313,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 10182,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10174,
											"end": 10313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10174,
											"end": 10313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 10320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 10320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 10320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 10320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10326,
											"end": 10469,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 10326,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10414,
											"end": 10420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10408,
											"end": 10421,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10399,
											"end": 10421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10399,
											"end": 10421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10430,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 10457,
											"end": 10462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10430,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 10430,
											"end": 10463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10430,
											"end": 10463,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 10430,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10326,
											"end": 10469,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10326,
											"end": 10469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10326,
											"end": 10469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10326,
											"end": 10469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10326,
											"end": 10469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10826,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 10475,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10594,
											"end": 10596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10582,
											"end": 10591,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10573,
											"end": 10580,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10569,
											"end": 10592,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10597,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10562,
											"end": 10681,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10562,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 10562,
											"end": 10681,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10600,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 10600,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10600,
											"end": 10679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10600,
											"end": 10679,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 10600,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10562,
											"end": 10681,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 10562,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10745,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 10801,
											"end": 10808,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10792,
											"end": 10798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10781,
											"end": 10790,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10745,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 10745,
											"end": 10809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10745,
											"end": 10809,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 10745,
											"end": 10809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10735,
											"end": 10809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10735,
											"end": 10809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10691,
											"end": 10819,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10826,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10832,
											"end": 11012,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 10832,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10880,
											"end": 10957,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10877,
											"end": 10878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10870,
											"end": 10958,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10977,
											"end": 10981,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10967,
											"end": 10982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11001,
											"end": 11005,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10998,
											"end": 10999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11006,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11018,
											"end": 11428,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 11018,
											"end": 11428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11081,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 11099,
											"end": 11100,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11081,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11081,
											"end": 11101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11081,
											"end": 11101,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 11081,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11101,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 11133,
											"end": 11134,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11115,
											"end": 11135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11135,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 11115,
											"end": 11135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11110,
											"end": 11135,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11110,
											"end": 11135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11170,
											"end": 11171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11167,
											"end": 11168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11163,
											"end": 11172,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 11210,
											"end": 11221,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11192,
											"end": 11222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11222,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 11192,
											"end": 11222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11362,
											"end": 11369,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11358,
											"end": 11373,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11356,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11374,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11333,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11334,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11305,
											"end": 11388,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11282,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 11282,
											"end": 11421,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 11401,
											"end": 11419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11282,
											"end": 11421,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 11282,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11066,
											"end": 11428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11018,
											"end": 11428,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11018,
											"end": 11428,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11018,
											"end": 11428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11018,
											"end": 11428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11018,
											"end": 11428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11434,
											"end": 11614,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 11434,
											"end": 11614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11482,
											"end": 11559,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11479,
											"end": 11480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11579,
											"end": 11583,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 11576,
											"end": 11577,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11569,
											"end": 11584,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11603,
											"end": 11607,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11600,
											"end": 11601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11593,
											"end": 11608,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11620,
											"end": 11805,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 11620,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11660,
											"end": 11661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11677,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 11695,
											"end": 11696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11677,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11677,
											"end": 11697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11677,
											"end": 11697,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 11677,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 11729,
											"end": 11730,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11711,
											"end": 11731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11731,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 11711,
											"end": 11731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11706,
											"end": 11731,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11706,
											"end": 11731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11750,
											"end": 11751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11740,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 11740,
											"end": 11775,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 11755,
											"end": 11773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11740,
											"end": 11775,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 11740,
											"end": 11775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11797,
											"end": 11798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11794,
											"end": 11795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11790,
											"end": 11799,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11785,
											"end": 11799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11785,
											"end": 11799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11620,
											"end": 11805,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11620,
											"end": 11805,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11620,
											"end": 11805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11620,
											"end": 11805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11620,
											"end": 11805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11811,
											"end": 12005,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 11811,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11851,
											"end": 11855,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 11889,
											"end": 11890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11871,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11871,
											"end": 11891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11871,
											"end": 11891,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 11871,
											"end": 11891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11905,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 11923,
											"end": 11924,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11905,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11905,
											"end": 11925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11905,
											"end": 11925,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 11905,
											"end": 11925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 11925,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 11925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11946,
											"end": 11947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11942,
											"end": 11951,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11934,
											"end": 11951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11934,
											"end": 11951,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11967,
											"end": 11971,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 11975,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 11998,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 11998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 11961,
											"end": 11998,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11978,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 11978,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 11978,
											"end": 11996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11978,
											"end": 11996,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 11978,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 11998,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 11961,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11811,
											"end": 12005,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11811,
											"end": 12005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11811,
											"end": 12005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11811,
											"end": 12005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11811,
											"end": 12005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12233,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12011,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12151,
											"end": 12185,
											"name": "PUSH",
											"source": 9,
											"value": "5769746864726177616C20776F756C6420756E646572636F6C6C61746572616C"
										},
										{
											"begin": 12147,
											"end": 12148,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12139,
											"end": 12145,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12128,
											"end": 12186,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12225,
											"name": "PUSH",
											"source": 9,
											"value": "697A650000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12215,
											"end": 12217,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12207,
											"end": 12213,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12203,
											"end": 12218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12196,
											"end": 12226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12605,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 12239,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12381,
											"end": 12384,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12402,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 12466,
											"end": 12468,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 12461,
											"end": 12464,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12402,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 12402,
											"end": 12469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12402,
											"end": 12469,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 12402,
											"end": 12469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12395,
											"end": 12469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12395,
											"end": 12469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 12567,
											"end": 12570,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12478,
											"end": 12571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12571,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 12478,
											"end": 12571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12596,
											"end": 12598,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12591,
											"end": 12594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12580,
											"end": 12599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12580,
											"end": 12599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 13030,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 12611,
											"end": 13030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12777,
											"end": 12781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12815,
											"end": 12817,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12804,
											"end": 12813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12792,
											"end": 12818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12792,
											"end": 12818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12864,
											"end": 12873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12858,
											"end": 12862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 12874,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12850,
											"end": 12851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12839,
											"end": 12848,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12835,
											"end": 12852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 12875,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12892,
											"end": 13023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 13018,
											"end": 13022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12892,
											"end": 13023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 12892,
											"end": 13023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12892,
											"end": 13023,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 12892,
											"end": 13023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12884,
											"end": 13023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12884,
											"end": 13023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 13030,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 13030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 13030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 13030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13036,
											"end": 13368,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 13036,
											"end": 13368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13157,
											"end": 13161,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13195,
											"end": 13197,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13184,
											"end": 13193,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13180,
											"end": 13198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13172,
											"end": 13198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13172,
											"end": 13198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 13276,
											"end": 13277,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13265,
											"end": 13274,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13252,
											"end": 13258,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 13208,
											"end": 13279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 13357,
											"end": 13359,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13346,
											"end": 13355,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13342,
											"end": 13360,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13333,
											"end": 13339,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 13289,
											"end": 13361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13361,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 13289,
											"end": 13361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13036,
											"end": 13368,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13036,
											"end": 13368,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13036,
											"end": 13368,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13036,
											"end": 13368,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13036,
											"end": 13368,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13036,
											"end": 13368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13490,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 13374,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13444,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 13459,
											"end": 13464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13444,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 13444,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13444,
											"end": 13465,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 13444,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13437,
											"end": 13442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13434,
											"end": 13466,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13424,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 13424,
											"end": 13484,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13480,
											"end": 13481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13477,
											"end": 13478,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13470,
											"end": 13482,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13424,
											"end": 13484,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 13424,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13490,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13633,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 13496,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13581,
											"end": 13587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13575,
											"end": 13588,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13566,
											"end": 13588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13566,
											"end": 13588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13597,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 13621,
											"end": 13626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13597,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 13597,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13597,
											"end": 13627,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 13597,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13633,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13633,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13639,
											"end": 13984,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 13639,
											"end": 13984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13706,
											"end": 13712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13755,
											"end": 13757,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13743,
											"end": 13752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13734,
											"end": 13741,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13730,
											"end": 13753,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13726,
											"end": 13758,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13723,
											"end": 13842,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13723,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 13723,
											"end": 13842,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13761,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 13761,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 13761,
											"end": 13840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13761,
											"end": 13840,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 13761,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13723,
											"end": 13842,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 13723,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13881,
											"end": 13882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13906,
											"end": 13967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 13959,
											"end": 13966,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13950,
											"end": 13956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13939,
											"end": 13948,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13935,
											"end": 13957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13906,
											"end": 13967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 13906,
											"end": 13967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13906,
											"end": 13967,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 13906,
											"end": 13967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13896,
											"end": 13967,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13896,
											"end": 13967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13852,
											"end": 13977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13639,
											"end": 13984,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13639,
											"end": 13984,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13639,
											"end": 13984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13639,
											"end": 13984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13639,
											"end": 13984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14160,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 13990,
											"end": 14160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14130,
											"end": 14152,
											"name": "PUSH",
											"source": 9,
											"value": "63425443207472616E73666572206661696C6564000000000000000000000000"
										},
										{
											"begin": 14126,
											"end": 14127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14118,
											"end": 14124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14114,
											"end": 14128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14107,
											"end": 14153,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14166,
											"end": 14532,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 14166,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14308,
											"end": 14311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14329,
											"end": 14396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 14393,
											"end": 14395,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 14388,
											"end": 14391,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14329,
											"end": 14396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 14329,
											"end": 14396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14329,
											"end": 14396,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 14329,
											"end": 14396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14396,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14322,
											"end": 14396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14405,
											"end": 14498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 14494,
											"end": 14497,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14405,
											"end": 14498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 14405,
											"end": 14498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14405,
											"end": 14498,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 14405,
											"end": 14498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14523,
											"end": 14525,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14518,
											"end": 14521,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14514,
											"end": 14526,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14507,
											"end": 14526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14507,
											"end": 14526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14166,
											"end": 14532,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14166,
											"end": 14532,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14166,
											"end": 14532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14166,
											"end": 14532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14538,
											"end": 14957,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 14538,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14704,
											"end": 14708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14742,
											"end": 14744,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14731,
											"end": 14740,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14727,
											"end": 14745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14719,
											"end": 14745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14719,
											"end": 14745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14791,
											"end": 14800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 14789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14781,
											"end": 14801,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14777,
											"end": 14778,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14766,
											"end": 14775,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14762,
											"end": 14779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14755,
											"end": 14802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14819,
											"end": 14950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 14945,
											"end": 14949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14819,
											"end": 14950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 14819,
											"end": 14950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14819,
											"end": 14950,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 14819,
											"end": 14950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14811,
											"end": 14950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14811,
											"end": 14950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14538,
											"end": 14957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14538,
											"end": 14957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14538,
											"end": 14957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14538,
											"end": 14957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15134,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 14963,
											"end": 15134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15103,
											"end": 15126,
											"name": "PUSH",
											"source": 9,
											"value": "526174696F206D757374206265203E3D20313030250000000000000000000000"
										},
										{
											"begin": 15099,
											"end": 15100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15091,
											"end": 15097,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15087,
											"end": 15101,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15080,
											"end": 15127,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15140,
											"end": 15506,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 15140,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15282,
											"end": 15285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15303,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 15367,
											"end": 15369,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 15362,
											"end": 15365,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 15303,
											"end": 15370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15370,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 15303,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15296,
											"end": 15370,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15296,
											"end": 15370,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15379,
											"end": 15472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 15468,
											"end": 15471,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15379,
											"end": 15472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 15379,
											"end": 15472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15379,
											"end": 15472,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 15379,
											"end": 15472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15497,
											"end": 15499,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15492,
											"end": 15495,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15488,
											"end": 15500,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15481,
											"end": 15500,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15481,
											"end": 15500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15140,
											"end": 15506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15140,
											"end": 15506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15140,
											"end": 15506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15140,
											"end": 15506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15512,
											"end": 15931,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 15512,
											"end": 15931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15678,
											"end": 15682,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15705,
											"end": 15714,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15701,
											"end": 15719,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15765,
											"end": 15774,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15759,
											"end": 15763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15755,
											"end": 15775,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15751,
											"end": 15752,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15740,
											"end": 15749,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15736,
											"end": 15753,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15729,
											"end": 15776,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15793,
											"end": 15924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 15919,
											"end": 15923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15793,
											"end": 15924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 15793,
											"end": 15924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15793,
											"end": 15924,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 15793,
											"end": 15924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15785,
											"end": 15924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15785,
											"end": 15924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15512,
											"end": 15931,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15512,
											"end": 15931,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15512,
											"end": 15931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15512,
											"end": 15931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15937,
											"end": 16105,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 15937,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16077,
											"end": 16097,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 16073,
											"end": 16074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16061,
											"end": 16075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16054,
											"end": 16098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15937,
											"end": 16105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15937,
											"end": 16105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16111,
											"end": 16477,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 16111,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16253,
											"end": 16256,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16274,
											"end": 16341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 16338,
											"end": 16340,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 16333,
											"end": 16336,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 16274,
											"end": 16341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16341,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 16274,
											"end": 16341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16267,
											"end": 16341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16267,
											"end": 16341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16350,
											"end": 16443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 16439,
											"end": 16442,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16350,
											"end": 16443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 16350,
											"end": 16443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16350,
											"end": 16443,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 16350,
											"end": 16443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16468,
											"end": 16470,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16463,
											"end": 16466,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16459,
											"end": 16471,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16452,
											"end": 16471,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16452,
											"end": 16471,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16111,
											"end": 16477,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16111,
											"end": 16477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16111,
											"end": 16477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16111,
											"end": 16477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16483,
											"end": 16902,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 16483,
											"end": 16902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16649,
											"end": 16653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16687,
											"end": 16689,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16676,
											"end": 16685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16664,
											"end": 16690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16664,
											"end": 16690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16736,
											"end": 16745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16730,
											"end": 16734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16726,
											"end": 16746,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16722,
											"end": 16723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16711,
											"end": 16720,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16707,
											"end": 16724,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16700,
											"end": 16747,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16764,
											"end": 16895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 16890,
											"end": 16894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16764,
											"end": 16895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 16764,
											"end": 16895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16764,
											"end": 16895,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 16764,
											"end": 16895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16756,
											"end": 16895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16756,
											"end": 16895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16483,
											"end": 16902,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16483,
											"end": 16902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16483,
											"end": 16902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16483,
											"end": 16902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 17350,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 16908,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17057,
											"end": 17061,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17097,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17084,
											"end": 17093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17080,
											"end": 17098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17108,
											"end": 17179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 17176,
											"end": 17177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17165,
											"end": 17174,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17161,
											"end": 17178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17152,
											"end": 17158,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17108,
											"end": 17179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 17108,
											"end": 17179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17108,
											"end": 17179,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 17108,
											"end": 17179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17189,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 17257,
											"end": 17259,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17246,
											"end": 17255,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17242,
											"end": 17260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17233,
											"end": 17239,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17189,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 17189,
											"end": 17261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17189,
											"end": 17261,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 17189,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17271,
											"end": 17343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 17339,
											"end": 17341,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17328,
											"end": 17337,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17324,
											"end": 17342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17315,
											"end": 17321,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17271,
											"end": 17343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 17271,
											"end": 17343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17271,
											"end": 17343,
											"name": "tag",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 17271,
											"end": 17343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 17350,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 17350,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 17350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 17350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 17350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 17350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 17350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17547,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 17356,
											"end": 17547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17396,
											"end": 17399,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17415,
											"end": 17435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 17433,
											"end": 17434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17415,
											"end": 17435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 17415,
											"end": 17435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17415,
											"end": 17435,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 17415,
											"end": 17435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17410,
											"end": 17435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17410,
											"end": 17435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17449,
											"end": 17469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 17467,
											"end": 17468,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17449,
											"end": 17469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 17449,
											"end": 17469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17449,
											"end": 17469,
											"name": "tag",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 17449,
											"end": 17469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17444,
											"end": 17469,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17444,
											"end": 17469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17492,
											"end": 17493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17489,
											"end": 17490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17485,
											"end": 17494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17478,
											"end": 17494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17478,
											"end": 17494,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17513,
											"end": 17516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17510,
											"end": 17511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17507,
											"end": 17517,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17504,
											"end": 17540,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17504,
											"end": 17540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 17504,
											"end": 17540,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17520,
											"end": 17538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 17520,
											"end": 17538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 17520,
											"end": 17538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17520,
											"end": 17538,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 17520,
											"end": 17538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17504,
											"end": 17540,
											"name": "tag",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 17504,
											"end": 17540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17553,
											"end": 17729,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 17553,
											"end": 17729,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17693,
											"end": 17721,
											"name": "PUSH",
											"source": 9,
											"value": "4C697175696461746F72206E6F7420656E6F7567682063555344000000000000"
										},
										{
											"begin": 17689,
											"end": 17690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17681,
											"end": 17687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17677,
											"end": 17691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17670,
											"end": 17722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17553,
											"end": 17729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17553,
											"end": 17729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17735,
											"end": 18101,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 17735,
											"end": 18101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17877,
											"end": 17880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17898,
											"end": 17965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 17962,
											"end": 17964,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 17957,
											"end": 17960,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17898,
											"end": 17965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 17898,
											"end": 17965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17898,
											"end": 17965,
											"name": "tag",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 17898,
											"end": 17965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17891,
											"end": 17965,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17891,
											"end": 17965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17974,
											"end": 18067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 18063,
											"end": 18066,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17974,
											"end": 18067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 17974,
											"end": 18067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17974,
											"end": 18067,
											"name": "tag",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 17974,
											"end": 18067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18092,
											"end": 18094,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18087,
											"end": 18090,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18083,
											"end": 18095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18076,
											"end": 18095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18076,
											"end": 18095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17735,
											"end": 18101,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17735,
											"end": 18101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17735,
											"end": 18101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17735,
											"end": 18101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18107,
											"end": 18526,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 18107,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18273,
											"end": 18277,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18311,
											"end": 18313,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18300,
											"end": 18309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18296,
											"end": 18314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18288,
											"end": 18314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18288,
											"end": 18314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18360,
											"end": 18369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18358,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18350,
											"end": 18370,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18346,
											"end": 18347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18335,
											"end": 18344,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18331,
											"end": 18348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18324,
											"end": 18371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18388,
											"end": 18519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 18514,
											"end": 18518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18388,
											"end": 18519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 18388,
											"end": 18519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18388,
											"end": 18519,
											"name": "tag",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 18388,
											"end": 18519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18380,
											"end": 18519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18380,
											"end": 18519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18107,
											"end": 18526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18107,
											"end": 18526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18107,
											"end": 18526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18107,
											"end": 18526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18532,
											"end": 18864,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 18532,
											"end": 18864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18653,
											"end": 18657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18691,
											"end": 18693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18680,
											"end": 18689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18676,
											"end": 18694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18704,
											"end": 18775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 18772,
											"end": 18773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18761,
											"end": 18770,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18757,
											"end": 18774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18748,
											"end": 18754,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18704,
											"end": 18775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 18704,
											"end": 18775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18704,
											"end": 18775,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 18704,
											"end": 18775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18785,
											"end": 18857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 18853,
											"end": 18855,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18842,
											"end": 18851,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18838,
											"end": 18856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18829,
											"end": 18835,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18785,
											"end": 18857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 18785,
											"end": 18857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18785,
											"end": 18857,
											"name": "tag",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 18785,
											"end": 18857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18532,
											"end": 18864,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 18532,
											"end": 18864,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18532,
											"end": 18864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18532,
											"end": 18864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18532,
											"end": 18864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18532,
											"end": 18864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18870,
											"end": 19032,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 18870,
											"end": 19032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19010,
											"end": 19024,
											"name": "PUSH",
											"source": 9,
											"value": "46656520746F6F20686967680000000000000000000000000000000000000000"
										},
										{
											"begin": 19006,
											"end": 19007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19004,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18994,
											"end": 19008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18987,
											"end": 19025,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18870,
											"end": 19032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18870,
											"end": 19032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19038,
											"end": 19404,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 19038,
											"end": 19404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19180,
											"end": 19183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19201,
											"end": 19268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 19265,
											"end": 19267,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 19260,
											"end": 19263,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19201,
											"end": 19268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 19201,
											"end": 19268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19201,
											"end": 19268,
											"name": "tag",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 19201,
											"end": 19268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19194,
											"end": 19268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19194,
											"end": 19268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19277,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 19366,
											"end": 19369,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19277,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 19277,
											"end": 19370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19277,
											"end": 19370,
											"name": "tag",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 19277,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19395,
											"end": 19397,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19390,
											"end": 19393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19386,
											"end": 19398,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19379,
											"end": 19398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19379,
											"end": 19398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19038,
											"end": 19404,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19038,
											"end": 19404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19038,
											"end": 19404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19038,
											"end": 19404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19410,
											"end": 19829,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 19410,
											"end": 19829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19576,
											"end": 19580,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19614,
											"end": 19616,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19603,
											"end": 19612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19599,
											"end": 19617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19591,
											"end": 19617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19591,
											"end": 19617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19663,
											"end": 19672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19657,
											"end": 19661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19653,
											"end": 19673,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19649,
											"end": 19650,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19638,
											"end": 19647,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19634,
											"end": 19651,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19627,
											"end": 19674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19691,
											"end": 19822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 19817,
											"end": 19821,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19691,
											"end": 19822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 19691,
											"end": 19822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19691,
											"end": 19822,
											"name": "tag",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 19691,
											"end": 19822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19683,
											"end": 19822,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19683,
											"end": 19822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19410,
											"end": 19829,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19410,
											"end": 19829,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19410,
											"end": 19829,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19410,
											"end": 19829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19835,
											"end": 20277,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 19835,
											"end": 20277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19984,
											"end": 19988,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20022,
											"end": 20024,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 20011,
											"end": 20020,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20007,
											"end": 20025,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19999,
											"end": 20025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19999,
											"end": 20025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20035,
											"end": 20106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 20103,
											"end": 20104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20092,
											"end": 20101,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20088,
											"end": 20105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20079,
											"end": 20085,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20035,
											"end": 20106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 20035,
											"end": 20106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20035,
											"end": 20106,
											"name": "tag",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 20035,
											"end": 20106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20116,
											"end": 20188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 20184,
											"end": 20186,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20173,
											"end": 20182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20169,
											"end": 20187,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20160,
											"end": 20166,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20116,
											"end": 20188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 20116,
											"end": 20188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20116,
											"end": 20188,
											"name": "tag",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 20116,
											"end": 20188,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20198,
											"end": 20270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 20266,
											"end": 20268,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20255,
											"end": 20264,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20251,
											"end": 20269,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20242,
											"end": 20248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20198,
											"end": 20270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 20198,
											"end": 20270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20198,
											"end": 20270,
											"name": "tag",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 20198,
											"end": 20270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19835,
											"end": 20277,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 19835,
											"end": 20277,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 19835,
											"end": 20277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19835,
											"end": 20277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19835,
											"end": 20277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19835,
											"end": 20277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19835,
											"end": 20277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/StableCoin.sol",
								"contracts/interfaces/IPriceOracle.sol",
								"contracts/interfaces/IStableCoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"accrueInterest()": "a6afed95",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnStableCoin(address,uint256)": "1455b3ab",
							"cBTC()": "0ae8c4dc",
							"cBTCDeposits(address)": "4e8d048b",
							"collateralRatio()": "b4eae1cb",
							"decimals()": "313ce567",
							"depositCollateral(address,uint256)": "a5d5db0c",
							"getCollateralRatio()": "cd377c53",
							"getUserCollateral(address)": "b6f7132f",
							"lastAccrualTime()": "d7e72708",
							"liquidate(address,uint256)": "bcbaf487",
							"mintStableCoin(address,uint256)": "ea629db0",
							"name()": "06fdde03",
							"oracle()": "7dc0d1d0",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setCollateralRatio(uint256)": "6060663e",
							"setStabilityFee(uint256)": "fb4ca35b",
							"stabilityFee()": "361416e1",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawCollateral(address,uint256)": "350c35e9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cBTC\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stabilityFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtRepaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralSeized\",\"type\":\"uint256\"}],\"name\":\"Liquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accrueInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cUSDAmount\",\"type\":\"uint256\"}],\"name\":\"burnStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cBTC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cBTCDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastAccrualTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cUSDAmount\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cUSDAmount\",\"type\":\"uint256\"}],\"name\":\"mintStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRatio\",\"type\":\"uint256\"}],\"name\":\"setCollateralRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setStabilityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple stablecoin implementation that uses cBTC as collateral.      Supports accruing a stability fee over time, minting, burning, and liquidation.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"accrueInterest()\":{\"details\":\"Accrues interest on the stablecoin supply by minting stability fee to owner.      Stability fee accumulates over time, increasing total supply.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burnStableCoin(address,uint256)\":{\"details\":\"Burn stablecoins from the user's balance.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"depositCollateral(address,uint256)\":{\"details\":\"Deposit cBTC as collateral.\"},\"getUserCollateral(address)\":{\"details\":\"Get how much cBTC collateral a user has deposited.\"},\"liquidate(address,uint256)\":{\"details\":\"Liquidate an undercollateralized user.      A liquidator repays a portion of the user's debt, and in return seizes collateral      at a discount.\"},\"mintStableCoin(address,uint256)\":{\"details\":\"Mint stablecoins if the user has enough collateral.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setCollateralRatio(uint256)\":{\"details\":\"Owner can update collateral ratio.\"},\"setStabilityFee(uint256)\":{\"details\":\"Owner can set the stability fee (annualized in bps).\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawCollateral(address,uint256)\":{\"details\":\"Withdraw cBTC collateral as long as the user remains over-collateralized.\"}},\"title\":\"StableCoin\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StableCoin.sol\":\"StableCoin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/StableCoin.sol\":{\"keccak256\":\"0x4984fa6a697a7704efc65db4d8f576b2061bd29a77637b7bc145b94169317bf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a60522b28bf74fe08fc48e8fff2f1c6f759882bbff47078dd669c6a504545ee\",\"dweb:/ipfs/QmTfFBnnPPXU9NkQnSGmedhrpduMjD4XDad8PVk4785WWS\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4764520c89818be193a76d9ce9d68211ad1be49e90d7d16830b19f97b58defb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d3f684900d1feb9fe67d89223d4ccba855d2e81c7afdf68144ac2f01660a46d\",\"dweb:/ipfs/QmYsfLuyxoZ2cGmReghasGF1kXQzpKob3Abkzx8Wg7t6QL\"]},\"contracts/interfaces/IStableCoin.sol\":{\"keccak256\":\"0xb272ba1cf1c409e762d28edb03552f3180cbb29b3cbd714d00c5925ca3f6de39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1ae71b9f418c51e7bb3649be68d91dcb3e8640eb5aaeefdcfa61558c1389ac\",\"dweb:/ipfs/QmeWdfVsmL2PP9xRj7nNcoBrPbAcEnBaunERsiMbrEE2gu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 950,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "cBTC",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)877"
							},
							{
								"astId": 953,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "oracle",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IPriceOracle)1589"
							},
							{
								"astId": 955,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "collateralRatio",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 957,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "stabilityFee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 959,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "lastAccrualTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 963,
								"contract": "contracts/StableCoin.sol:StableCoin",
								"label": "cBTCDeposits",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IPriceOracle)1589": {
								"encoding": "inplace",
								"label": "contract IPriceOracle",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"IPriceOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPrice(address)": "41976e09"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4764520c89818be193a76d9ce9d68211ad1be49e90d7d16830b19f97b58defb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d3f684900d1feb9fe67d89223d4ccba855d2e81c7afdf68144ac2f01660a46d\",\"dweb:/ipfs/QmYsfLuyxoZ2cGmReghasGF1kXQzpKob3Abkzx8Wg7t6QL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IStableCoin.sol": {
				"IStableCoin": {
					"abi": [
						{
							"inputs": [],
							"name": "accrueInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cUSDAmount",
									"type": "uint256"
								}
							],
							"name": "burnStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCollateralRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cUSDAmount",
									"type": "uint256"
								}
							],
							"name": "liquidate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cUSDAmount",
									"type": "uint256"
								}
							],
							"name": "mintStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accrueInterest()": "a6afed95",
							"burnStableCoin(address,uint256)": "1455b3ab",
							"depositCollateral(address,uint256)": "a5d5db0c",
							"getCollateralRatio()": "cd377c53",
							"liquidate(address,uint256)": "bcbaf487",
							"mintStableCoin(address,uint256)": "ea629db0",
							"withdrawCollateral(address,uint256)": "350c35e9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"accrueInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cUSDAmount\",\"type\":\"uint256\"}],\"name\":\"burnStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cUSDAmount\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cUSDAmount\",\"type\":\"uint256\"}],\"name\":\"mintStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStableCoin.sol\":\"IStableCoin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStableCoin.sol\":{\"keccak256\":\"0xb272ba1cf1c409e762d28edb03552f3180cbb29b3cbd714d00c5925ca3f6de39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1ae71b9f418c51e7bb3649be68d91dcb3e8640eb5aaeefdcfa61558c1389ac\",\"dweb:/ipfs/QmeWdfVsmL2PP9xRj7nNcoBrPbAcEnBaunERsiMbrEE2gu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/StableCoin.sol": {
				"ast": {
					"absolutePath": "contracts/StableCoin.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IPriceOracle": [
							1589
						],
						"IStableCoin": [
							1635
						],
						"Ownable": [
							147
						],
						"StableCoin": [
							1579
						]
					},
					"id": 1580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1580,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1580,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPriceOracle.sol",
							"file": "./interfaces/IPriceOracle.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1580,
							"sourceUnit": 1590,
							"src": "167:39:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IStableCoin.sol",
							"file": "./interfaces/IStableCoin.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1580,
							"sourceUnit": 1636,
							"src": "207:38:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1580,
							"sourceUnit": 878,
							"src": "246:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 942,
										"name": "ERC20",
										"nameLocations": [
											"517:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "517:5:6"
									},
									"id": 943,
									"nodeType": "InheritanceSpecifier",
									"src": "517:5:6"
								},
								{
									"baseName": {
										"id": 944,
										"name": "Ownable",
										"nameLocations": [
											"524:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "524:7:6"
									},
									"id": 945,
									"nodeType": "InheritanceSpecifier",
									"src": "524:7:6"
								},
								{
									"baseName": {
										"id": 946,
										"name": "IStableCoin",
										"nameLocations": [
											"533:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1635,
										"src": "533:11:6"
									},
									"id": 947,
									"nodeType": "InheritanceSpecifier",
									"src": "533:11:6"
								}
							],
							"canonicalName": "StableCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 941,
								"nodeType": "StructuredDocumentation",
								"src": "304:189:6",
								"text": " @title StableCoin\n @dev A simple stablecoin implementation that uses cBTC as collateral.\n      Supports accruing a stability fee over time, minting, burning, and liquidation."
							},
							"fullyImplemented": true,
							"id": 1579,
							"linearizedBaseContracts": [
								1579,
								1635,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "StableCoin",
							"nameLocation": "503:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0ae8c4dc",
									"id": 950,
									"mutability": "mutable",
									"name": "cBTC",
									"nameLocation": "565:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1579,
									"src": "551:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 949,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 948,
											"name": "IERC20",
											"nameLocations": [
												"551:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "551:6:6"
										},
										"referencedDeclaration": 877,
										"src": "551:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7dc0d1d0",
									"id": 953,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "595:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1579,
									"src": "575:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPriceOracle_$1589",
										"typeString": "contract IPriceOracle"
									},
									"typeName": {
										"id": 952,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 951,
											"name": "IPriceOracle",
											"nameLocations": [
												"575:12:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1589,
											"src": "575:12:6"
										},
										"referencedDeclaration": 1589,
										"src": "575:12:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceOracle_$1589",
											"typeString": "contract IPriceOracle"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4eae1cb",
									"id": 955,
									"mutability": "mutable",
									"name": "collateralRatio",
									"nameLocation": "623:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1579,
									"src": "608:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 954,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "608:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "361416e1",
									"id": 957,
									"mutability": "mutable",
									"name": "stabilityFee",
									"nameLocation": "709:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1579,
									"src": "694:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "694:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7e72708",
									"id": 959,
									"mutability": "mutable",
									"name": "lastAccrualTime",
									"nameLocation": "791:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1579,
									"src": "776:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "776:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4e8d048b",
									"id": 963,
									"mutability": "mutable",
									"name": "cBTCDeposits",
									"nameLocation": "848:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1579,
									"src": "813:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 962,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 960,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "821:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "813:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 961,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "832:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142",
									"id": 969,
									"name": "CollateralDeposited",
									"nameLocation": "920:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "956:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "940:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "970:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "962:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:38:6"
									},
									"src": "914:64:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d",
									"id": 975,
									"name": "CollateralWithdrawn",
									"nameLocation": "989:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1025:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1009:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1039:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1031:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:38:6"
									},
									"src": "983:64:6"
								},
								{
									"anonymous": false,
									"eventSelector": "30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe",
									"id": 981,
									"name": "Minted",
									"nameLocation": "1058:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1081:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1065:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1095:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1087:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1064:38:6"
									},
									"src": "1052:51:6"
								},
								{
									"anonymous": false,
									"eventSelector": "4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b9369",
									"id": 987,
									"name": "Redeemed",
									"nameLocation": "1114:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1139:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1123:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1153:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1145:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1122:38:6"
									},
									"src": "1108:53:6"
								},
								{
									"anonymous": false,
									"eventSelector": "09c223cfcd8c93e245f558f5f8de755fc0930fd9bc257441155ef5d54a170e0f",
									"id": 995,
									"name": "Liquidated",
									"nameLocation": "1172:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1199:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1183:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtRepaid",
												"nameLocation": "1213:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1205:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralSeized",
												"nameLocation": "1233:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1225:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:68:6"
									},
									"src": "1166:85:6"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "1436:391:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "_cBTC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "1454:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1471:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1463:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1016,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1463:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1463:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1454:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420634254432061646472657373",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1475:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e",
																"typeString": "literal_string \"Invalid cBTC address\""
															},
															"value": "Invalid cBTC address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_110a0b24a556d557e4341fdb1c7dd44bd7016b91755bfed80df50a68736fb16e",
																"typeString": "literal_string \"Invalid cBTC address\""
															}
														],
														"id": 1014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1446:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1446:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "1446:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1025,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "1516:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1535:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1527:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1026,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1527:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1527:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1516:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f7261636c65",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb",
																"typeString": "literal_string \"Invalid oracle\""
															},
															"value": "Invalid oracle"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de7fece8e30bf0f898e690a7b1eb43d878faf9b1918d3a8d53bf179a80024feb",
																"typeString": "literal_string \"Invalid oracle\""
															}
														],
														"id": 1024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1508:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1508:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "1508:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "_collateralRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "1574:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1594:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "1574:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526174696f206d757374206265203e3d2031303025",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1600:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94",
																"typeString": "literal_string \"Ratio must be >= 100%\""
															},
															"value": "Ratio must be >= 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94",
																"typeString": "literal_string \"Ratio must be >= 100%\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1566:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "1566:58:6"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1041,
														"name": "cBTC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "1635:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1043,
																"name": "_cBTC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "1649:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1042,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "1642:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"src": "1635:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "1635:20:6"
											},
											{
												"expression": {
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1047,
														"name": "collateralRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "1665:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1048,
														"name": "_collateralRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "1683:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1665:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "1665:34:6"
											},
											{
												"expression": {
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1051,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1709:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracle_$1589",
															"typeString": "contract IPriceOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1053,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "1731:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1052,
															"name": "IPriceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "1718:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPriceOracle_$1589_$",
																"typeString": "type(contract IPriceOracle)"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1718:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracle_$1589",
															"typeString": "contract IPriceOracle"
														}
													},
													"src": "1709:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPriceOracle_$1589",
														"typeString": "contract IPriceOracle"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "1709:30:6"
											},
											{
												"expression": {
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1057,
														"name": "stabilityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "1749:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1058,
														"name": "_stabilityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "1764:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1749:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "1749:28:6"
											},
											{
												"expression": {
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1061,
														"name": "lastAccrualTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "1787:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1062,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1805:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1811:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1805:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1787:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "1787:33:6"
											}
										]
									},
									"id": 1067,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "43697472656120555344",
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ee612fcf286f2f0c38c216656f7ee62eec50a75710daada6e4dcc7e92e5e99cf",
														"typeString": "literal_string \"Citrea USD\""
													},
													"value": "Citrea USD"
												},
												{
													"hexValue": "63555344",
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1408:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9d17fd63d9c261430bebf00b2feab3dcd9e19148da014326e6b57e3c254e48fe",
														"typeString": "literal_string \"cUSD\""
													},
													"value": "cUSD"
												}
											],
											"id": 1008,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1005,
												"name": "ERC20",
												"nameLocations": [
													"1388:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1388:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1388:27:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1010,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1424:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1428:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1424:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1012,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1009,
												"name": "Ownable",
												"nameLocations": [
													"1416:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1416:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1416:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "_cBTC",
												"nameLocation": "1286:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1278:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "_collateralRatio",
												"nameLocation": "1309:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1301:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "1343:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1335:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "_stabilityFee",
												"nameLocation": "1368:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1360:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:119:6"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:0:6"
									},
									"scope": 1579,
									"src": "1257:570:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1627
									],
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "2054:572:6",
										"statements": [
											{
												"assignments": [
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "2072:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "2064:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1072,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2064:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1078,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1074,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2086:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2092:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2086:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1076,
														"name": "lastAccrualTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "2104:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2064:55:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1079,
															"name": "timeElapsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "2133:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2147:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2133:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1082,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "2152:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2152:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2152:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2133:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "IfStatement",
												"src": "2129:491:6",
												"trueBody": {
													"id": 1122,
													"nodeType": "Block",
													"src": "2171:449:6",
													"statements": [
														{
															"assignments": [
																1088
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1088,
																	"mutability": "mutable",
																	"name": "feeFraction",
																	"nameLocation": "2307:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1122,
																	"src": "2299:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1087,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2299:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1095,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1089,
																				"name": "stabilityFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "2322:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1090,
																				"name": "timeElapsed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "2337:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2322:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1092,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2321:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3331353336303030",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2352:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "31536000"
																},
																"src": "2321:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2299:61:6"
														},
														{
															"assignments": [
																1097
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1097,
																	"mutability": "mutable",
																	"name": "additionalSupply",
																	"nameLocation": "2402:16:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1122,
																	"src": "2394:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1096,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2394:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1105,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1098,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "2422:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 1099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2422:13:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1100,
																				"name": "feeFraction",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1088,
																				"src": "2438:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2422:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1102,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2421:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2453:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "2421:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2394:64:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1106,
																	"name": "additionalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "2476:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2495:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2476:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1116,
															"nodeType": "IfStatement",
															"src": "2472:91:6",
															"trueBody": {
																"id": 1115,
																"nodeType": "Block",
																"src": "2498:65:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1110,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 67,
																						"src": "2522:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 1111,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2522:7:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1112,
																					"name": "additionalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1097,
																					"src": "2531:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1109,
																				"name": "_mint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 639,
																				"src": "2516:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2516:32:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1114,
																		"nodeType": "ExpressionStatement",
																		"src": "2516:32:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1117,
																	"name": "lastAccrualTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "2576:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1118,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2594:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2600:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2594:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2576:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1121,
															"nodeType": "ExpressionStatement",
															"src": "2576:33:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "1833:174:6",
										"text": " @dev Accrues interest on the stablecoin supply by minting stability fee to owner.\n      Stability fee accumulates over time, increasing total supply."
									},
									"functionSelector": "a6afed95",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accrueInterest",
									"nameLocation": "2021:14:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1070,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2045:8:6"
									},
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:2:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2054:0:6"
									},
									"scope": 1579,
									"src": "2012:614:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1624
									],
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "2703:39:6",
										"statements": [
											{
												"expression": {
													"id": 1131,
													"name": "collateralRatio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 955,
													"src": "2720:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1130,
												"id": 1132,
												"nodeType": "Return",
												"src": "2713:22:6"
											}
										]
									},
									"functionSelector": "cd377c53",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollateralRatio",
									"nameLocation": "2641:18:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1127,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2676:8:6"
									},
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2659:2:6"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2694:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:9:6"
									},
									"scope": 1579,
									"src": "2632:110:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1612
									],
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "2879:233:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1144,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "2897:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2906:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2897:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2909:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2889:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2889:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2889:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1153,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "2966:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1156,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2980:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StableCoin_$1579",
																				"typeString": "contract StableCoin"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StableCoin_$1579",
																				"typeString": "contract StableCoin"
																			}
																		],
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2972:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1154,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2972:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1158,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "2987:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1151,
																	"name": "cBTC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "2948:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2953:12:6",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 876,
																"src": "2948:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2948:46:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63425443207472616e73666572206661696c6564",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2996:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d",
																"typeString": "literal_string \"cBTC transfer failed\""
															},
															"value": "cBTC transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d",
																"typeString": "literal_string \"cBTC transfer failed\""
															}
														],
														"id": 1150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2940:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2940:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "2940:79:6"
											},
											{
												"expression": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1163,
															"name": "cBTCDeposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3029:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1165,
														"indexExpression": {
															"id": 1164,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "3042:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3029:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1166,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "3051:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3029:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "3029:28:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1170,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "3092:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "3098:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1169,
														"name": "CollateralDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "3072:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3072:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "EmitStatement",
												"src": "3067:38:6"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "2748:51:6",
										"text": " @dev Deposit cBTC as collateral."
									},
									"functionSelector": "a5d5db0c",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositCollateral",
									"nameLocation": "2813:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1141,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2870:8:6"
									},
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2839:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2831:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2853:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2845:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2845:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:30:6"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2879:0:6"
									},
									"scope": 1579,
									"src": "2804:308:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1619
									],
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "3296:789:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1184,
														"name": "accrueInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "3306:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3306:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "3306:16:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "3340:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1189,
																	"name": "cBTCDeposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "3350:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1191,
																"indexExpression": {
																	"id": 1190,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "3363:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3350:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3340:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820636f6c6c61746572616c",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3370:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
																"typeString": "literal_string \"Not enough collateral\""
															},
															"value": "Not enough collateral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
																"typeString": "literal_string \"Not enough collateral\""
															}
														],
														"id": 1187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3332:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "3332:62:6"
											},
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "userDebt",
														"nameLocation": "3413:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1272,
														"src": "3405:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3405:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "3434:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1198,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3424:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3424:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3405:34:6"
											},
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3457:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1272,
														"src": "3449:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3449:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1208,
																	"name": "cBTC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "3489:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3481:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1206,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3481:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3481:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1204,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3465:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPriceOracle_$1589",
																"typeString": "contract IPriceOracle"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3472:8:6",
														"memberName": "getPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1588,
														"src": "3465:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3465:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3449:46:6"
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "requiredCollateral",
														"nameLocation": "3513:18:6",
														"nodeType": "VariableDeclaration",
														"scope": 1272,
														"src": "3505:26:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3505:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1220,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1214,
																	"name": "userDebt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "3535:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1215,
																	"name": "collateralRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "3546:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3535:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1217,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3534:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3565:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "3534:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3505:64:6"
											},
											{
												"expression": {
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1221,
														"name": "requiredCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "3644:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1222,
																		"name": "requiredCollateral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "3666:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3687:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "3666:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1225,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3665:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1226,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "3695:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3665:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3644:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "3644:56:6"
											},
											{
												"assignments": [
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "maxWithdraw",
														"nameLocation": "3719:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1272,
														"src": "3711:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1230,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3711:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1232,
																"name": "cBTCDeposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "3733:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1234,
															"indexExpression": {
																"id": 1233,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "3746:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3733:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1235,
															"name": "requiredCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "3754:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3733:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3841:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3733:109:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1237,
																"name": "cBTCDeposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "3787:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1239,
															"indexExpression": {
																"id": 1238,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "3800:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3787:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1240,
															"name": "requiredCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "3808:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3787:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3711:131:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1246,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "3861:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1247,
																"name": "maxWithdraw",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "3871:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3861:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c697a65",
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3884:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b",
																"typeString": "literal_string \"Withdrawal would undercollateralize\""
															},
															"value": "Withdrawal would undercollateralize"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79dedaed318411734026fdb7a0de3fec8456dcc91b03ac812ec360c843f15f0b",
																"typeString": "literal_string \"Withdrawal would undercollateralize\""
															}
														],
														"id": 1245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3853:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3853:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "3853:69:6"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1252,
															"name": "cBTCDeposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3932:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1254,
														"indexExpression": {
															"id": 1253,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "3945:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3932:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1255,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3954:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3932:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "3932:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1261,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "3992:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1262,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "3998:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1259,
																	"name": "cBTC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "3978:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3983:8:6",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 844,
																"src": "3978:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3978:27:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63425443207472616e73666572206661696c6564",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4007:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d",
																"typeString": "literal_string \"cBTC transfer failed\""
															},
															"value": "cBTC transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d",
																"typeString": "literal_string \"cBTC transfer failed\""
															}
														],
														"id": 1258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3970:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3970:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "3970:60:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1268,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "4065:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1269,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "4071:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1267,
														"name": "CollateralWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "4045:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4045:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "EmitStatement",
												"src": "4040:38:6"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "3118:97:6",
										"text": " @dev Withdraw cBTC collateral as long as the user remains over-collateralized."
									},
									"functionSelector": "350c35e9",
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawCollateral",
									"nameLocation": "3229:18:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:6"
									},
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3256:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "3248:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3270:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "3262:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3247:30:6"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3296:0:6"
									},
									"scope": 1579,
									"src": "3220:865:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1598
									],
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "4245:397:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1282,
														"name": "accrueInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "4255:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "4255:16:6"
											},
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "4289:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1334,
														"src": "4281:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4281:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1294,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1291,
																	"name": "cBTC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "4321:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4313:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4313:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4313:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1287,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "4297:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPriceOracle_$1589",
																"typeString": "contract IPriceOracle"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:8:6",
														"memberName": "getPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1588,
														"src": "4297:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4281:46:6"
											},
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "requiredCollateral",
														"nameLocation": "4345:18:6",
														"nodeType": "VariableDeclaration",
														"scope": 1334,
														"src": "4337:26:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4337:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1303,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1297,
																	"name": "cUSDAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "4367:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1298,
																	"name": "collateralRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "4380:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4367:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1300,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4366:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4399:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "4366:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4337:66:6"
											},
											{
												"expression": {
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1304,
														"name": "requiredCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "4413:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1305,
																		"name": "requiredCollateral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1296,
																		"src": "4435:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4456:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "4435:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1308,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4434:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1309,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "4464:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4434:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4413:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "4413:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1314,
																	"name": "cBTCDeposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "4487:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1317,
																"indexExpression": {
																	"expression": {
																		"id": 1315,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4500:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4504:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4500:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4487:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1318,
																"name": "requiredCollateral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "4515:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4487:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820636f6c6c61746572616c",
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4535:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
																"typeString": "literal_string \"Not enough collateral\""
															},
															"value": "Not enough collateral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
																"typeString": "literal_string \"Not enough collateral\""
															}
														],
														"id": 1313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4479:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4479:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "4479:80:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1324,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "4575:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1325,
															"name": "cUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "4579:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1323,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4569:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4569:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "4569:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1329,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4612:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4616:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4612:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "cUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "4624:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1328,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "4605:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4605:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "EmitStatement",
												"src": "4600:35:6"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "4091:75:6",
										"text": " @dev Mint stablecoins if the user has enough collateral."
									},
									"functionSelector": "ea629db0",
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintStableCoin",
									"nameLocation": "4180:14:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1280,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4236:8:6"
									},
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4203:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "4195:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "cUSDAmount",
												"nameLocation": "4215:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "4207:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:32:6"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4245:0:6"
									},
									"scope": 1579,
									"src": "4171:471:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1605
									],
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "4794:174:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1344,
														"name": "accrueInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "4804:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4804:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "4804:16:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1338,
																		"src": "4848:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1348,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "4838:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4838:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1351,
																"name": "cUSDAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "4857:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4838:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682063555344",
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4869:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2",
																"typeString": "literal_string \"Not enough cUSD\""
															},
															"value": "Not enough cUSD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a191eff9240fea51bbb43186e96d8ad1926eccca187acbacba09f6cfe8d5c9f2",
																"typeString": "literal_string \"Not enough cUSD\""
															}
														],
														"id": 1347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4830:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4830:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "4830:57:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1357,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "4903:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1358,
															"name": "cUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "4909:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1356,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "4897:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "4897:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1362,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "4944:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1363,
															"name": "cUSDAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "4950:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1361,
														"name": "Redeemed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "4935:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4935:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "EmitStatement",
												"src": "4930:31:6"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "4648:65:6",
										"text": " @dev Burn stablecoins from the user's balance."
									},
									"functionSelector": "1455b3ab",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnStableCoin",
									"nameLocation": "4727:14:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1342,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4785:8:6"
									},
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4750:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4742:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "cUSDAmount",
												"nameLocation": "4764:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4756:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:34:6"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4794:0:6"
									},
									"scope": 1579,
									"src": "4718:250:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1634
									],
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "5233:1464:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1376,
														"name": "accrueInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "5243:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5243:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "5243:16:6"
											},
											{
												"assignments": [
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "5277:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1524,
														"src": "5269:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1388,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1385,
																	"name": "cBTC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "5309:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5301:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1383,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5301:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5301:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1381,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "5285:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPriceOracle_$1589",
																"typeString": "contract IPriceOracle"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5292:8:6",
														"memberName": "getPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1588,
														"src": "5285:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5285:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5269:46:6"
											},
											{
												"assignments": [
													1390
												],
												"declarations": [
													{
														"constant": false,
														"id": 1390,
														"mutability": "mutable",
														"name": "userDebt",
														"nameLocation": "5333:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1524,
														"src": "5325:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5325:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1394,
												"initialValue": {
													"arguments": [
														{
															"id": 1392,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "5354:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1391,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5344:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5344:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5325:34:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1395,
														"name": "userDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "5373:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5373:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1399,
												"nodeType": "IfStatement",
												"src": "5369:26:6",
												"trueBody": {
													"functionReturnParameters": 1375,
													"id": 1398,
													"nodeType": "Return",
													"src": "5388:7:6"
												}
											},
											{
												"assignments": [
													1401
												],
												"declarations": [
													{
														"constant": false,
														"id": 1401,
														"mutability": "mutable",
														"name": "requiredValue",
														"nameLocation": "5516:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1524,
														"src": "5508:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5508:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1408,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1402,
																	"name": "userDebt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "5533:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1403,
																	"name": "collateralRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "5544:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1405,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5532:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5563:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "5532:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5508:59:6"
											},
											{
												"assignments": [
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "userCollateralValue",
														"nameLocation": "5608:19:6",
														"nodeType": "VariableDeclaration",
														"scope": 1524,
														"src": "5600:27:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5600:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1419,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1411,
																		"name": "cBTCDeposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "5631:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1413,
																	"indexExpression": {
																		"id": 1412,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1370,
																		"src": "5644:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5631:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1414,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "5652:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5631:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1416,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5630:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5661:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "5630:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5600:65:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1420,
														"name": "userCollateralValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "5680:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1421,
														"name": "requiredValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "5702:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5680:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "5676:1015:6",
												"trueBody": {
													"id": 1522,
													"nodeType": "Block",
													"src": "5717:974:6",
													"statements": [
														{
															"assignments": [
																1424
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1424,
																	"mutability": "mutable",
																	"name": "repayAmount",
																	"nameLocation": "5739:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1522,
																	"src": "5731:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1423,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5731:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1431,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1425,
																		"name": "cUSDAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1372,
																		"src": "5753:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1426,
																		"name": "userDebt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "5766:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5753:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"id": 1429,
																	"name": "cUSDAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1372,
																	"src": "5788:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5753:45:6",
																"trueExpression": {
																	"id": 1428,
																	"name": "userDebt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "5777:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5731:67:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1434,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "5830:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5834:6:6",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "5830:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1433,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 385,
																				"src": "5820:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view returns (uint256)"
																				}
																			},
																			"id": 1436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5820:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1437,
																			"name": "repayAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "5845:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5820:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c697175696461746f72206e6f7420656e6f7567682063555344",
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5858:28:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74",
																			"typeString": "literal_string \"Liquidator not enough cUSD\""
																		},
																		"value": "Liquidator not enough cUSD"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1ed467f4098dce78a91abc0a3dc57cacd937eea79495b98b5a35d040012d4a74",
																			"typeString": "literal_string \"Liquidator not enough cUSD\""
																		}
																	],
																	"id": 1432,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5812:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5812:75:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1441,
															"nodeType": "ExpressionStatement",
															"src": "5812:75:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1443,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5911:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5915:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5911:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1447,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5931:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StableCoin_$1579",
																					"typeString": "contract StableCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StableCoin_$1579",
																					"typeString": "contract StableCoin"
																				}
																			],
																			"id": 1446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5923:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1445,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5923:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5923:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1449,
																		"name": "repayAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "5938:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1442,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "5901:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5901:49:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1451,
															"nodeType": "ExpressionStatement",
															"src": "5901:49:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1455,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5978:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StableCoin_$1579",
																					"typeString": "contract StableCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StableCoin_$1579",
																					"typeString": "contract StableCoin"
																				}
																			],
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5970:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1453,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5970:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5970:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1457,
																		"name": "repayAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "5985:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1452,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "5964:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5964:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1459,
															"nodeType": "ExpressionStatement",
															"src": "5964:33:6"
														},
														{
															"assignments": [
																1461
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1461,
																	"mutability": "mutable",
																	"name": "collateralSeize",
																	"nameLocation": "6081:15:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1522,
																	"src": "6073:23:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1460,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6073:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1468,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1462,
																				"name": "repayAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "6100:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1463,
																				"name": "collateralRatio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "6114:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6100:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1465,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6099:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6133:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "6099:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6073:64:6"
														},
														{
															"expression": {
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1469,
																	"name": "collateralSeize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "6151:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1470,
																					"name": "collateralSeize",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1461,
																					"src": "6170:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31653138",
																					"id": 1471,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6188:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "6170:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1473,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6169:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1474,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "6196:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6169:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6151:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1477,
															"nodeType": "ExpressionStatement",
															"src": "6151:50:6"
														},
														{
															"expression": {
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1478,
																	"name": "collateralSeize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "6215:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1479,
																					"name": "collateralSeize",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1461,
																					"src": "6234:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "313130",
																					"id": 1480,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6252:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_110_by_1",
																						"typeString": "int_const 110"
																					},
																					"value": "110"
																				},
																				"src": "6234:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1482,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6233:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6259:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "6233:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6215:47:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1486,
															"nodeType": "ExpressionStatement",
															"src": "6215:47:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1487,
																	"name": "collateralSeize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "6281:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1488,
																		"name": "cBTCDeposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "6299:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1490,
																	"indexExpression": {
																		"id": 1489,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1370,
																		"src": "6312:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6299:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6281:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1499,
															"nodeType": "IfStatement",
															"src": "6277:111:6",
															"trueBody": {
																"id": 1498,
																"nodeType": "Block",
																"src": "6319:69:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1492,
																				"name": "collateralSeize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1461,
																				"src": "6337:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1493,
																					"name": "cBTCDeposits",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 963,
																					"src": "6355:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1495,
																				"indexExpression": {
																					"id": 1494,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1370,
																					"src": "6368:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6355:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6337:36:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1497,
																		"nodeType": "ExpressionStatement",
																		"src": "6337:36:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1500,
																		"name": "cBTCDeposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "6402:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1502,
																	"indexExpression": {
																		"id": 1501,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1370,
																		"src": "6415:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6402:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1503,
																	"name": "collateralSeize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "6424:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6402:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1505,
															"nodeType": "ExpressionStatement",
															"src": "6402:37:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1509,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6475:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6479:6:6",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6475:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1511,
																				"name": "collateralSeize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1461,
																				"src": "6487:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1507,
																				"name": "cBTC",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 950,
																				"src": "6461:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6466:8:6",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 844,
																			"src": "6461:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6461:42:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "63425443207472616e73666572206661696c6564",
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6505:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d",
																			"typeString": "literal_string \"cBTC transfer failed\""
																		},
																		"value": "cBTC transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_854e6742086e17181af123b97e5a84089be0aa14d15e255367a5dd87d368e35d",
																			"typeString": "literal_string \"cBTC transfer failed\""
																		}
																	],
																	"id": 1506,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6453:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6453:75:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1515,
															"nodeType": "ExpressionStatement",
															"src": "6453:75:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1517,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1370,
																		"src": "6645:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1518,
																		"name": "repayAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "6651:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1519,
																		"name": "collateralSeize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "6664:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1516,
																	"name": "Liquidated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "6634:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6634:46:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1521,
															"nodeType": "EmitStatement",
															"src": "6629:51:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "4974:183:6",
										"text": " @dev Liquidate an undercollateralized user.\n      A liquidator repays a portion of the user's debt, and in return seizes collateral\n      at a discount."
									},
									"functionSelector": "bcbaf487",
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "liquidate",
									"nameLocation": "5171:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1374,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5224:8:6"
									},
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5189:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "5181:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5181:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "cUSDAmount",
												"nameLocation": "5203:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "5195:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5180:34:6"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5233:0:6"
									},
									"scope": 1579,
									"src": "5162:1535:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "6832:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1534,
																"name": "_newRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "6850:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6863:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "6850:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526174696f206d757374206265203e3d2031303025",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6869:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94",
																"typeString": "literal_string \"Ratio must be >= 100%\""
															},
															"value": "Ratio must be >= 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e49254285b3e25bdd9ade57a0ec3e32523fdb7f2bc1a12d1d99689af06092a94",
																"typeString": "literal_string \"Ratio must be >= 100%\""
															}
														],
														"id": 1533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6842:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6842:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "6842:51:6"
											},
											{
												"expression": {
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1540,
														"name": "collateralRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "6903:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1541,
														"name": "_newRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "6921:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6903:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "6903:27:6"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "6703:58:6",
										"text": " @dev Owner can update collateral ratio."
									},
									"functionSelector": "6060663e",
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1531,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1530,
												"name": "onlyOwner",
												"nameLocations": [
													"6822:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6822:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6822:9:6"
										}
									],
									"name": "setCollateralRatio",
									"nameLocation": "6775:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "_newRatio",
												"nameLocation": "6802:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "6794:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6794:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6793:19:6"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6832:0:6"
									},
									"scope": 1579,
									"src": "6766:171:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "7085:89:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1554,
																"name": "_newFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "7103:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "32303030",
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7114:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2000_by_1",
																	"typeString": "int_const 2000"
																},
																"value": "2000"
															},
															"src": "7103:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46656520746f6f2068696768",
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7120:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															},
															"value": "Fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															}
														],
														"id": 1553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7095:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7095:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "7095:40:6"
											},
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1560,
														"name": "stabilityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "7145:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1561,
														"name": "_newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "7160:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7145:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "7145:22:6"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "6943:76:6",
										"text": " @dev Owner can set the stability fee (annualized in bps)."
									},
									"functionSelector": "fb4ca35b",
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1550,
												"name": "onlyOwner",
												"nameLocations": [
													"7075:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7075:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7075:9:6"
										}
									],
									"name": "setStabilityFee",
									"nameLocation": "7033:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "7057:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "7049:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7048:17:6"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7085:0:6"
									},
									"scope": 1579,
									"src": "7024:150:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "7332:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1573,
														"name": "cBTCDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "7349:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1575,
													"indexExpression": {
														"id": 1574,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "7362:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7349:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1572,
												"id": 1576,
												"nodeType": "Return",
												"src": "7342:25:6"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "7180:74:6",
										"text": " @dev Get how much cBTC collateral a user has deposited."
									},
									"functionSelector": "b6f7132f",
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCollateral",
									"nameLocation": "7268:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7294:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "7286:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7286:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7285:14:6"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "7323:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7322:9:6"
									},
									"scope": 1579,
									"src": "7259:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1580,
							"src": "494:6882:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								969,
								975,
								981,
								987,
								995
							]
						}
					],
					"src": "32:7345:6"
				},
				"id": 6
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPriceOracle.sol",
					"exportedSymbols": {
						"IPriceOracle": [
							1589
						]
					},
					"id": 1590,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPriceOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1589,
							"linearizedBaseContracts": [
								1589
							],
							"name": "IPriceOracle",
							"nameLocation": "68:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "41976e09",
									"id": 1588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "96:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "105:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "105:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "104:15:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "143:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:9:7"
									},
									"scope": 1589,
									"src": "87:65:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1590,
							"src": "58:96:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:123:7"
				},
				"id": 7
			},
			"contracts/interfaces/IStableCoin.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IStableCoin.sol",
					"exportedSymbols": {
						"IStableCoin": [
							1635
						]
					},
					"id": 1636,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1591,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStableCoin",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1635,
							"linearizedBaseContracts": [
								1635
							],
							"name": "IStableCoin",
							"nameLocation": "68:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ea629db0",
									"id": 1598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintStableCoin",
									"nameLocation": "95:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "118:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "110:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "cUSDAmount",
												"nameLocation": "130:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "122:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "122:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:32:8"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "150:0:8"
									},
									"scope": 1635,
									"src": "86:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1455b3ab",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnStableCoin",
									"nameLocation": "165:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "188:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "180:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "cUSDAmount",
												"nameLocation": "202:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "194:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:34:8"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "222:0:8"
									},
									"scope": 1635,
									"src": "156:67:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a5d5db0c",
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositCollateral",
									"nameLocation": "237:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "263:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "255:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "277:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "269:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:30:8"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:0:8"
									},
									"scope": 1635,
									"src": "228:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "350c35e9",
									"id": 1619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawCollateral",
									"nameLocation": "308:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "335:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "327:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "349:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "341:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:30:8"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "365:0:8"
									},
									"scope": 1635,
									"src": "299:67:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cd377c53",
									"id": 1624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCollateralRatio",
									"nameLocation": "380:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:2:8"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "424:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:9:8"
									},
									"scope": 1635,
									"src": "371:62:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a6afed95",
									"id": 1627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accrueInterest",
									"nameLocation": "447:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "461:2:8"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:8"
									},
									"scope": 1635,
									"src": "438:35:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bcbaf487",
									"id": 1634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidate",
									"nameLocation": "487:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "505:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "497:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "cUSDAmount",
												"nameLocation": "519:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "511:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:34:8"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:0:8"
									},
									"scope": 1635,
									"src": "478:62:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1636,
							"src": "58:484:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:511:8"
				},
				"id": 8
			}
		}
	}
}