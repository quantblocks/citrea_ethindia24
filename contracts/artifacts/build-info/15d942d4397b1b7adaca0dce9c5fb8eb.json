{
	"id": "15d942d4397b1b7adaca0dce9c5fb8eb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AggregatorOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"./interfaces/IAggregatorOracle.sol\";\nimport \"./interfaces/IPriceOracle.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract AggregatorOracle is IAggregatorOracle, Ownable {\n    mapping(address => address[]) public tokenOracles;\n\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    function addOracle(address token, address oracle) external onlyOwner {\n        tokenOracles[token].push(oracle);\n    }\n\n    function removeOracle(address token, address oracle) external onlyOwner {\n        address[] storage oracles = tokenOracles[token];\n        for (uint256 i = 0; i < oracles.length; i++) {\n            if (oracles[i] == oracle) {\n                oracles[i] = oracles[oracles.length - 1];\n                oracles.pop();\n                break;\n            }\n        }\n    }\n\n    function getMedianPrice(address token) external view override returns (uint256) {\n        address[] memory oracles = tokenOracles[token];\n        require(oracles.length > 0, \"No oracles for token\");\n\n        uint256[] memory prices = new uint256[](oracles.length);\n        for (uint256 i = 0; i < oracles.length; i++) {\n            prices[i] = IPriceOracle(oracles[i]).getPrice(token);\n        }\n\n        for (uint256 i = 0; i < prices.length; i++) {\n            for (uint256 j = i + 1; j < prices.length; j++) {\n                if (prices[j] < prices[i]) {\n                    uint256 temp = prices[i];\n                    prices[i] = prices[j];\n                    prices[j] = temp;\n                }\n            }\n        }\n\n        uint256 median = prices[prices.length / 2];\n        return median;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ninterface IPriceOracle {\n    function getPrice(address token) external view returns (uint256);\n}\n"
			},
			"contracts/interfaces/IAggregatorOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ninterface IAggregatorOracle {\n    function getMedianPrice(address token) external view returns (uint256);\n    function addOracle(address token, address oracle) external;\n    function removeOracle(address token, address oracle) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AggregatorOracle.sol": {
				"AggregatorOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "addOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getMedianPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "removeOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenOracles",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AggregatorOracle.sol\":197:1686  contract AggregatorOracle is IAggregatorOracle, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/AggregatorOracle.sol\":315:373  constructor(address initialOwner) Ownable(initialOwner) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/AggregatorOracle.sol\":357:369  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/AggregatorOracle.sol\":315:373  constructor(address initialOwner) Ownable(initialOwner) {} */\n  pop\n    /* \"contracts/AggregatorOracle.sol\":197:1686  contract AggregatorOracle is IAggregatorOracle, Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/AggregatorOracle.sol\":197:1686  contract AggregatorOracle is IAggregatorOracle, Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AggregatorOracle.sol\":197:1686  contract AggregatorOracle is IAggregatorOracle, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xadfe34f7\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xadfe34f7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc32eae76\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf0ca4adb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x4c12c854\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/AggregatorOracle.sol\":259:308  mapping(address => address[]) public tokenOracles */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AggregatorOracle.sol\":876:1684  function getMedianPrice(address token) external view override returns (uint256) {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AggregatorOracle.sol\":503:870  function removeOracle(address token, address oracle) external onlyOwner {... */\n    tag_7:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/AggregatorOracle.sol\":379:497  function addOracle(address token, address oracle) external onlyOwner {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/AggregatorOracle.sol\":259:308  mapping(address => address[]) public tokenOracles */\n    tag_14:\n      mstore(0x20, 0x01)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AggregatorOracle.sol\":876:1684  function getMedianPrice(address token) external view override returns (uint256) {... */\n    tag_25:\n        /* \"contracts/AggregatorOracle.sol\":947:954  uint256 */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":966:990  address[] memory oracles */\n      dup1\n        /* \"contracts/AggregatorOracle.sol\":993:1005  tokenOracles */\n      0x01\n        /* \"contracts/AggregatorOracle.sol\":993:1012  tokenOracles[token] */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":1006:1011  token */\n      dup5\n        /* \"contracts/AggregatorOracle.sol\":993:1012  tokenOracles[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/AggregatorOracle.sol\":966:1012  address[] memory oracles = tokenOracles[token] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_49:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_49\n      jumpi\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1047:1048  0 */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":1030:1037  oracles */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":1030:1044  oracles.length */\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1030:1048  oracles.length > 0 */\n      gt\n        /* \"contracts/AggregatorOracle.sol\":1022:1073  require(oracles.length > 0, \"No oracles for token\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/AggregatorOracle.sol\":1084:1107  uint256[] memory prices */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":1124:1131  oracles */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":1124:1138  oracles.length */\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1110:1139  new uint256[](oracles.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_53\n      jumpi\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n    tag_53:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_56\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_56:\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1084:1139  uint256[] memory prices = new uint256[](oracles.length) */\n      swap1\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1154:1163  uint256 i */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":1149:1271  for (uint256 i = 0; i < oracles.length; i++) {... */\n    tag_57:\n        /* \"contracts/AggregatorOracle.sol\":1173:1180  oracles */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":1173:1187  oracles.length */\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1169:1170  i */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":1169:1187  i < oracles.length */\n      lt\n        /* \"contracts/AggregatorOracle.sol\":1149:1271  for (uint256 i = 0; i < oracles.length; i++) {... */\n      iszero\n      tag_58\n      jumpi\n        /* \"contracts/AggregatorOracle.sol\":1233:1240  oracles */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":1241:1242  i */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":1233:1243  oracles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_60\n      jumpi\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n    tag_60:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1220:1253  IPriceOracle(oracles[i]).getPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x41976e09\n        /* \"contracts/AggregatorOracle.sol\":1254:1259  token */\n      dup7\n        /* \"contracts/AggregatorOracle.sol\":1220:1260  IPriceOracle(oracles[i]).getPrice(token) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_63:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/AggregatorOracle.sol\":1208:1214  prices */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":1215:1216  i */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":1208:1217  prices[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_68\n      jumpi\n      tag_69\n      tag_62\n      jump\t// in\n    tag_69:\n    tag_68:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/AggregatorOracle.sol\":1208:1260  prices[i] = IPriceOracle(oracles[i]).getPrice(token) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1189:1192  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1149:1271  for (uint256 i = 0; i < oracles.length; i++) {... */\n      jump(tag_57)\n    tag_58:\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1286:1295  uint256 i */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":1281:1602  for (uint256 i = 0; i < prices.length; i++) {... */\n    tag_70:\n        /* \"contracts/AggregatorOracle.sol\":1305:1311  prices */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":1305:1318  prices.length */\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1301:1302  i */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":1301:1318  i < prices.length */\n      lt\n        /* \"contracts/AggregatorOracle.sol\":1281:1602  for (uint256 i = 0; i < prices.length; i++) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"contracts/AggregatorOracle.sol\":1344:1353  uint256 j */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":1360:1361  1 */\n      0x01\n        /* \"contracts/AggregatorOracle.sol\":1356:1357  i */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":1356:1361  i + 1 */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/AggregatorOracle.sol\":1344:1361  uint256 j = i + 1 */\n      swap1\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1339:1592  for (uint256 j = i + 1; j < prices.length; j++) {... */\n    tag_73:\n        /* \"contracts/AggregatorOracle.sol\":1367:1373  prices */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":1367:1380  prices.length */\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1363:1364  j */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":1363:1380  j < prices.length */\n      lt\n        /* \"contracts/AggregatorOracle.sol\":1339:1592  for (uint256 j = i + 1; j < prices.length; j++) {... */\n      iszero\n      tag_74\n      jumpi\n        /* \"contracts/AggregatorOracle.sol\":1421:1427  prices */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":1428:1429  i */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":1421:1430  prices[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_78\n      jumpi\n      tag_79\n      tag_62\n      jump\t// in\n    tag_79:\n    tag_78:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1409:1415  prices */\n      dup4\n        /* \"contracts/AggregatorOracle.sol\":1416:1417  j */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":1409:1418  prices[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_80\n      jumpi\n      tag_81\n      tag_62\n      jump\t// in\n    tag_81:\n    tag_80:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1409:1430  prices[j] < prices[i] */\n      lt\n        /* \"contracts/AggregatorOracle.sol\":1405:1578  if (prices[j] < prices[i]) {... */\n      iszero\n      tag_82\n      jumpi\n        /* \"contracts/AggregatorOracle.sol\":1454:1466  uint256 temp */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":1469:1475  prices */\n      dup4\n        /* \"contracts/AggregatorOracle.sol\":1476:1477  i */\n      dup4\n        /* \"contracts/AggregatorOracle.sol\":1469:1478  prices[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_83\n      jumpi\n      tag_84\n      tag_62\n      jump\t// in\n    tag_84:\n    tag_83:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1454:1478  uint256 temp = prices[i] */\n      swap1\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1512:1518  prices */\n      dup4\n        /* \"contracts/AggregatorOracle.sol\":1519:1520  j */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":1512:1521  prices[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_85\n      jumpi\n      tag_86\n      tag_62\n      jump\t// in\n    tag_86:\n    tag_85:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1500:1506  prices */\n      dup5\n        /* \"contracts/AggregatorOracle.sol\":1507:1508  i */\n      dup5\n        /* \"contracts/AggregatorOracle.sol\":1500:1509  prices[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_87\n      jumpi\n      tag_88\n      tag_62\n      jump\t// in\n    tag_88:\n    tag_87:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/AggregatorOracle.sol\":1500:1521  prices[i] = prices[j] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1555:1559  temp */\n      dup1\n        /* \"contracts/AggregatorOracle.sol\":1543:1549  prices */\n      dup5\n        /* \"contracts/AggregatorOracle.sol\":1550:1551  j */\n      dup4\n        /* \"contracts/AggregatorOracle.sol\":1543:1552  prices[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_89\n      jumpi\n      tag_90\n      tag_62\n      jump\t// in\n    tag_90:\n    tag_89:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/AggregatorOracle.sol\":1543:1559  prices[j] = temp */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1432:1578  {... */\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1405:1578  if (prices[j] < prices[i]) {... */\n    tag_82:\n        /* \"contracts/AggregatorOracle.sol\":1382:1385  j++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1339:1592  for (uint256 j = i + 1; j < prices.length; j++) {... */\n      jump(tag_73)\n    tag_74:\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1320:1323  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1281:1602  for (uint256 i = 0; i < prices.length; i++) {... */\n      jump(tag_70)\n    tag_71:\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1612:1626  uint256 median */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":1629:1635  prices */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":1652:1653  2 */\n      0x02\n        /* \"contracts/AggregatorOracle.sol\":1636:1642  prices */\n      dup4\n        /* \"contracts/AggregatorOracle.sol\":1636:1649  prices.length */\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1636:1653  prices.length / 2 */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"contracts/AggregatorOracle.sol\":1629:1654  prices[prices.length / 2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_94\n      tag_62\n      jump\t// in\n    tag_94:\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/AggregatorOracle.sol\":1612:1654  uint256 median = prices[prices.length / 2] */\n      swap1\n      pop\n        /* \"contracts/AggregatorOracle.sol\":1671:1677  median */\n      dup1\n        /* \"contracts/AggregatorOracle.sol\":1664:1677  return median */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AggregatorOracle.sol\":876:1684  function getMedianPrice(address token) external view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AggregatorOracle.sol\":503:870  function removeOracle(address token, address oracle) external onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/AggregatorOracle.sol\":585:610  address[] storage oracles */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":613:625  tokenOracles */\n      0x01\n        /* \"contracts/AggregatorOracle.sol\":613:632  tokenOracles[token] */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":626:631  token */\n      dup5\n        /* \"contracts/AggregatorOracle.sol\":613:632  tokenOracles[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/AggregatorOracle.sol\":585:632  address[] storage oracles = tokenOracles[token] */\n      swap1\n      pop\n        /* \"contracts/AggregatorOracle.sol\":647:656  uint256 i */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":642:864  for (uint256 i = 0; i < oracles.length; i++) {... */\n    tag_98:\n        /* \"contracts/AggregatorOracle.sol\":666:673  oracles */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":666:680  oracles.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/AggregatorOracle.sol\":662:663  i */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":662:680  i < oracles.length */\n      lt\n        /* \"contracts/AggregatorOracle.sol\":642:864  for (uint256 i = 0; i < oracles.length; i++) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"contracts/AggregatorOracle.sol\":719:725  oracle */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":705:725  oracles[i] == oracle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AggregatorOracle.sol\":705:712  oracles */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":713:714  i */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":705:715  oracles[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_102\n      tag_62\n      jump\t// in\n    tag_102:\n    tag_101:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AggregatorOracle.sol\":705:725  oracles[i] == oracle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/AggregatorOracle.sol\":701:854  if (oracles[i] == oracle) {... */\n      tag_104\n      jumpi\n        /* \"contracts/AggregatorOracle.sol\":758:765  oracles */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":783:784  1 */\n      0x01\n        /* \"contracts/AggregatorOracle.sol\":766:773  oracles */\n      dup4\n        /* \"contracts/AggregatorOracle.sol\":766:780  oracles.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/AggregatorOracle.sol\":766:784  oracles.length - 1 */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/AggregatorOracle.sol\":758:785  oracles[oracles.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_107\n      jumpi\n      tag_108\n      tag_62\n      jump\t// in\n    tag_108:\n    tag_107:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AggregatorOracle.sol\":745:752  oracles */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":753:754  i */\n      dup3\n        /* \"contracts/AggregatorOracle.sol\":745:755  oracles[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_110\n      jumpi\n      tag_111\n      tag_62\n      jump\t// in\n    tag_111:\n    tag_110:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":745:785  oracles[i] = oracles[oracles.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/AggregatorOracle.sol\":803:810  oracles */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":803:816  oracles.pop() */\n      dup1\n      sload\n      dup1\n      tag_113\n      jumpi\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n    tag_113:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/AggregatorOracle.sol\":834:839  break */\n      jump(tag_99)\n        /* \"contracts/AggregatorOracle.sol\":701:854  if (oracles[i] == oracle) {... */\n    tag_104:\n        /* \"contracts/AggregatorOracle.sol\":682:685  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/AggregatorOracle.sol\":642:864  for (uint256 i = 0; i < oracles.length; i++) {... */\n      jump(tag_98)\n    tag_99:\n      pop\n        /* \"contracts/AggregatorOracle.sol\":575:870  {... */\n      pop\n        /* \"contracts/AggregatorOracle.sol\":503:870  function removeOracle(address token, address oracle) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AggregatorOracle.sol\":379:497  function addOracle(address token, address oracle) external onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/AggregatorOracle.sol\":458:470  tokenOracles */\n      0x01\n        /* \"contracts/AggregatorOracle.sol\":458:477  tokenOracles[token] */\n      0x00\n        /* \"contracts/AggregatorOracle.sol\":471:476  token */\n      dup4\n        /* \"contracts/AggregatorOracle.sol\":458:477  tokenOracles[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/AggregatorOracle.sol\":483:489  oracle */\n      dup2\n        /* \"contracts/AggregatorOracle.sol\":458:490  tokenOracles[token].push(oracle) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/AggregatorOracle.sol\":379:497  function addOracle(address token, address oracle) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_137:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_139:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_140:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_160\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_139\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_141:\n        /* \"#utility.yul\":641:665   */\n      tag_162\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_140\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_163:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_142:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_165\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_143:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_144:\n        /* \"#utility.yul\":997:1021   */\n      tag_168\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_143\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_169:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_145:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_171\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_144\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_13:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_174\n      tag_137\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1290:1409   */\n    tag_173:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_175\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_142\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_176\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_145\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_146:\n        /* \"#utility.yul\":1764:1788   */\n      tag_178\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_140\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_16:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_180\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_146\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_24:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_183\n      tag_137\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2105:2224   */\n    tag_182:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_184\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_142\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2482   */\n    tag_147:\n        /* \"#utility.yul\":2451:2475   */\n      tag_186\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2451:2475   */\n      tag_143\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2446:2449   */\n      dup3\n        /* \"#utility.yul\":2439:2476   */\n      mstore\n        /* \"#utility.yul\":2364:2482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2488:2710   */\n    tag_27:\n        /* \"#utility.yul\":2581:2585   */\n      0x00\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2622   */\n      add\n        /* \"#utility.yul\":2596:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2632:2703   */\n      tag_188\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2689:2698   */\n      dup4\n        /* \"#utility.yul\":2685:2702   */\n      add\n        /* \"#utility.yul\":2676:2682   */\n      dup5\n        /* \"#utility.yul\":2632:2703   */\n      tag_147\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2488:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3190   */\n    tag_30:\n        /* \"#utility.yul\":2784:2790   */\n      0x00\n        /* \"#utility.yul\":2792:2798   */\n      dup1\n        /* \"#utility.yul\":2841:2843   */\n      0x40\n        /* \"#utility.yul\":2829:2838   */\n      dup4\n        /* \"#utility.yul\":2820:2827   */\n      dup6\n        /* \"#utility.yul\":2816:2839   */\n      sub\n        /* \"#utility.yul\":2812:2844   */\n      slt\n        /* \"#utility.yul\":2809:2928   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2847:2926   */\n      tag_191\n      tag_137\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2809:2928   */\n    tag_190:\n        /* \"#utility.yul\":2967:2968   */\n      0x00\n        /* \"#utility.yul\":2992:3045   */\n      tag_192\n        /* \"#utility.yul\":3037:3044   */\n      dup6\n        /* \"#utility.yul\":3028:3034   */\n      dup3\n        /* \"#utility.yul\":3017:3026   */\n      dup7\n        /* \"#utility.yul\":3013:3035   */\n      add\n        /* \"#utility.yul\":2992:3045   */\n      tag_142\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2982:3045   */\n      swap3\n      pop\n        /* \"#utility.yul\":2938:3055   */\n      pop\n        /* \"#utility.yul\":3094:3096   */\n      0x20\n        /* \"#utility.yul\":3120:3173   */\n      tag_193\n        /* \"#utility.yul\":3165:3172   */\n      dup6\n        /* \"#utility.yul\":3156:3162   */\n      dup3\n        /* \"#utility.yul\":3145:3154   */\n      dup7\n        /* \"#utility.yul\":3141:3163   */\n      add\n        /* \"#utility.yul\":3120:3173   */\n      tag_142\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3110:3173   */\n      swap2\n      pop\n        /* \"#utility.yul\":3065:3183   */\n      pop\n        /* \"#utility.yul\":2716:3190   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3196:3365   */\n    tag_148:\n        /* \"#utility.yul\":3280:3291   */\n      0x00\n        /* \"#utility.yul\":3314:3320   */\n      dup3\n        /* \"#utility.yul\":3309:3312   */\n      dup3\n        /* \"#utility.yul\":3302:3321   */\n      mstore\n        /* \"#utility.yul\":3354:3358   */\n      0x20\n        /* \"#utility.yul\":3349:3352   */\n      dup3\n        /* \"#utility.yul\":3345:3359   */\n      add\n        /* \"#utility.yul\":3330:3359   */\n      swap1\n      pop\n        /* \"#utility.yul\":3196:3365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3371:3541   */\n    tag_149:\n        /* \"#utility.yul\":3511:3533   */\n      0x4e6f206f7261636c657320666f7220746f6b656e000000000000000000000000\n        /* \"#utility.yul\":3507:3508   */\n      0x00\n        /* \"#utility.yul\":3499:3505   */\n      dup3\n        /* \"#utility.yul\":3495:3509   */\n      add\n        /* \"#utility.yul\":3488:3534   */\n      mstore\n        /* \"#utility.yul\":3371:3541   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3547:3913   */\n    tag_150:\n        /* \"#utility.yul\":3689:3692   */\n      0x00\n        /* \"#utility.yul\":3710:3777   */\n      tag_197\n        /* \"#utility.yul\":3774:3776   */\n      0x14\n        /* \"#utility.yul\":3769:3772   */\n      dup4\n        /* \"#utility.yul\":3710:3777   */\n      tag_148\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3703:3777   */\n      swap2\n      pop\n        /* \"#utility.yul\":3786:3879   */\n      tag_198\n        /* \"#utility.yul\":3875:3878   */\n      dup3\n        /* \"#utility.yul\":3786:3879   */\n      tag_149\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3904:3906   */\n      0x20\n        /* \"#utility.yul\":3899:3902   */\n      dup3\n        /* \"#utility.yul\":3895:3907   */\n      add\n        /* \"#utility.yul\":3888:3907   */\n      swap1\n      pop\n        /* \"#utility.yul\":3547:3913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3919:4338   */\n    tag_52:\n        /* \"#utility.yul\":4085:4089   */\n      0x00\n        /* \"#utility.yul\":4123:4125   */\n      0x20\n        /* \"#utility.yul\":4112:4121   */\n      dup3\n        /* \"#utility.yul\":4108:4126   */\n      add\n        /* \"#utility.yul\":4100:4126   */\n      swap1\n      pop\n        /* \"#utility.yul\":4172:4181   */\n      dup2\n        /* \"#utility.yul\":4166:4170   */\n      dup2\n        /* \"#utility.yul\":4162:4182   */\n      sub\n        /* \"#utility.yul\":4158:4159   */\n      0x00\n        /* \"#utility.yul\":4147:4156   */\n      dup4\n        /* \"#utility.yul\":4143:4160   */\n      add\n        /* \"#utility.yul\":4136:4183   */\n      mstore\n        /* \"#utility.yul\":4200:4331   */\n      tag_200\n        /* \"#utility.yul\":4326:4330   */\n      dup2\n        /* \"#utility.yul\":4200:4331   */\n      tag_150\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4192:4331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3919:4338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4344:4524   */\n    tag_55:\n        /* \"#utility.yul\":4392:4469   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4389:4390   */\n      0x00\n        /* \"#utility.yul\":4382:4470   */\n      mstore\n        /* \"#utility.yul\":4489:4493   */\n      0x41\n        /* \"#utility.yul\":4486:4487   */\n      0x04\n        /* \"#utility.yul\":4479:4494   */\n      mstore\n        /* \"#utility.yul\":4513:4517   */\n      0x24\n        /* \"#utility.yul\":4510:4511   */\n      0x00\n        /* \"#utility.yul\":4503:4518   */\n      revert\n        /* \"#utility.yul\":4530:4710   */\n    tag_62:\n        /* \"#utility.yul\":4578:4655   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4575:4576   */\n      0x00\n        /* \"#utility.yul\":4568:4656   */\n      mstore\n        /* \"#utility.yul\":4675:4679   */\n      0x32\n        /* \"#utility.yul\":4672:4673   */\n      0x04\n        /* \"#utility.yul\":4665:4680   */\n      mstore\n        /* \"#utility.yul\":4699:4703   */\n      0x24\n        /* \"#utility.yul\":4696:4697   */\n      0x00\n        /* \"#utility.yul\":4689:4704   */\n      revert\n        /* \"#utility.yul\":4716:4859   */\n    tag_151:\n        /* \"#utility.yul\":4773:4778   */\n      0x00\n        /* \"#utility.yul\":4804:4810   */\n      dup2\n        /* \"#utility.yul\":4798:4811   */\n      mload\n        /* \"#utility.yul\":4789:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4820:4853   */\n      tag_204\n        /* \"#utility.yul\":4847:4852   */\n      dup2\n        /* \"#utility.yul\":4820:4853   */\n      tag_144\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4716:4859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4865:5216   */\n    tag_67:\n        /* \"#utility.yul\":4935:4941   */\n      0x00\n        /* \"#utility.yul\":4984:4986   */\n      0x20\n        /* \"#utility.yul\":4972:4981   */\n      dup3\n        /* \"#utility.yul\":4963:4970   */\n      dup5\n        /* \"#utility.yul\":4959:4982   */\n      sub\n        /* \"#utility.yul\":4955:4987   */\n      slt\n        /* \"#utility.yul\":4952:5071   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":4990:5069   */\n      tag_207\n      tag_137\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4952:5071   */\n    tag_206:\n        /* \"#utility.yul\":5110:5111   */\n      0x00\n        /* \"#utility.yul\":5135:5199   */\n      tag_208\n        /* \"#utility.yul\":5191:5198   */\n      dup5\n        /* \"#utility.yul\":5182:5188   */\n      dup3\n        /* \"#utility.yul\":5171:5180   */\n      dup6\n        /* \"#utility.yul\":5167:5189   */\n      add\n        /* \"#utility.yul\":5135:5199   */\n      tag_151\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5125:5199   */\n      swap2\n      pop\n        /* \"#utility.yul\":5081:5209   */\n      pop\n        /* \"#utility.yul\":4865:5216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5402   */\n    tag_152:\n        /* \"#utility.yul\":5270:5347   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5267:5268   */\n      0x00\n        /* \"#utility.yul\":5260:5348   */\n      mstore\n        /* \"#utility.yul\":5367:5371   */\n      0x11\n        /* \"#utility.yul\":5364:5365   */\n      0x04\n        /* \"#utility.yul\":5357:5372   */\n      mstore\n        /* \"#utility.yul\":5391:5395   */\n      0x24\n        /* \"#utility.yul\":5388:5389   */\n      0x00\n        /* \"#utility.yul\":5381:5396   */\n      revert\n        /* \"#utility.yul\":5408:5599   */\n    tag_77:\n        /* \"#utility.yul\":5448:5451   */\n      0x00\n        /* \"#utility.yul\":5467:5487   */\n      tag_211\n        /* \"#utility.yul\":5485:5486   */\n      dup3\n        /* \"#utility.yul\":5467:5487   */\n      tag_143\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5462:5487   */\n      swap2\n      pop\n        /* \"#utility.yul\":5501:5521   */\n      tag_212\n        /* \"#utility.yul\":5519:5520   */\n      dup4\n        /* \"#utility.yul\":5501:5521   */\n      tag_143\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5496:5521   */\n      swap3\n      pop\n        /* \"#utility.yul\":5544:5545   */\n      dup3\n        /* \"#utility.yul\":5541:5542   */\n      dup3\n        /* \"#utility.yul\":5537:5546   */\n      add\n        /* \"#utility.yul\":5530:5546   */\n      swap1\n      pop\n        /* \"#utility.yul\":5565:5568   */\n      dup1\n        /* \"#utility.yul\":5562:5563   */\n      dup3\n        /* \"#utility.yul\":5559:5569   */\n      gt\n        /* \"#utility.yul\":5556:5592   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":5572:5590   */\n      tag_214\n      tag_152\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5556:5592   */\n    tag_213:\n        /* \"#utility.yul\":5408:5599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5605:5785   */\n    tag_153:\n        /* \"#utility.yul\":5653:5730   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5650:5651   */\n      0x00\n        /* \"#utility.yul\":5643:5731   */\n      mstore\n        /* \"#utility.yul\":5750:5754   */\n      0x12\n        /* \"#utility.yul\":5747:5748   */\n      0x04\n        /* \"#utility.yul\":5740:5755   */\n      mstore\n        /* \"#utility.yul\":5774:5778   */\n      0x24\n        /* \"#utility.yul\":5771:5772   */\n      0x00\n        /* \"#utility.yul\":5764:5779   */\n      revert\n        /* \"#utility.yul\":5791:5976   */\n    tag_92:\n        /* \"#utility.yul\":5831:5832   */\n      0x00\n        /* \"#utility.yul\":5848:5868   */\n      tag_217\n        /* \"#utility.yul\":5866:5867   */\n      dup3\n        /* \"#utility.yul\":5848:5868   */\n      tag_143\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5843:5868   */\n      swap2\n      pop\n        /* \"#utility.yul\":5882:5902   */\n      tag_218\n        /* \"#utility.yul\":5900:5901   */\n      dup4\n        /* \"#utility.yul\":5882:5902   */\n      tag_143\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5877:5902   */\n      swap3\n      pop\n        /* \"#utility.yul\":5921:5922   */\n      dup3\n        /* \"#utility.yul\":5911:5946   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":5926:5944   */\n      tag_220\n      tag_153\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5911:5946   */\n    tag_219:\n        /* \"#utility.yul\":5968:5969   */\n      dup3\n        /* \"#utility.yul\":5965:5966   */\n      dup3\n        /* \"#utility.yul\":5961:5970   */\n      div\n        /* \"#utility.yul\":5956:5970   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5982:6176   */\n    tag_106:\n        /* \"#utility.yul\":6022:6026   */\n      0x00\n        /* \"#utility.yul\":6042:6062   */\n      tag_222\n        /* \"#utility.yul\":6060:6061   */\n      dup3\n        /* \"#utility.yul\":6042:6062   */\n      tag_143\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6037:6062   */\n      swap2\n      pop\n        /* \"#utility.yul\":6076:6096   */\n      tag_223\n        /* \"#utility.yul\":6094:6095   */\n      dup4\n        /* \"#utility.yul\":6076:6096   */\n      tag_143\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6071:6096   */\n      swap3\n      pop\n        /* \"#utility.yul\":6120:6121   */\n      dup3\n        /* \"#utility.yul\":6117:6118   */\n      dup3\n        /* \"#utility.yul\":6113:6122   */\n      sub\n        /* \"#utility.yul\":6105:6122   */\n      swap1\n      pop\n        /* \"#utility.yul\":6144:6145   */\n      dup2\n        /* \"#utility.yul\":6138:6142   */\n      dup2\n        /* \"#utility.yul\":6135:6146   */\n      gt\n        /* \"#utility.yul\":6132:6169   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":6149:6167   */\n      tag_225\n      tag_152\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6132:6169   */\n    tag_224:\n        /* \"#utility.yul\":5982:6176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6182:6362   */\n    tag_115:\n        /* \"#utility.yul\":6230:6307   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6227:6228   */\n      0x00\n        /* \"#utility.yul\":6220:6308   */\n      mstore\n        /* \"#utility.yul\":6327:6331   */\n      0x31\n        /* \"#utility.yul\":6324:6325   */\n      0x04\n        /* \"#utility.yul\":6317:6332   */\n      mstore\n        /* \"#utility.yul\":6351:6355   */\n      0x24\n        /* \"#utility.yul\":6348:6349   */\n      0x00\n        /* \"#utility.yul\":6341:6356   */\n      revert\n\n    auxdata: 0xa264697066735822122036ca78eaae3aef91ac00b6c6b8269ffee29ae9512ce6f1c9ee5365f72e06920a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 184,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:5",
										"nodeType": "YulBlock",
										"src": "0:1551:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											},
											{
												"body": {
													"nativeSrc": "1267:53:5",
													"nodeType": "YulBlock",
													"src": "1267:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:5"
																		},
																		"nativeSrc": "1289:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:5"
																},
																"nativeSrc": "1277:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:5"
															},
															"nativeSrc": "1277:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:5",
														"nodeType": "YulTypedName",
														"src": "1255:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:5",
														"nodeType": "YulTypedName",
														"src": "1262:3:5",
														"type": ""
													}
												],
												"src": "1202:118:5"
											},
											{
												"body": {
													"nativeSrc": "1424:124:5",
													"nodeType": "YulBlock",
													"src": "1424:124:5",
													"statements": [
														{
															"nativeSrc": "1434:26:5",
															"nodeType": "YulAssignment",
															"src": "1434:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:5"
																},
																"nativeSrc": "1442:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:5"
																		},
																		"nativeSrc": "1523:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:5"
																},
																"nativeSrc": "1470:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:5"
															},
															"nativeSrc": "1470:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:5",
														"nodeType": "YulTypedName",
														"src": "1396:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:5",
														"nodeType": "YulTypedName",
														"src": "1408:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:5",
														"nodeType": "YulTypedName",
														"src": "1419:4:5",
														"type": ""
													}
												],
												"src": "1326:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610f85380380610f85833981810160405281019061003191906101d7565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610211565b60405180910390fd5b6100b1816100b860201b60201c565b505061022a565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101a68261017d565b9050919050565b6101b68161019c565b81146101c0575f80fd5b50565b5f815190506101d1816101ad565b92915050565b5f602082840312156101ec576101eb610179565b5b5f6101f9848285016101c3565b91505092915050565b61020b8161019c565b82525050565b5f6020820190506102245f830184610202565b92915050565b610d4e806102375f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063adfe34f711610059578063adfe34f7146100d7578063c32eae7614610107578063f0ca4adb14610123578063f2fde38b1461013f5761007b565b80634c12c8541461007f578063715018a6146100af5780638da5cb5b146100b9575b5f80fd5b610099600480360381019061009491906109f3565b61015b565b6040516100a69190610a40565b60405180910390f35b6100b76101a3565b005b6100c16101b6565b6040516100ce9190610a40565b60405180910390f35b6100f160048036038101906100ec9190610a59565b6101dd565b6040516100fe9190610a93565b60405180910390f35b610121600480360381019061011c9190610aac565b610527565b005b61013d60048036038101906101389190610aac565b6106e8565b005b61015960048036038101906101549190610a59565b61078f565b005b6001602052815f5260405f208181548110610174575f80fd5b905f5260205f20015f915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ab610813565b6101b45f61089a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561029957602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610250575b505050505090505f8151116102e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102da90610b44565b60405180910390fd5b5f815167ffffffffffffffff8111156102ff576102fe610b62565b5b60405190808252806020026020018201604052801561032d5781602001602082028036833780820191505090505b5090505f5b82518110156103f95782818151811061034e5761034d610b8f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166341976e09866040518263ffffffff1660e01b815260040161038e9190610a40565b602060405180830381865afa1580156103a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103cd9190610bd0565b8282815181106103e0576103df610b8f565b5b6020026020010181815250508080600101915050610332565b505f5b81518110156104f0575f6001826104139190610c28565b90505b82518110156104e25782828151811061043257610431610b8f565b5b602002602001015183828151811061044d5761044c610b8f565b5b602002602001015110156104d5575f83838151811061046f5761046e610b8f565b5b6020026020010151905083828151811061048c5761048b610b8f565b5b60200260200101518484815181106104a7576104a6610b8f565b5b602002602001018181525050808483815181106104c7576104c6610b8f565b5b602002602001018181525050505b8080600101915050610416565b5080806001019150506103fc565b505f81600283516105019190610c88565b8151811061051257610511610b8f565b5b60200260200101519050809350505050919050565b61052f610813565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f5b81805490508110156106e2578273ffffffffffffffffffffffffffffffffffffffff168282815481106105a7576105a6610b8f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106d55781600183805490506105fc9190610cb8565b8154811061060d5761060c610b8f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828154811061064857610647610b8f565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508180548061069e5761069d610ceb565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556106e2565b8080600101915050610571565b50505050565b6106f0610813565b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610797610813565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610807575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107fe9190610a40565b60405180910390fd5b6108108161089a565b50565b61081b61095b565b73ffffffffffffffffffffffffffffffffffffffff166108396101b6565b73ffffffffffffffffffffffffffffffffffffffff16146108985761085c61095b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161088f9190610a40565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61098f82610966565b9050919050565b61099f81610985565b81146109a9575f80fd5b50565b5f813590506109ba81610996565b92915050565b5f819050919050565b6109d2816109c0565b81146109dc575f80fd5b50565b5f813590506109ed816109c9565b92915050565b5f8060408385031215610a0957610a08610962565b5b5f610a16858286016109ac565b9250506020610a27858286016109df565b9150509250929050565b610a3a81610985565b82525050565b5f602082019050610a535f830184610a31565b92915050565b5f60208284031215610a6e57610a6d610962565b5b5f610a7b848285016109ac565b91505092915050565b610a8d816109c0565b82525050565b5f602082019050610aa65f830184610a84565b92915050565b5f8060408385031215610ac257610ac1610962565b5b5f610acf858286016109ac565b9250506020610ae0858286016109ac565b9150509250929050565b5f82825260208201905092915050565b7f4e6f206f7261636c657320666f7220746f6b656e0000000000000000000000005f82015250565b5f610b2e601483610aea565b9150610b3982610afa565b602082019050919050565b5f6020820190508181035f830152610b5b81610b22565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050610bca816109c9565b92915050565b5f60208284031215610be557610be4610962565b5b5f610bf284828501610bbc565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c32826109c0565b9150610c3d836109c0565b9250828201905080821115610c5557610c54610bfb565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c92826109c0565b9150610c9d836109c0565b925082610cad57610cac610c5b565b5b828204905092915050565b5f610cc2826109c0565b9150610ccd836109c0565b9250828203905081811115610ce557610ce4610bfb565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea264697066735822122036ca78eaae3aef91ac00b6c6b8269ffee29ae9512ce6f1c9ee5365f72e06920a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF85 CODESIZE SUB DUP1 PUSH2 0xF85 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xB8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x22A JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6 DUP3 PUSH2 0x17D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6 DUP2 PUSH2 0x19C JUMP JUMPDEST DUP2 EQ PUSH2 0x1C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D1 DUP2 PUSH2 0x1AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC JUMPI PUSH2 0x1EB PUSH2 0x179 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F9 DUP5 DUP3 DUP6 ADD PUSH2 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x19C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x224 PUSH0 DUP4 ADD DUP5 PUSH2 0x202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD4E DUP1 PUSH2 0x237 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xADFE34F7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xADFE34F7 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xC32EAE76 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xF0CA4ADB EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x4C12C854 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x1A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x813 JUMP JUMPDEST PUSH2 0x1B4 PUSH0 PUSH2 0x89A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x250 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH2 0x2FE PUSH2 0xB62 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x32D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3F9 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x34E JUMPI PUSH2 0x34D PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3E0 JUMPI PUSH2 0x3DF PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x332 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x4F0 JUMPI PUSH0 PUSH1 0x1 DUP3 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4E2 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x44D JUMPI PUSH2 0x44C PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x46F JUMPI PUSH2 0x46E PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x48C JUMPI PUSH2 0x48B PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A6 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4C7 JUMPI PUSH2 0x4C6 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x416 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x3FC JUMP JUMPDEST POP PUSH0 DUP2 PUSH1 0x2 DUP4 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52F PUSH2 0x813 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6E2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5A7 JUMPI PUSH2 0x5A6 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D5 JUMPI DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x60D JUMPI PUSH2 0x60C PUSH2 0xB8F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x648 JUMPI PUSH2 0x647 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x69E JUMPI PUSH2 0x69D PUSH2 0xCEB JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x6E2 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x571 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6F0 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x813 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x807 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x89A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x81B PUSH2 0x95B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x839 PUSH2 0x1B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x898 JUMPI PUSH2 0x85C PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98F DUP3 PUSH2 0x966 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99F DUP2 PUSH2 0x985 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9BA DUP2 PUSH2 0x996 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D2 DUP2 PUSH2 0x9C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x9DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9ED DUP2 PUSH2 0x9C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA09 JUMPI PUSH2 0xA08 PUSH2 0x962 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA16 DUP6 DUP3 DUP7 ADD PUSH2 0x9AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA27 DUP6 DUP3 DUP7 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3A DUP2 PUSH2 0x985 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA53 PUSH0 DUP4 ADD DUP5 PUSH2 0xA31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6E JUMPI PUSH2 0xA6D PUSH2 0x962 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA7B DUP5 DUP3 DUP6 ADD PUSH2 0x9AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA8D DUP2 PUSH2 0x9C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA6 PUSH0 DUP4 ADD DUP5 PUSH2 0xA84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC2 JUMPI PUSH2 0xAC1 PUSH2 0x962 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xACF DUP6 DUP3 DUP7 ADD PUSH2 0x9AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAE0 DUP6 DUP3 DUP7 ADD PUSH2 0x9AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206F7261636C657320666F7220746F6B656E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB2E PUSH1 0x14 DUP4 PUSH2 0xAEA JUMP JUMPDEST SWAP2 POP PUSH2 0xB39 DUP3 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB5B DUP2 PUSH2 0xB22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBCA DUP2 PUSH2 0x9C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE5 JUMPI PUSH2 0xBE4 PUSH2 0x962 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBF2 DUP5 DUP3 DUP6 ADD PUSH2 0xBBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC32 DUP3 PUSH2 0x9C0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC3D DUP4 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC92 DUP3 PUSH2 0x9C0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC9D DUP4 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xCAD JUMPI PUSH2 0xCAC PUSH2 0xC5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC2 DUP3 PUSH2 0x9C0 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCD DUP4 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCE5 JUMPI PUSH2 0xCE4 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0xCA PUSH25 0xEAAE3AEF91AC00B6C6B8269FFEE29AE9512CE6F1C9EE5365F7 0x2E MOD SWAP3 EXP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "197:1489:2:-:0;;;315:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;357:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;315:58:2;197:1489;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;197:1489:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2067,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 2395,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2202,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addOracle_217": {
									"entryPoint": 1768,
									"id": 217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getMedianPrice_405": {
									"entryPoint": 477,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 438,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeOracle_273": {
									"entryPoint": 1319,
									"id": 273,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 419,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenOracles_191": {
									"entryPoint": 347,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1935,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed": {
									"entryPoint": 2810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6365:5",
										"nodeType": "YulBlock",
										"src": "0:6365:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "886:32:5",
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nativeSrc": "896:16:5",
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:5",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:5",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:5",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nativeSrc": "967:79:5",
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:5",
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nativeSrc": "1026:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nativeSrc": "1026:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nativeSrc": "997:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nativeSrc": "987:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nativeSrc": "980:43:5",
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nativeSrc": "977:63:5",
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:5",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nativeSrc": "1104:87:5",
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nativeSrc": "1114:29:5",
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nativeSrc": "1123:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nativeSrc": "1152:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nativeSrc": "1152:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:5",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:5",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:5",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nativeSrc": "1280:391:5",
													"nodeType": "YulBlock",
													"src": "1280:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:5",
																"nodeType": "YulBlock",
																"src": "1326:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:5"
																			},
																			"nativeSrc": "1328:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:5"
																		},
																		"nativeSrc": "1328:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:5"
																		},
																		"nativeSrc": "1297:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:5"
																},
																"nativeSrc": "1293:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:5"
															},
															"nativeSrc": "1290:119:5",
															"nodeType": "YulIf",
															"src": "1290:119:5"
														},
														{
															"nativeSrc": "1419:117:5",
															"nodeType": "YulBlock",
															"src": "1419:117:5",
															"statements": [
																{
																	"nativeSrc": "1434:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:5"
																				},
																				"nativeSrc": "1494:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:5"
																		},
																		"nativeSrc": "1473:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:5",
															"nodeType": "YulBlock",
															"src": "1546:118:5",
															"statements": [
																{
																	"nativeSrc": "1561:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:5"
																				},
																				"nativeSrc": "1622:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:5"
																		},
																		"nativeSrc": "1601:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:5",
														"nodeType": "YulTypedName",
														"src": "1242:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:5",
														"nodeType": "YulTypedName",
														"src": "1253:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:5",
														"nodeType": "YulTypedName",
														"src": "1265:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:5",
														"nodeType": "YulTypedName",
														"src": "1273:6:5",
														"type": ""
													}
												],
												"src": "1197:474:5"
											},
											{
												"body": {
													"nativeSrc": "1742:53:5",
													"nodeType": "YulBlock",
													"src": "1742:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1764:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:5"
																		},
																		"nativeSrc": "1764:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:5"
																},
																"nativeSrc": "1752:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:5"
															},
															"nativeSrc": "1752:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1677:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:5",
														"nodeType": "YulTypedName",
														"src": "1730:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:5",
														"nodeType": "YulTypedName",
														"src": "1737:3:5",
														"type": ""
													}
												],
												"src": "1677:118:5"
											},
											{
												"body": {
													"nativeSrc": "1899:124:5",
													"nodeType": "YulBlock",
													"src": "1899:124:5",
													"statements": [
														{
															"nativeSrc": "1909:26:5",
															"nodeType": "YulAssignment",
															"src": "1909:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:5"
																},
																"nativeSrc": "1917:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:5"
																		},
																		"nativeSrc": "1998:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1945:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:5"
																},
																"nativeSrc": "1945:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:5"
															},
															"nativeSrc": "1945:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1801:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:5",
														"nodeType": "YulTypedName",
														"src": "1871:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:5",
														"nodeType": "YulTypedName",
														"src": "1883:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:5",
														"nodeType": "YulTypedName",
														"src": "1894:4:5",
														"type": ""
													}
												],
												"src": "1801:222:5"
											},
											{
												"body": {
													"nativeSrc": "2095:263:5",
													"nodeType": "YulBlock",
													"src": "2095:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:83:5",
																"nodeType": "YulBlock",
																"src": "2141:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2143:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:5"
																			},
																			"nativeSrc": "2143:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:5"
																		},
																		"nativeSrc": "2143:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:5"
																		},
																		"nativeSrc": "2112:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:5"
																},
																"nativeSrc": "2108:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:5"
															},
															"nativeSrc": "2105:119:5",
															"nodeType": "YulIf",
															"src": "2105:119:5"
														},
														{
															"nativeSrc": "2234:117:5",
															"nodeType": "YulBlock",
															"src": "2234:117:5",
															"statements": [
																{
																	"nativeSrc": "2249:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2263:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2253:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:5"
																				},
																				"nativeSrc": "2309:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2288:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:5"
																		},
																		"nativeSrc": "2288:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2278:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2029:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2065:9:5",
														"nodeType": "YulTypedName",
														"src": "2065:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2076:7:5",
														"nodeType": "YulTypedName",
														"src": "2076:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2088:6:5",
														"nodeType": "YulTypedName",
														"src": "2088:6:5",
														"type": ""
													}
												],
												"src": "2029:329:5"
											},
											{
												"body": {
													"nativeSrc": "2429:53:5",
													"nodeType": "YulBlock",
													"src": "2429:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2446:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2469:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2469:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2451:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2451:17:5"
																		},
																		"nativeSrc": "2451:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2439:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:5"
																},
																"nativeSrc": "2439:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2439:37:5"
															},
															"nativeSrc": "2439:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2439:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2364:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2417:5:5",
														"nodeType": "YulTypedName",
														"src": "2417:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2424:3:5",
														"nodeType": "YulTypedName",
														"src": "2424:3:5",
														"type": ""
													}
												],
												"src": "2364:118:5"
											},
											{
												"body": {
													"nativeSrc": "2586:124:5",
													"nodeType": "YulBlock",
													"src": "2586:124:5",
													"statements": [
														{
															"nativeSrc": "2596:26:5",
															"nodeType": "YulAssignment",
															"src": "2596:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2608:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2608:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2619:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2604:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:5"
																},
																"nativeSrc": "2604:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2604:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2596:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2596:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2676:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2689:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2700:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2700:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2685:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:5"
																		},
																		"nativeSrc": "2685:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2685:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2632:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2632:43:5"
																},
																"nativeSrc": "2632:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2632:71:5"
															},
															"nativeSrc": "2632:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2632:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2488:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2558:9:5",
														"nodeType": "YulTypedName",
														"src": "2558:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2570:6:5",
														"nodeType": "YulTypedName",
														"src": "2570:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2581:4:5",
														"nodeType": "YulTypedName",
														"src": "2581:4:5",
														"type": ""
													}
												],
												"src": "2488:222:5"
											},
											{
												"body": {
													"nativeSrc": "2799:391:5",
													"nodeType": "YulBlock",
													"src": "2799:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2845:83:5",
																"nodeType": "YulBlock",
																"src": "2845:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2847:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2847:77:5"
																			},
																			"nativeSrc": "2847:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:79:5"
																		},
																		"nativeSrc": "2847:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2820:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2820:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2829:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2829:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2816:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2816:3:5"
																		},
																		"nativeSrc": "2816:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2816:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2841:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2841:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2812:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2812:3:5"
																},
																"nativeSrc": "2812:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2812:32:5"
															},
															"nativeSrc": "2809:119:5",
															"nodeType": "YulIf",
															"src": "2809:119:5"
														},
														{
															"nativeSrc": "2938:117:5",
															"nodeType": "YulBlock",
															"src": "2938:117:5",
															"statements": [
																{
																	"nativeSrc": "2953:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2953:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2967:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2967:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2957:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2957:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2982:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2982:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3017:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3028:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3028:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3013:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:5"
																				},
																				"nativeSrc": "3013:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3013:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3037:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3037:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2992:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2992:20:5"
																		},
																		"nativeSrc": "2992:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2992:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2982:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3065:118:5",
															"nodeType": "YulBlock",
															"src": "3065:118:5",
															"statements": [
																{
																	"nativeSrc": "3080:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3080:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3094:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3094:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3084:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3084:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3110:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3110:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3145:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3145:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3156:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3156:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3141:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3141:3:5"
																				},
																				"nativeSrc": "3141:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3141:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3165:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3165:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3120:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3120:20:5"
																		},
																		"nativeSrc": "3120:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3120:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3110:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3110:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2716:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2761:9:5",
														"nodeType": "YulTypedName",
														"src": "2761:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2772:7:5",
														"nodeType": "YulTypedName",
														"src": "2772:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2784:6:5",
														"nodeType": "YulTypedName",
														"src": "2784:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2792:6:5",
														"nodeType": "YulTypedName",
														"src": "2792:6:5",
														"type": ""
													}
												],
												"src": "2716:474:5"
											},
											{
												"body": {
													"nativeSrc": "3292:73:5",
													"nodeType": "YulBlock",
													"src": "3292:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3309:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3309:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3314:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3314:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3302:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:5"
																},
																"nativeSrc": "3302:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3302:19:5"
															},
															"nativeSrc": "3302:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3302:19:5"
														},
														{
															"nativeSrc": "3330:29:5",
															"nodeType": "YulAssignment",
															"src": "3330:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3349:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3349:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3354:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3354:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3345:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3345:3:5"
																},
																"nativeSrc": "3345:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3345:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3330:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "3330:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3196:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3264:3:5",
														"nodeType": "YulTypedName",
														"src": "3264:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3269:6:5",
														"nodeType": "YulTypedName",
														"src": "3269:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3280:11:5",
														"nodeType": "YulTypedName",
														"src": "3280:11:5",
														"type": ""
													}
												],
												"src": "3196:169:5"
											},
											{
												"body": {
													"nativeSrc": "3477:64:5",
													"nodeType": "YulBlock",
													"src": "3477:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3499:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3499:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3507:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3507:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3495:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:5"
																		},
																		"nativeSrc": "3495:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3495:14:5"
																	},
																	{
																		"hexValue": "4e6f206f7261636c657320666f7220746f6b656e",
																		"kind": "string",
																		"nativeSrc": "3511:22:5",
																		"nodeType": "YulLiteral",
																		"src": "3511:22:5",
																		"type": "",
																		"value": "No oracles for token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3488:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:5"
																},
																"nativeSrc": "3488:46:5",
																"nodeType": "YulFunctionCall",
																"src": "3488:46:5"
															},
															"nativeSrc": "3488:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "3488:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed",
												"nativeSrc": "3371:170:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3469:6:5",
														"nodeType": "YulTypedName",
														"src": "3469:6:5",
														"type": ""
													}
												],
												"src": "3371:170:5"
											},
											{
												"body": {
													"nativeSrc": "3693:220:5",
													"nodeType": "YulBlock",
													"src": "3693:220:5",
													"statements": [
														{
															"nativeSrc": "3703:74:5",
															"nodeType": "YulAssignment",
															"src": "3703:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3769:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3769:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3774:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3774:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3710:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "3710:58:5"
																},
																"nativeSrc": "3710:67:5",
																"nodeType": "YulFunctionCall",
																"src": "3710:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3703:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3703:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3875:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3875:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed",
																	"nativeSrc": "3786:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "3786:88:5"
																},
																"nativeSrc": "3786:93:5",
																"nodeType": "YulFunctionCall",
																"src": "3786:93:5"
															},
															"nativeSrc": "3786:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "3786:93:5"
														},
														{
															"nativeSrc": "3888:19:5",
															"nodeType": "YulAssignment",
															"src": "3888:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3899:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3899:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3904:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3904:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3895:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3895:3:5"
																},
																"nativeSrc": "3895:12:5",
																"nodeType": "YulFunctionCall",
																"src": "3895:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3888:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3547:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3681:3:5",
														"nodeType": "YulTypedName",
														"src": "3681:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3689:3:5",
														"nodeType": "YulTypedName",
														"src": "3689:3:5",
														"type": ""
													}
												],
												"src": "3547:366:5"
											},
											{
												"body": {
													"nativeSrc": "4090:248:5",
													"nodeType": "YulBlock",
													"src": "4090:248:5",
													"statements": [
														{
															"nativeSrc": "4100:26:5",
															"nodeType": "YulAssignment",
															"src": "4100:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4112:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4112:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4123:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4123:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4108:3:5"
																},
																"nativeSrc": "4108:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4108:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4100:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4100:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4147:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4147:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4158:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4158:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4143:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:5"
																		},
																		"nativeSrc": "4143:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4166:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4166:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4172:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4172:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4162:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:5"
																		},
																		"nativeSrc": "4162:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4162:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4136:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:5"
																},
																"nativeSrc": "4136:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4136:47:5"
															},
															"nativeSrc": "4136:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "4136:47:5"
														},
														{
															"nativeSrc": "4192:139:5",
															"nodeType": "YulAssignment",
															"src": "4192:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4326:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4326:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4200:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "4200:124:5"
																},
																"nativeSrc": "4200:131:5",
																"nodeType": "YulFunctionCall",
																"src": "4200:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4192:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4192:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3919:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4070:9:5",
														"nodeType": "YulTypedName",
														"src": "4070:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4085:4:5",
														"nodeType": "YulTypedName",
														"src": "4085:4:5",
														"type": ""
													}
												],
												"src": "3919:419:5"
											},
											{
												"body": {
													"nativeSrc": "4372:152:5",
													"nodeType": "YulBlock",
													"src": "4372:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4389:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4389:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4392:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4392:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4382:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4382:6:5"
																},
																"nativeSrc": "4382:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4382:88:5"
															},
															"nativeSrc": "4382:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4382:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4486:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4486:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4489:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4489:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:5"
																},
																"nativeSrc": "4479:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4479:15:5"
															},
															"nativeSrc": "4479:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4479:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4510:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4510:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4513:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4513:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4503:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4503:6:5"
																},
																"nativeSrc": "4503:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4503:15:5"
															},
															"nativeSrc": "4503:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4503:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4344:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4344:180:5"
											},
											{
												"body": {
													"nativeSrc": "4558:152:5",
													"nodeType": "YulBlock",
													"src": "4558:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4575:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4575:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4578:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4578:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4568:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4568:6:5"
																},
																"nativeSrc": "4568:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4568:88:5"
															},
															"nativeSrc": "4568:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4568:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4672:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4672:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4675:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4675:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4665:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:5"
																},
																"nativeSrc": "4665:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4665:15:5"
															},
															"nativeSrc": "4665:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4665:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4696:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4696:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4699:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4699:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4689:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4689:6:5"
																},
																"nativeSrc": "4689:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4689:15:5"
															},
															"nativeSrc": "4689:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4689:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4530:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4530:180:5"
											},
											{
												"body": {
													"nativeSrc": "4779:80:5",
													"nodeType": "YulBlock",
													"src": "4779:80:5",
													"statements": [
														{
															"nativeSrc": "4789:22:5",
															"nodeType": "YulAssignment",
															"src": "4789:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4804:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4804:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4798:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4798:5:5"
																},
																"nativeSrc": "4798:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4798:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4789:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4789:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4847:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4847:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4820:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4820:26:5"
																},
																"nativeSrc": "4820:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4820:33:5"
															},
															"nativeSrc": "4820:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4820:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4716:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4757:6:5",
														"nodeType": "YulTypedName",
														"src": "4757:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4765:3:5",
														"nodeType": "YulTypedName",
														"src": "4765:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4773:5:5",
														"nodeType": "YulTypedName",
														"src": "4773:5:5",
														"type": ""
													}
												],
												"src": "4716:143:5"
											},
											{
												"body": {
													"nativeSrc": "4942:274:5",
													"nodeType": "YulBlock",
													"src": "4942:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4988:83:5",
																"nodeType": "YulBlock",
																"src": "4988:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4990:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4990:77:5"
																			},
																			"nativeSrc": "4990:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4990:79:5"
																		},
																		"nativeSrc": "4990:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4990:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4963:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4963:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4972:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4972:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4959:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4959:3:5"
																		},
																		"nativeSrc": "4959:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4959:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4984:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4984:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4955:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4955:3:5"
																},
																"nativeSrc": "4955:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4955:32:5"
															},
															"nativeSrc": "4952:119:5",
															"nodeType": "YulIf",
															"src": "4952:119:5"
														},
														{
															"nativeSrc": "5081:128:5",
															"nodeType": "YulBlock",
															"src": "5081:128:5",
															"statements": [
																{
																	"nativeSrc": "5096:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5096:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5110:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5110:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5100:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5100:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5125:74:5",
																	"nodeType": "YulAssignment",
																	"src": "5125:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5171:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5171:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5182:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5182:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5167:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5167:3:5"
																				},
																				"nativeSrc": "5167:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5167:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5191:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5191:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5135:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5135:31:5"
																		},
																		"nativeSrc": "5135:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5135:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5125:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5125:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4865:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4912:9:5",
														"nodeType": "YulTypedName",
														"src": "4912:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4923:7:5",
														"nodeType": "YulTypedName",
														"src": "4923:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4935:6:5",
														"nodeType": "YulTypedName",
														"src": "4935:6:5",
														"type": ""
													}
												],
												"src": "4865:351:5"
											},
											{
												"body": {
													"nativeSrc": "5250:152:5",
													"nodeType": "YulBlock",
													"src": "5250:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5267:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5267:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5270:77:5",
																		"nodeType": "YulLiteral",
																		"src": "5270:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5260:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5260:6:5"
																},
																"nativeSrc": "5260:88:5",
																"nodeType": "YulFunctionCall",
																"src": "5260:88:5"
															},
															"nativeSrc": "5260:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "5260:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5364:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5364:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5367:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5367:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5357:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5357:6:5"
																},
																"nativeSrc": "5357:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5357:15:5"
															},
															"nativeSrc": "5357:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5357:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5388:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5388:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5391:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5391:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5381:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:5"
																},
																"nativeSrc": "5381:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5381:15:5"
															},
															"nativeSrc": "5381:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5381:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5222:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "5222:180:5"
											},
											{
												"body": {
													"nativeSrc": "5452:147:5",
													"nodeType": "YulBlock",
													"src": "5452:147:5",
													"statements": [
														{
															"nativeSrc": "5462:25:5",
															"nodeType": "YulAssignment",
															"src": "5462:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5485:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5485:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5467:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5467:17:5"
																},
																"nativeSrc": "5467:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5467:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5462:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5462:1:5"
																}
															]
														},
														{
															"nativeSrc": "5496:25:5",
															"nodeType": "YulAssignment",
															"src": "5496:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5519:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5519:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5501:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5501:17:5"
																},
																"nativeSrc": "5501:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5501:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5496:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5496:1:5"
																}
															]
														},
														{
															"nativeSrc": "5530:16:5",
															"nodeType": "YulAssignment",
															"src": "5530:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5541:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5541:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5544:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5544:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5537:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5537:3:5"
																},
																"nativeSrc": "5537:9:5",
																"nodeType": "YulFunctionCall",
																"src": "5537:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5530:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5530:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5570:22:5",
																"nodeType": "YulBlock",
																"src": "5570:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5572:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "5572:16:5"
																			},
																			"nativeSrc": "5572:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5572:18:5"
																		},
																		"nativeSrc": "5572:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5572:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5562:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5562:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5565:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5565:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5559:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5559:2:5"
																},
																"nativeSrc": "5559:10:5",
																"nodeType": "YulFunctionCall",
																"src": "5559:10:5"
															},
															"nativeSrc": "5556:36:5",
															"nodeType": "YulIf",
															"src": "5556:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5408:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5439:1:5",
														"nodeType": "YulTypedName",
														"src": "5439:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5442:1:5",
														"nodeType": "YulTypedName",
														"src": "5442:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5448:3:5",
														"nodeType": "YulTypedName",
														"src": "5448:3:5",
														"type": ""
													}
												],
												"src": "5408:191:5"
											},
											{
												"body": {
													"nativeSrc": "5633:152:5",
													"nodeType": "YulBlock",
													"src": "5633:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5650:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5650:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5653:77:5",
																		"nodeType": "YulLiteral",
																		"src": "5653:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5643:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5643:6:5"
																},
																"nativeSrc": "5643:88:5",
																"nodeType": "YulFunctionCall",
																"src": "5643:88:5"
															},
															"nativeSrc": "5643:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "5643:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5747:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5747:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5750:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5750:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5740:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5740:6:5"
																},
																"nativeSrc": "5740:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5740:15:5"
															},
															"nativeSrc": "5740:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5740:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5771:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5771:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5774:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5774:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5764:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5764:6:5"
																},
																"nativeSrc": "5764:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5764:15:5"
															},
															"nativeSrc": "5764:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5764:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5605:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "5605:180:5"
											},
											{
												"body": {
													"nativeSrc": "5833:143:5",
													"nodeType": "YulBlock",
													"src": "5833:143:5",
													"statements": [
														{
															"nativeSrc": "5843:25:5",
															"nodeType": "YulAssignment",
															"src": "5843:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5866:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5866:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5848:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5848:17:5"
																},
																"nativeSrc": "5848:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5848:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5843:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5843:1:5"
																}
															]
														},
														{
															"nativeSrc": "5877:25:5",
															"nodeType": "YulAssignment",
															"src": "5877:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5900:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5900:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5882:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5882:17:5"
																},
																"nativeSrc": "5882:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5882:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5877:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5877:1:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5924:22:5",
																"nodeType": "YulBlock",
																"src": "5924:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5926:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "5926:16:5"
																			},
																			"nativeSrc": "5926:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5926:18:5"
																		},
																		"nativeSrc": "5926:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5926:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5921:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5921:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5914:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5914:6:5"
																},
																"nativeSrc": "5914:9:5",
																"nodeType": "YulFunctionCall",
																"src": "5914:9:5"
															},
															"nativeSrc": "5911:35:5",
															"nodeType": "YulIf",
															"src": "5911:35:5"
														},
														{
															"nativeSrc": "5956:14:5",
															"nodeType": "YulAssignment",
															"src": "5956:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5965:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5965:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5968:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5968:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5961:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5961:3:5"
																},
																"nativeSrc": "5961:9:5",
																"nodeType": "YulFunctionCall",
																"src": "5961:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5956:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5956:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5791:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5822:1:5",
														"nodeType": "YulTypedName",
														"src": "5822:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5825:1:5",
														"nodeType": "YulTypedName",
														"src": "5825:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5831:1:5",
														"nodeType": "YulTypedName",
														"src": "5831:1:5",
														"type": ""
													}
												],
												"src": "5791:185:5"
											},
											{
												"body": {
													"nativeSrc": "6027:149:5",
													"nodeType": "YulBlock",
													"src": "6027:149:5",
													"statements": [
														{
															"nativeSrc": "6037:25:5",
															"nodeType": "YulAssignment",
															"src": "6037:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6060:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6060:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6042:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6042:17:5"
																},
																"nativeSrc": "6042:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6042:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6037:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6037:1:5"
																}
															]
														},
														{
															"nativeSrc": "6071:25:5",
															"nodeType": "YulAssignment",
															"src": "6071:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6094:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6094:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6076:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6076:17:5"
																},
																"nativeSrc": "6076:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6076:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6071:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6071:1:5"
																}
															]
														},
														{
															"nativeSrc": "6105:17:5",
															"nodeType": "YulAssignment",
															"src": "6105:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6117:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6120:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6120:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6113:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6113:3:5"
																},
																"nativeSrc": "6113:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6113:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6105:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6105:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6147:22:5",
																"nodeType": "YulBlock",
																"src": "6147:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6149:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6149:16:5"
																			},
																			"nativeSrc": "6149:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6149:18:5"
																		},
																		"nativeSrc": "6149:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6149:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6138:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6138:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6144:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6144:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6135:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6135:2:5"
																},
																"nativeSrc": "6135:11:5",
																"nodeType": "YulFunctionCall",
																"src": "6135:11:5"
															},
															"nativeSrc": "6132:37:5",
															"nodeType": "YulIf",
															"src": "6132:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5982:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6013:1:5",
														"nodeType": "YulTypedName",
														"src": "6013:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6016:1:5",
														"nodeType": "YulTypedName",
														"src": "6016:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6022:4:5",
														"nodeType": "YulTypedName",
														"src": "6022:4:5",
														"type": ""
													}
												],
												"src": "5982:194:5"
											},
											{
												"body": {
													"nativeSrc": "6210:152:5",
													"nodeType": "YulBlock",
													"src": "6210:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6230:77:5",
																		"nodeType": "YulLiteral",
																		"src": "6230:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6220:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6220:6:5"
																},
																"nativeSrc": "6220:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6220:88:5"
															},
															"nativeSrc": "6220:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "6220:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6324:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6324:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6327:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6327:4:5",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6317:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:5"
																},
																"nativeSrc": "6317:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6317:15:5"
															},
															"nativeSrc": "6317:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6317:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6348:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6348:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6351:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6351:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6341:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6341:6:5"
																},
																"nativeSrc": "6341:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6341:15:5"
															},
															"nativeSrc": "6341:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6341:15:5"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "6182:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6182:180:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"No oracles for token\")\n\n    }\n\n    function abi_encode_t_stringliteral_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063adfe34f711610059578063adfe34f7146100d7578063c32eae7614610107578063f0ca4adb14610123578063f2fde38b1461013f5761007b565b80634c12c8541461007f578063715018a6146100af5780638da5cb5b146100b9575b5f80fd5b610099600480360381019061009491906109f3565b61015b565b6040516100a69190610a40565b60405180910390f35b6100b76101a3565b005b6100c16101b6565b6040516100ce9190610a40565b60405180910390f35b6100f160048036038101906100ec9190610a59565b6101dd565b6040516100fe9190610a93565b60405180910390f35b610121600480360381019061011c9190610aac565b610527565b005b61013d60048036038101906101389190610aac565b6106e8565b005b61015960048036038101906101549190610a59565b61078f565b005b6001602052815f5260405f208181548110610174575f80fd5b905f5260205f20015f915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ab610813565b6101b45f61089a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561029957602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610250575b505050505090505f8151116102e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102da90610b44565b60405180910390fd5b5f815167ffffffffffffffff8111156102ff576102fe610b62565b5b60405190808252806020026020018201604052801561032d5781602001602082028036833780820191505090505b5090505f5b82518110156103f95782818151811061034e5761034d610b8f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166341976e09866040518263ffffffff1660e01b815260040161038e9190610a40565b602060405180830381865afa1580156103a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103cd9190610bd0565b8282815181106103e0576103df610b8f565b5b6020026020010181815250508080600101915050610332565b505f5b81518110156104f0575f6001826104139190610c28565b90505b82518110156104e25782828151811061043257610431610b8f565b5b602002602001015183828151811061044d5761044c610b8f565b5b602002602001015110156104d5575f83838151811061046f5761046e610b8f565b5b6020026020010151905083828151811061048c5761048b610b8f565b5b60200260200101518484815181106104a7576104a6610b8f565b5b602002602001018181525050808483815181106104c7576104c6610b8f565b5b602002602001018181525050505b8080600101915050610416565b5080806001019150506103fc565b505f81600283516105019190610c88565b8151811061051257610511610b8f565b5b60200260200101519050809350505050919050565b61052f610813565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f5b81805490508110156106e2578273ffffffffffffffffffffffffffffffffffffffff168282815481106105a7576105a6610b8f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106d55781600183805490506105fc9190610cb8565b8154811061060d5761060c610b8f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828154811061064857610647610b8f565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508180548061069e5761069d610ceb565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556106e2565b8080600101915050610571565b50505050565b6106f0610813565b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610797610813565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610807575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107fe9190610a40565b60405180910390fd5b6108108161089a565b50565b61081b61095b565b73ffffffffffffffffffffffffffffffffffffffff166108396101b6565b73ffffffffffffffffffffffffffffffffffffffff16146108985761085c61095b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161088f9190610a40565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61098f82610966565b9050919050565b61099f81610985565b81146109a9575f80fd5b50565b5f813590506109ba81610996565b92915050565b5f819050919050565b6109d2816109c0565b81146109dc575f80fd5b50565b5f813590506109ed816109c9565b92915050565b5f8060408385031215610a0957610a08610962565b5b5f610a16858286016109ac565b9250506020610a27858286016109df565b9150509250929050565b610a3a81610985565b82525050565b5f602082019050610a535f830184610a31565b92915050565b5f60208284031215610a6e57610a6d610962565b5b5f610a7b848285016109ac565b91505092915050565b610a8d816109c0565b82525050565b5f602082019050610aa65f830184610a84565b92915050565b5f8060408385031215610ac257610ac1610962565b5b5f610acf858286016109ac565b9250506020610ae0858286016109ac565b9150509250929050565b5f82825260208201905092915050565b7f4e6f206f7261636c657320666f7220746f6b656e0000000000000000000000005f82015250565b5f610b2e601483610aea565b9150610b3982610afa565b602082019050919050565b5f6020820190508181035f830152610b5b81610b22565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050610bca816109c9565b92915050565b5f60208284031215610be557610be4610962565b5b5f610bf284828501610bbc565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c32826109c0565b9150610c3d836109c0565b9250828201905080821115610c5557610c54610bfb565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c92826109c0565b9150610c9d836109c0565b925082610cad57610cac610c5b565b5b828204905092915050565b5f610cc2826109c0565b9150610ccd836109c0565b9250828203905081811115610ce557610ce4610bfb565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea264697066735822122036ca78eaae3aef91ac00b6c6b8269ffee29ae9512ce6f1c9ee5365f72e06920a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xADFE34F7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xADFE34F7 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xC32EAE76 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xF0CA4ADB EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x4C12C854 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x1A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x813 JUMP JUMPDEST PUSH2 0x1B4 PUSH0 PUSH2 0x89A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x250 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH2 0x2FE PUSH2 0xB62 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x32D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3F9 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x34E JUMPI PUSH2 0x34D PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3E0 JUMPI PUSH2 0x3DF PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x332 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x4F0 JUMPI PUSH0 PUSH1 0x1 DUP3 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4E2 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x44D JUMPI PUSH2 0x44C PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x46F JUMPI PUSH2 0x46E PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x48C JUMPI PUSH2 0x48B PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A6 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4C7 JUMPI PUSH2 0x4C6 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x416 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x3FC JUMP JUMPDEST POP PUSH0 DUP2 PUSH1 0x2 DUP4 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52F PUSH2 0x813 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6E2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5A7 JUMPI PUSH2 0x5A6 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D5 JUMPI DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x60D JUMPI PUSH2 0x60C PUSH2 0xB8F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x648 JUMPI PUSH2 0x647 PUSH2 0xB8F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x69E JUMPI PUSH2 0x69D PUSH2 0xCEB JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x6E2 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x571 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6F0 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x813 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x807 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x89A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x81B PUSH2 0x95B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x839 PUSH2 0x1B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x898 JUMPI PUSH2 0x85C PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98F DUP3 PUSH2 0x966 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99F DUP2 PUSH2 0x985 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9BA DUP2 PUSH2 0x996 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D2 DUP2 PUSH2 0x9C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x9DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9ED DUP2 PUSH2 0x9C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA09 JUMPI PUSH2 0xA08 PUSH2 0x962 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA16 DUP6 DUP3 DUP7 ADD PUSH2 0x9AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA27 DUP6 DUP3 DUP7 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3A DUP2 PUSH2 0x985 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA53 PUSH0 DUP4 ADD DUP5 PUSH2 0xA31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6E JUMPI PUSH2 0xA6D PUSH2 0x962 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA7B DUP5 DUP3 DUP6 ADD PUSH2 0x9AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA8D DUP2 PUSH2 0x9C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA6 PUSH0 DUP4 ADD DUP5 PUSH2 0xA84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC2 JUMPI PUSH2 0xAC1 PUSH2 0x962 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xACF DUP6 DUP3 DUP7 ADD PUSH2 0x9AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAE0 DUP6 DUP3 DUP7 ADD PUSH2 0x9AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206F7261636C657320666F7220746F6B656E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB2E PUSH1 0x14 DUP4 PUSH2 0xAEA JUMP JUMPDEST SWAP2 POP PUSH2 0xB39 DUP3 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB5B DUP2 PUSH2 0xB22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBCA DUP2 PUSH2 0x9C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE5 JUMPI PUSH2 0xBE4 PUSH2 0x962 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBF2 DUP5 DUP3 DUP6 ADD PUSH2 0xBBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC32 DUP3 PUSH2 0x9C0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC3D DUP4 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC92 DUP3 PUSH2 0x9C0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC9D DUP4 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xCAD JUMPI PUSH2 0xCAC PUSH2 0xC5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC2 DUP3 PUSH2 0x9C0 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCD DUP4 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCE5 JUMPI PUSH2 0xCE4 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0xCA PUSH25 0xEAAE3AEF91AC00B6C6B8269FFEE29AE9512CE6F1C9EE5365F7 0x2E MOD SWAP3 EXP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "197:1489:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;259:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;876:808:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:367;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;379:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;259:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;876:808:2:-;947:7;966:24;993:12;:19;1006:5;993:19;;;;;;;;;;;;;;;966:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1047:1;1030:7;:14;:18;1022:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1084:23;1124:7;:14;1110:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1084:55;;1154:9;1149:122;1173:7;:14;1169:1;:18;1149:122;;;1233:7;1241:1;1233:10;;;;;;;;:::i;:::-;;;;;;;;1220:33;;;1254:5;1220:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1208:6;1215:1;1208:9;;;;;;;;:::i;:::-;;;;;;;:52;;;;;1189:3;;;;;;;1149:122;;;;1286:9;1281:321;1305:6;:13;1301:1;:17;1281:321;;;1344:9;1360:1;1356;:5;;;;:::i;:::-;1344:17;;1339:253;1367:6;:13;1363:1;:17;1339:253;;;1421:6;1428:1;1421:9;;;;;;;;:::i;:::-;;;;;;;;1409:6;1416:1;1409:9;;;;;;;;:::i;:::-;;;;;;;;:21;1405:173;;;1454:12;1469:6;1476:1;1469:9;;;;;;;;:::i;:::-;;;;;;;;1454:24;;1512:6;1519:1;1512:9;;;;;;;;:::i;:::-;;;;;;;;1500:6;1507:1;1500:9;;;;;;;;:::i;:::-;;;;;;;:21;;;;;1555:4;1543:6;1550:1;1543:9;;;;;;;;:::i;:::-;;;;;;;:16;;;;;1432:146;1405:173;1382:3;;;;;;;1339:253;;;;1320:3;;;;;;;1281:321;;;;1612:14;1629:6;1652:1;1636:6;:13;:17;;;;:::i;:::-;1629:25;;;;;;;;:::i;:::-;;;;;;;;1612:42;;1671:6;1664:13;;;;;876:808;;;:::o;503:367::-;1531:13:0;:11;:13::i;:::-;585:25:2::1;613:12;:19;626:5;613:19;;;;;;;;;;;;;;;585:47;;647:9;642:222;666:7;:14;;;;662:1;:18;642:222;;;719:6;705:20;;:7;713:1;705:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:20;;::::0;701:153:::1;;758:7;783:1;766:7;:14;;;;:18;;;;:::i;:::-;758:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;745:7;753:1;745:10;;;;;;;;:::i;:::-;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;803:7;:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:5;;701:153;682:3;;;;;;;642:222;;;;575:295;503:367:::0;;:::o;379:118::-;1531:13:0;:11;:13::i;:::-;458:12:2::1;:19;471:5;458:19;;;;;;;;;;;;;;;483:6;458:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;379:118:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:118::-;2451:24;2469:5;2451:24;:::i;:::-;2446:3;2439:37;2364:118;;:::o;2488:222::-;2581:4;2619:2;2608:9;2604:18;2596:26;;2632:71;2700:1;2689:9;2685:17;2676:6;2632:71;:::i;:::-;2488:222;;;;:::o;2716:474::-;2784:6;2792;2841:2;2829:9;2820:7;2816:23;2812:32;2809:119;;;2847:79;;:::i;:::-;2809:119;2967:1;2992:53;3037:7;3028:6;3017:9;3013:22;2992:53;:::i;:::-;2982:63;;2938:117;3094:2;3120:53;3165:7;3156:6;3145:9;3141:22;3120:53;:::i;:::-;3110:63;;3065:118;2716:474;;;;;:::o;3196:169::-;3280:11;3314:6;3309:3;3302:19;3354:4;3349:3;3345:14;3330:29;;3196:169;;;;:::o;3371:170::-;3511:22;3507:1;3499:6;3495:14;3488:46;3371:170;:::o;3547:366::-;3689:3;3710:67;3774:2;3769:3;3710:67;:::i;:::-;3703:74;;3786:93;3875:3;3786:93;:::i;:::-;3904:2;3899:3;3895:12;3888:19;;3547:366;;;:::o;3919:419::-;4085:4;4123:2;4112:9;4108:18;4100:26;;4172:9;4166:4;4162:20;4158:1;4147:9;4143:17;4136:47;4200:131;4326:4;4200:131;:::i;:::-;4192:139;;3919:419;;;:::o;4344:180::-;4392:77;4389:1;4382:88;4489:4;4486:1;4479:15;4513:4;4510:1;4503:15;4530:180;4578:77;4575:1;4568:88;4675:4;4672:1;4665:15;4699:4;4696:1;4689:15;4716:143;4773:5;4804:6;4798:13;4789:22;;4820:33;4847:5;4820:33;:::i;:::-;4716:143;;;;:::o;4865:351::-;4935:6;4984:2;4972:9;4963:7;4959:23;4955:32;4952:119;;;4990:79;;:::i;:::-;4952:119;5110:1;5135:64;5191:7;5182:6;5171:9;5167:22;5135:64;:::i;:::-;5125:74;;5081:128;4865:351;;;;:::o;5222:180::-;5270:77;5267:1;5260:88;5367:4;5364:1;5357:15;5391:4;5388:1;5381:15;5408:191;5448:3;5467:20;5485:1;5467:20;:::i;:::-;5462:25;;5501:20;5519:1;5501:20;:::i;:::-;5496:25;;5544:1;5541;5537:9;5530:16;;5565:3;5562:1;5559:10;5556:36;;;5572:18;;:::i;:::-;5556:36;5408:191;;;;:::o;5605:180::-;5653:77;5650:1;5643:88;5750:4;5747:1;5740:15;5774:4;5771:1;5764:15;5791:185;5831:1;5848:20;5866:1;5848:20;:::i;:::-;5843:25;;5882:20;5900:1;5882:20;:::i;:::-;5877:25;;5921:1;5911:35;;5926:18;;:::i;:::-;5911:35;5968:1;5965;5961:9;5956:14;;5791:185;;;;:::o;5982:194::-;6022:4;6042:20;6060:1;6042:20;:::i;:::-;6037:25;;6076:20;6094:1;6076:20;:::i;:::-;6071:25;;6120:1;6117;6113:9;6105:17;;6144:1;6138:4;6135:11;6132:37;;;6149:18;;:::i;:::-;6132:37;5982:194;;;;:::o;6182:180::-;6230:77;6227:1;6220:88;6327:4;6324:1;6317:15;6351:4;6348:1;6341:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "681200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addOracle(address,address)": "infinite",
								"getMedianPrice(address)": "infinite",
								"owner()": "2560",
								"removeOracle(address,address)": "infinite",
								"renounceOwnership()": "infinite",
								"tokenOracles(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 197,
									"end": 1686,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 315,
									"end": 373,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 373,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 315,
									"end": 373,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 315,
									"end": 373,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 315,
									"end": 373,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 315,
									"end": 373,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 315,
									"end": 373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 315,
									"end": 373,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 315,
									"end": 373,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 357,
									"end": 369,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 315,
									"end": 373,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 1686,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122036ca78eaae3aef91ac00b6c6b8269ffee29ae9512ce6f1c9ee5365f72e06920a64736f6c634300081a0033",
									".code": [
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "ADFE34F7"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "ADFE34F7"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "C32EAE76"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "F0CA4ADB"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "4C12C854"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1686,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 259,
											"end": 308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 259,
											"end": 308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 259,
											"end": 308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 876,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 876,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 876,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 503,
											"end": 870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 503,
											"end": 870,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 503,
											"end": 870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 503,
											"end": 870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 503,
											"end": 870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 503,
											"end": 870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 503,
											"end": 870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 379,
											"end": 497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 379,
											"end": 497,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 379,
											"end": 497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 379,
											"end": 497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 379,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 379,
											"end": 497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 379,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 379,
											"end": 497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 308,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 259,
											"end": 308,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 259,
											"end": 308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 947,
											"end": 954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1011,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1022,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1022,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1138,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1110,
											"end": 1139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1271,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1149,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1271,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1149,
											"end": 1271,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1233,
											"end": 1243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1253,
											"name": "PUSH",
											"source": 2,
											"value": "41976E09"
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1220,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1220,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1220,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1214,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1208,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1192,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1192,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1192,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1189,
											"end": 1192,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1192,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1149,
											"end": 1271,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1271,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1149,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1602,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1281,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1302,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1318,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1602,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1281,
											"end": 1602,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1356,
											"end": 1357,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1356,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1344,
											"end": 1361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1344,
											"end": 1361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1592,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1339,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1380,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1592,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1339,
											"end": 1592,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1421,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1409,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1430,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1578,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1405,
											"end": 1578,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1469,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1520,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1512,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1500,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1549,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1543,
											"end": 1552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1559,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1578,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1405,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1339,
											"end": 1592,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1592,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1339,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1592,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1281,
											"end": 1602,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1602,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1281,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1636,
											"end": 1653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1629,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 1684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 503,
											"end": 870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 631,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 632,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 585,
											"end": 632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 585,
											"end": 632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 642,
											"end": 864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 666,
											"end": 673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 666,
											"end": 680,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 666,
											"end": 680,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 666,
											"end": 680,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 666,
											"end": 680,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 662,
											"end": 663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 662,
											"end": 680,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 642,
											"end": 864,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 642,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 642,
											"end": 864,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 719,
											"end": 725,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 705,
											"end": 725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 705,
											"end": 725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 705,
											"end": 712,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 713,
											"end": 714,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 705,
											"end": 715,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 705,
											"end": 715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 705,
											"end": 725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 705,
											"end": 725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 705,
											"end": 725,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 701,
											"end": 854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 701,
											"end": 854,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 758,
											"end": 765,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 783,
											"end": 784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 766,
											"end": 773,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 766,
											"end": 780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 780,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 766,
											"end": 780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 766,
											"end": 784,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 766,
											"end": 784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 766,
											"end": 784,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 766,
											"end": 784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 758,
											"end": 785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 758,
											"end": 785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 745,
											"end": 752,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 753,
											"end": 754,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 745,
											"end": 755,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 745,
											"end": 785,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 803,
											"end": 810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 803,
											"end": 816,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 816,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 834,
											"end": 839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 834,
											"end": 839,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 701,
											"end": 854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 682,
											"end": 685,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 682,
											"end": 685,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 682,
											"end": 685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 682,
											"end": 685,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 682,
											"end": 685,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 682,
											"end": 685,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 682,
											"end": 685,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 642,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 642,
											"end": 864,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 642,
											"end": 864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 642,
											"end": 864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 642,
											"end": 864,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 575,
											"end": 870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 503,
											"end": 870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 379,
											"end": 497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 476,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 477,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 483,
											"end": 489,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 458,
											"end": 490,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2451,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2632,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2843,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 2838,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2809,
											"end": 2928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2847,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2847,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2926,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2847,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2928,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2809,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3013,
											"end": 3035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2992,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2992,
											"end": 3045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2992,
											"end": 3045,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2992,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2938,
											"end": 3055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3096,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3154,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3120,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3321,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3358,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3371,
											"end": 3541,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3371,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3533,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F206F7261636C657320666F7220746F6B656E000000000000000000000000"
										},
										{
											"begin": 3507,
											"end": 3508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3534,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3371,
											"end": 3541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3371,
											"end": 3541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3913,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3547,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3774,
											"end": 3776,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3710,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3777,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3710,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3777,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3875,
											"end": 3878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3786,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3879,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3786,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3904,
											"end": 3906,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3907,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3913,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4338,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3919,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 4181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4147,
											"end": 4156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4200,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4331,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4200,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4524,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4344,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4469,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4389,
											"end": 4390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4486,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4479,
											"end": 4494,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4517,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4510,
											"end": 4511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4530,
											"end": 4710,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4530,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4655,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4575,
											"end": 4576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4672,
											"end": 4673,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4703,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4696,
											"end": 4697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4859,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4716,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4811,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4847,
											"end": 4852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4820,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4853,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4820,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4859,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 5216,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4865,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4935,
											"end": 4941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 4986,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4970,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4955,
											"end": 4987,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4952,
											"end": 5071,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4952,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4952,
											"end": 5071,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4990,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4990,
											"end": 5069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 5069,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4990,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4952,
											"end": 5071,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4952,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5191,
											"end": 5198,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5180,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5135,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5135,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5135,
											"end": 5199,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5135,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5125,
											"end": 5199,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5125,
											"end": 5199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 5216,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 5216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 5216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 5216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 5216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5402,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5222,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5270,
											"end": 5347,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5267,
											"end": 5268,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5364,
											"end": 5365,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5357,
											"end": 5372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5388,
											"end": 5389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5396,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5408,
											"end": 5599,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 5408,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5448,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5485,
											"end": 5486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5467,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5467,
											"end": 5487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5467,
											"end": 5487,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5467,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5501,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5521,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5501,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5496,
											"end": 5521,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5496,
											"end": 5521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5568,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5563,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5559,
											"end": 5569,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5592,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 5556,
											"end": 5592,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5572,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5592,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 5556,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5408,
											"end": 5599,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5408,
											"end": 5599,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5408,
											"end": 5599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5408,
											"end": 5599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5408,
											"end": 5599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5785,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5605,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5653,
											"end": 5730,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5650,
											"end": 5651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5731,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5747,
											"end": 5748,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5740,
											"end": 5755,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5774,
											"end": 5778,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5771,
											"end": 5772,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5779,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5976,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5791,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 5866,
											"end": 5867,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5848,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5848,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5848,
											"end": 5868,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 5848,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 5900,
											"end": 5901,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5882,
											"end": 5902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5902,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 5882,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5902,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5922,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5911,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5911,
											"end": 5946,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5926,
											"end": 5944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5911,
											"end": 5946,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5911,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5968,
											"end": 5969,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5965,
											"end": 5966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 5970,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5956,
											"end": 5970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5956,
											"end": 5970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6176,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5982,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6022,
											"end": 6026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6060,
											"end": 6061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6042,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6037,
											"end": 6062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6037,
											"end": 6062,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6076,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6096,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6122,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6144,
											"end": 6145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6138,
											"end": 6142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6135,
											"end": 6146,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6132,
											"end": 6169,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6132,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 6132,
											"end": 6169,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6149,
											"end": 6167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6132,
											"end": 6169,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 6132,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6176,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6362,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 6182,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6230,
											"end": 6307,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6308,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6331,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 6324,
											"end": 6325,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6355,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6348,
											"end": 6349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6356,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/AggregatorOracle.sol",
								"contracts/interfaces/IAggregatorOracle.sol",
								"contracts/interfaces/IPriceOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addOracle(address,address)": "f0ca4adb",
							"getMedianPrice(address)": "adfe34f7",
							"owner()": "8da5cb5b",
							"removeOracle(address,address)": "c32eae76",
							"renounceOwnership()": "715018a6",
							"tokenOracles(address,uint256)": "4c12c854",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"addOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getMedianPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"removeOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOracles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AggregatorOracle.sol\":\"AggregatorOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/AggregatorOracle.sol\":{\"keccak256\":\"0xe95b3747d9bc40e5eba655031ed4ecd150bec9a724883fc7eca68f0cbea935e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbd7c9407472e7b4bba0378b061d3134d1e84bb8214e4efa7515829b1890b87a\",\"dweb:/ipfs/QmZaAnCyMsJMr9XqL49r8XPURa8LEAqRGXzhMYfQJW7fMR\"]},\"contracts/interfaces/IAggregatorOracle.sol\":{\"keccak256\":\"0xc2f03481e941de4bff7cf12e4bea57a15e4a916af5153f85c09bafe85cc23755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0be399f00c12fda26f17529a1a5b01b542eed2d978f02fffdab96a98bd2e44cd\",\"dweb:/ipfs/Qma9ifZGLEgWt3H38MeHrJYEfNjdPZjpXy6Cw9RAaRtfZq\"]},\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4764520c89818be193a76d9ce9d68211ad1be49e90d7d16830b19f97b58defb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d3f684900d1feb9fe67d89223d4ccba855d2e81c7afdf68144ac2f01660a46d\",\"dweb:/ipfs/QmYsfLuyxoZ2cGmReghasGF1kXQzpKob3Abkzx8Wg7t6QL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/AggregatorOracle.sol:AggregatorOracle",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 191,
								"contract": "contracts/AggregatorOracle.sol:AggregatorOracle",
								"label": "tokenOracles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IAggregatorOracle.sol": {
				"IAggregatorOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "addOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getMedianPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "removeOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addOracle(address,address)": "f0ca4adb",
							"getMedianPrice(address)": "adfe34f7",
							"removeOracle(address,address)": "c32eae76"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"addOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getMedianPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"removeOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAggregatorOracle.sol\":\"IAggregatorOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregatorOracle.sol\":{\"keccak256\":\"0xc2f03481e941de4bff7cf12e4bea57a15e4a916af5153f85c09bafe85cc23755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0be399f00c12fda26f17529a1a5b01b542eed2d978f02fffdab96a98bd2e44cd\",\"dweb:/ipfs/Qma9ifZGLEgWt3H38MeHrJYEfNjdPZjpXy6Cw9RAaRtfZq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"IPriceOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPrice(address)": "41976e09"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x4764520c89818be193a76d9ce9d68211ad1be49e90d7d16830b19f97b58defb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d3f684900d1feb9fe67d89223d4ccba855d2e81c7afdf68144ac2f01660a46d\",\"dweb:/ipfs/QmYsfLuyxoZ2cGmReghasGF1kXQzpKob3Abkzx8Wg7t6QL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/AggregatorOracle.sol": {
				"ast": {
					"absolutePath": "contracts/AggregatorOracle.sol",
					"exportedSymbols": {
						"AggregatorOracle": [
							406
						],
						"Context": [
							177
						],
						"IAggregatorOracle": [
							430
						],
						"IPriceOracle": [
							440
						],
						"Ownable": [
							147
						]
					},
					"id": 407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "contracts/interfaces/IAggregatorOracle.sol",
							"file": "./interfaces/IAggregatorOracle.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 431,
							"src": "58:44:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPriceOracle.sol",
							"file": "./interfaces/IPriceOracle.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 441,
							"src": "103:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 148,
							"src": "143:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "IAggregatorOracle",
										"nameLocations": [
											"226:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 430,
										"src": "226:17:2"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "226:17:2"
								},
								{
									"baseName": {
										"id": 185,
										"name": "Ownable",
										"nameLocations": [
											"245:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "245:7:2"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "245:7:2"
								}
							],
							"canonicalName": "AggregatorOracle",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 406,
							"linearizedBaseContracts": [
								406,
								147,
								177,
								430
							],
							"name": "AggregatorOracle",
							"nameLocation": "206:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "4c12c854",
									"id": 191,
									"mutability": "mutable",
									"name": "tokenOracles",
									"nameLocation": "296:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 406,
									"src": "259:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 190,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 187,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "267:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "259:29:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 188,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "278:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 189,
											"nodeType": "ArrayTypeName",
											"src": "278:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "371:2:2",
										"statements": []
									},
									"id": 200,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 196,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 193,
													"src": "357:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 197,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 195,
												"name": "Ownable",
												"nameLocations": [
													"349:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "349:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "349:21:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "335:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "327:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:22:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:0:2"
									},
									"scope": 406,
									"src": "315:58:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										422
									],
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "448:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "483:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 209,
																"name": "tokenOracles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "458:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 211,
															"indexExpression": {
																"id": 210,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "471:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "458:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "478:4:2",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "458:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "458:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "458:32:2"
											}
										]
									},
									"functionSelector": "f0ca4adb",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "onlyOwner",
												"nameLocations": [
													"438:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "438:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "438:9:2"
										}
									],
									"name": "addOracle",
									"nameLocation": "388:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "406:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "398:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "421:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "413:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:31:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:0:2"
									},
									"scope": 406,
									"src": "379:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										429
									],
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "575:295:2",
										"statements": [
											{
												"assignments": [
													230
												],
												"declarations": [
													{
														"constant": false,
														"id": 230,
														"mutability": "mutable",
														"name": "oracles",
														"nameLocation": "603:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "585:25:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 228,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "585:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 229,
															"nodeType": "ArrayTypeName",
															"src": "585:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"baseExpression": {
														"id": 231,
														"name": "tokenOracles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "613:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 233,
													"indexExpression": {
														"id": 232,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "626:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "613:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "585:47:2"
											},
											{
												"body": {
													"id": 270,
													"nodeType": "Block",
													"src": "687:177:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 246,
																		"name": "oracles",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "705:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 248,
																	"indexExpression": {
																		"id": 247,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "713:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "705:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 249,
																	"name": "oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "719:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "705:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 269,
															"nodeType": "IfStatement",
															"src": "701:153:2",
															"trueBody": {
																"id": 268,
																"nodeType": "Block",
																"src": "727:127:2",
																"statements": [
																	{
																		"expression": {
																			"id": 260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 251,
																					"name": "oracles",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 230,
																					"src": "745:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[] storage pointer"
																					}
																				},
																				"id": 253,
																				"indexExpression": {
																					"id": 252,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 236,
																					"src": "753:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "745:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 254,
																					"name": "oracles",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 230,
																					"src": "758:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[] storage pointer"
																					}
																				},
																				"id": 259,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 258,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 255,
																							"name": "oracles",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 230,
																							"src": "766:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																								"typeString": "address[] storage pointer"
																							}
																						},
																						"id": 256,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "774:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "766:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "783:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "766:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "758:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "745:40:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 261,
																		"nodeType": "ExpressionStatement",
																		"src": "745:40:2"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 262,
																					"name": "oracles",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 230,
																					"src": "803:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[] storage pointer"
																					}
																				},
																				"id": 264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "811:3:2",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "803:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "803:13:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 266,
																		"nodeType": "ExpressionStatement",
																		"src": "803:13:2"
																	},
																	{
																		"id": 267,
																		"nodeType": "Break",
																		"src": "834:5:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 239,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "662:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 240,
															"name": "oracles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "666:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "674:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "666:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "662:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"initializationExpression": {
													"assignments": [
														236
													],
													"declarations": [
														{
															"constant": false,
															"id": 236,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "655:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 271,
															"src": "647:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 235,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "647:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 238,
													"initialValue": {
														"hexValue": "30",
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "659:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "647:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "682:3:2",
														"subExpression": {
															"id": 243,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "682:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 245,
													"nodeType": "ExpressionStatement",
													"src": "682:3:2"
												},
												"nodeType": "ForStatement",
												"src": "642:222:2"
											}
										]
									},
									"functionSelector": "c32eae76",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 224,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 223,
												"name": "onlyOwner",
												"nameLocations": [
													"565:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "565:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "565:9:2"
										}
									],
									"name": "removeOracle",
									"nameLocation": "512:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "533:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "525:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "548:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "540:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:31:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:2"
									},
									"scope": 406,
									"src": "503:367:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										415
									],
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "956:728:2",
										"statements": [
											{
												"assignments": [
													285
												],
												"declarations": [
													{
														"constant": false,
														"id": 285,
														"mutability": "mutable",
														"name": "oracles",
														"nameLocation": "983:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 404,
														"src": "966:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 283,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "966:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 284,
															"nodeType": "ArrayTypeName",
															"src": "966:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"initialValue": {
													"baseExpression": {
														"id": 286,
														"name": "tokenOracles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "993:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 288,
													"indexExpression": {
														"id": 287,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "993:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "966:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 291,
																	"name": "oracles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "1030:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1038:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1030:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1047:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1030:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206f7261636c657320666f7220746f6b656e",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1050:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed",
																"typeString": "literal_string \"No oracles for token\""
															},
															"value": "No oracles for token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9eb89294fdf56d0a73b1b1c3f3ff48a5ff947517b05a38b847c190abef03d8ed",
																"typeString": "literal_string \"No oracles for token\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1022:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1022:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "1022:51:2"
											},
											{
												"assignments": [
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "prices",
														"nameLocation": "1101:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 404,
														"src": "1084:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 300,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1084:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 301,
															"nodeType": "ArrayTypeName",
															"src": "1084:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 309,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 306,
																"name": "oracles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "1124:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1132:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1124:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1110:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 303,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1114:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 304,
															"nodeType": "ArrayTypeName",
															"src": "1114:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1110:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1084:55:2"
											},
											{
												"body": {
													"id": 334,
													"nodeType": "Block",
													"src": "1194:77:2",
													"statements": [
														{
															"expression": {
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 321,
																		"name": "prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "1208:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 323,
																	"indexExpression": {
																		"id": 322,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "1215:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1208:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 330,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "1254:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 325,
																						"name": "oracles",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 285,
																						"src": "1233:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 327,
																					"indexExpression": {
																						"id": 326,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 311,
																						"src": "1241:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1233:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 324,
																				"name": "IPriceOracle",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 440,
																				"src": "1220:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IPriceOracle_$440_$",
																					"typeString": "type(contract IPriceOracle)"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1220:24:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IPriceOracle_$440",
																				"typeString": "contract IPriceOracle"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1245:8:2",
																		"memberName": "getPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 439,
																		"src": "1220:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1220:40:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1208:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 333,
															"nodeType": "ExpressionStatement",
															"src": "1208:52:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 314,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "1169:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 315,
															"name": "oracles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "1173:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1181:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1173:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1169:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"initializationExpression": {
													"assignments": [
														311
													],
													"declarations": [
														{
															"constant": false,
															"id": 311,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1162:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 335,
															"src": "1154:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 310,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1154:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 313,
													"initialValue": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1166:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1154:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1189:3:2",
														"subExpression": {
															"id": 318,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "1189:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 320,
													"nodeType": "ExpressionStatement",
													"src": "1189:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1149:122:2"
											},
											{
												"body": {
													"id": 391,
													"nodeType": "Block",
													"src": "1325:277:2",
													"statements": [
														{
															"body": {
																"id": 389,
																"nodeType": "Block",
																"src": "1387:205:2",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 360,
																					"name": "prices",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "1409:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 362,
																				"indexExpression": {
																					"id": 361,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 348,
																					"src": "1416:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1409:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 363,
																					"name": "prices",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "1421:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 365,
																				"indexExpression": {
																					"id": 364,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 337,
																					"src": "1428:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1421:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1409:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 388,
																		"nodeType": "IfStatement",
																		"src": "1405:173:2",
																		"trueBody": {
																			"id": 387,
																			"nodeType": "Block",
																			"src": "1432:146:2",
																			"statements": [
																				{
																					"assignments": [
																						368
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 368,
																							"mutability": "mutable",
																							"name": "temp",
																							"nameLocation": "1462:4:2",
																							"nodeType": "VariableDeclaration",
																							"scope": 387,
																							"src": "1454:12:2",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 367,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1454:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 372,
																					"initialValue": {
																						"baseExpression": {
																							"id": 369,
																							"name": "prices",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 302,
																							"src": "1469:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 371,
																						"indexExpression": {
																							"id": 370,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 337,
																							"src": "1476:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1469:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "1454:24:2"
																				},
																				{
																					"expression": {
																						"id": 379,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 373,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 302,
																								"src": "1500:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 375,
																							"indexExpression": {
																								"id": 374,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 337,
																								"src": "1507:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "1500:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 376,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 302,
																								"src": "1512:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 378,
																							"indexExpression": {
																								"id": 377,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 348,
																								"src": "1519:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1512:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1500:21:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 380,
																					"nodeType": "ExpressionStatement",
																					"src": "1500:21:2"
																				},
																				{
																					"expression": {
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 381,
																								"name": "prices",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 302,
																								"src": "1543:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 383,
																							"indexExpression": {
																								"id": 382,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 348,
																								"src": "1550:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "1543:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 384,
																							"name": "temp",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 368,
																							"src": "1555:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1543:16:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 386,
																					"nodeType": "ExpressionStatement",
																					"src": "1543:16:2"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 353,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "1363:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 354,
																		"name": "prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "1367:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1374:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1367:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1363:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 390,
															"initializationExpression": {
																"assignments": [
																	348
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 348,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "1352:1:2",
																		"nodeType": "VariableDeclaration",
																		"scope": 390,
																		"src": "1344:9:2",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 347,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1344:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 352,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 349,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "1356:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1360:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1356:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1344:17:2"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "1382:3:2",
																	"subExpression": {
																		"id": 357,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "1382:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 359,
																"nodeType": "ExpressionStatement",
																"src": "1382:3:2"
															},
															"nodeType": "ForStatement",
															"src": "1339:253:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 340,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "1301:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 341,
															"name": "prices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1305:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1312:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1305:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1301:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 392,
												"initializationExpression": {
													"assignments": [
														337
													],
													"declarations": [
														{
															"constant": false,
															"id": 337,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1294:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 392,
															"src": "1286:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 336,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1286:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 339,
													"initialValue": {
														"hexValue": "30",
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1298:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1286:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1320:3:2",
														"subExpression": {
															"id": 344,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1320:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 346,
													"nodeType": "ExpressionStatement",
													"src": "1320:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1281:321:2"
											},
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "median",
														"nameLocation": "1620:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 404,
														"src": "1612:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1612:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"baseExpression": {
														"id": 395,
														"name": "prices",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "1629:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 400,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 396,
																"name": "prices",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "1636:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1643:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1636:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1652:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "1636:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1629:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1612:42:2"
											},
											{
												"expression": {
													"id": 402,
													"name": "median",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 394,
													"src": "1671:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 280,
												"id": 403,
												"nodeType": "Return",
												"src": "1664:13:2"
											}
										]
									},
									"functionSelector": "adfe34f7",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMedianPrice",
									"nameLocation": "885:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 277,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "929:8:2"
									},
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "908:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "900:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:15:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "947:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:9:2"
									},
									"scope": 406,
									"src": "876:808:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 407,
							"src": "197:1489:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:1655:2"
				},
				"id": 2
			},
			"contracts/interfaces/IAggregatorOracle.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IAggregatorOracle.sol",
					"exportedSymbols": {
						"IAggregatorOracle": [
							430
						]
					},
					"id": 431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAggregatorOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 430,
							"linearizedBaseContracts": [
								430
							],
							"name": "IAggregatorOracle",
							"nameLocation": "68:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "adfe34f7",
									"id": 415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMedianPrice",
									"nameLocation": "101:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "124:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "116:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:15:3"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "154:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:9:3"
									},
									"scope": 430,
									"src": "92:71:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f0ca4adb",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addOracle",
									"nameLocation": "177:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "195:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "187:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "210:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "202:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:31:3"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:0:3"
									},
									"scope": 430,
									"src": "168:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c32eae76",
									"id": 429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeOracle",
									"nameLocation": "241:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "262:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "254:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "277:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "269:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:31:3"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:0:3"
									},
									"scope": 430,
									"src": "232:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 431,
							"src": "58:238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:265:3"
				},
				"id": 3
			},
			"contracts/interfaces/IPriceOracle.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPriceOracle.sol",
					"exportedSymbols": {
						"IPriceOracle": [
							440
						]
					},
					"id": 441,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPriceOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 440,
							"linearizedBaseContracts": [
								440
							],
							"name": "IPriceOracle",
							"nameLocation": "68:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "41976e09",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "96:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "113:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "105:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "105:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "104:15:4"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "143:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:9:4"
									},
									"scope": 440,
									"src": "87:65:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 441,
							"src": "58:96:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:123:4"
				},
				"id": 4
			}
		}
	}
}